
rosilproject.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000022c  00800100  00001e3a  00001ece  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001e3a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000028e  0080032c  0080032c  000020fa  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000020fa  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  0000212c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000a8  00000000  00000000  00002168  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000013e4  00000000  00000000  00002210  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000008fe  00000000  00000000  000035f4  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000980  00000000  00000000  00003ef2  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000003ac  00000000  00000000  00004874  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000007d8  00000000  00000000  00004c20  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000ccd  00000000  00000000  000053f8  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000098  00000000  00000000  000060c5  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	86 c0       	rjmp	.+268    	; 0x10e <__ctors_end>
       2:	00 00       	nop
       4:	a3 c0       	rjmp	.+326    	; 0x14c <__vector_1>
       6:	00 00       	nop
       8:	c3 c0       	rjmp	.+390    	; 0x190 <__vector_2>
       a:	00 00       	nop
       c:	9e c0       	rjmp	.+316    	; 0x14a <__bad_interrupt>
       e:	00 00       	nop
      10:	9c c0       	rjmp	.+312    	; 0x14a <__bad_interrupt>
      12:	00 00       	nop
      14:	9a c0       	rjmp	.+308    	; 0x14a <__bad_interrupt>
      16:	00 00       	nop
      18:	98 c0       	rjmp	.+304    	; 0x14a <__bad_interrupt>
      1a:	00 00       	nop
      1c:	96 c0       	rjmp	.+300    	; 0x14a <__bad_interrupt>
      1e:	00 00       	nop
      20:	94 c0       	rjmp	.+296    	; 0x14a <__bad_interrupt>
      22:	00 00       	nop
      24:	92 c0       	rjmp	.+292    	; 0x14a <__bad_interrupt>
      26:	00 00       	nop
      28:	90 c0       	rjmp	.+288    	; 0x14a <__bad_interrupt>
      2a:	00 00       	nop
      2c:	8e c0       	rjmp	.+284    	; 0x14a <__bad_interrupt>
      2e:	00 00       	nop
      30:	8c c0       	rjmp	.+280    	; 0x14a <__bad_interrupt>
      32:	00 00       	nop
      34:	8a c0       	rjmp	.+276    	; 0x14a <__bad_interrupt>
      36:	00 00       	nop
      38:	88 c0       	rjmp	.+272    	; 0x14a <__bad_interrupt>
      3a:	00 00       	nop
      3c:	86 c0       	rjmp	.+268    	; 0x14a <__bad_interrupt>
      3e:	00 00       	nop
      40:	fc c5       	rjmp	.+3064   	; 0xc3a <__vector_16>
      42:	00 00       	nop
      44:	82 c0       	rjmp	.+260    	; 0x14a <__bad_interrupt>
      46:	00 00       	nop
      48:	80 c0       	rjmp	.+256    	; 0x14a <__bad_interrupt>
      4a:	00 00       	nop
      4c:	7e c0       	rjmp	.+252    	; 0x14a <__bad_interrupt>
      4e:	00 00       	nop
      50:	7c c0       	rjmp	.+248    	; 0x14a <__bad_interrupt>
      52:	00 00       	nop
      54:	7a c0       	rjmp	.+244    	; 0x14a <__bad_interrupt>
      56:	00 00       	nop
      58:	78 c0       	rjmp	.+240    	; 0x14a <__bad_interrupt>
      5a:	00 00       	nop
      5c:	76 c0       	rjmp	.+236    	; 0x14a <__bad_interrupt>
      5e:	00 00       	nop
      60:	74 c0       	rjmp	.+232    	; 0x14a <__bad_interrupt>
      62:	00 00       	nop
      64:	72 c0       	rjmp	.+228    	; 0x14a <__bad_interrupt>
      66:	00 00       	nop
      68:	70 c0       	rjmp	.+224    	; 0x14a <__bad_interrupt>
      6a:	00 00       	nop
      6c:	6e c0       	rjmp	.+220    	; 0x14a <__bad_interrupt>
      6e:	00 00       	nop
      70:	6c c0       	rjmp	.+216    	; 0x14a <__bad_interrupt>
      72:	00 00       	nop
      74:	6a c0       	rjmp	.+212    	; 0x14a <__bad_interrupt>
      76:	00 00       	nop
      78:	68 c0       	rjmp	.+208    	; 0x14a <__bad_interrupt>
      7a:	00 00       	nop
      7c:	66 c0       	rjmp	.+204    	; 0x14a <__bad_interrupt>
      7e:	00 00       	nop
      80:	64 c0       	rjmp	.+200    	; 0x14a <__bad_interrupt>
      82:	00 00       	nop
      84:	62 c0       	rjmp	.+196    	; 0x14a <__bad_interrupt>
      86:	00 00       	nop
      88:	60 c0       	rjmp	.+192    	; 0x14a <__bad_interrupt>
      8a:	00 00       	nop
      8c:	08 00       	.word	0x0008	; ????
      8e:	00 00       	nop
      90:	be 92       	st	-X, r11
      92:	24 49       	sbci	r18, 0x94	; 148
      94:	12 3e       	cpi	r17, 0xE2	; 226
      96:	ab aa       	std	Y+51, r10	; 0x33
      98:	aa 2a       	or	r10, r26
      9a:	be cd       	rjmp	.-1156   	; 0xfffffc18 <__eeprom_end+0xff7efc18>
      9c:	cc cc       	rjmp	.-1640   	; 0xfffffa36 <__eeprom_end+0xff7efa36>
      9e:	4c 3e       	cpi	r20, 0xEC	; 236
      a0:	00 00       	nop
      a2:	00 80       	ld	r0, Z
      a4:	be ab       	std	Y+54, r27	; 0x36
      a6:	aa aa       	std	Y+50, r10	; 0x32
      a8:	aa 3e       	cpi	r26, 0xEA	; 234
      aa:	00 00       	nop
      ac:	00 00       	nop
      ae:	bf 00       	.word	0x00bf	; ????
      b0:	00 00       	nop
      b2:	80 3f       	cpi	r24, 0xF0	; 240
      b4:	00 00       	nop
      b6:	00 00       	nop
      b8:	00 08       	sbc	r0, r0
      ba:	41 78       	andi	r20, 0x81	; 129
      bc:	d3 bb       	out	0x13, r29	; 19
      be:	43 87       	std	Z+11, r20	; 0x0b
      c0:	d1 13       	cpse	r29, r17
      c2:	3d 19       	sub	r19, r13
      c4:	0e 3c       	cpi	r16, 0xCE	; 206
      c6:	c3 bd       	out	0x23, r28	; 35
      c8:	42 82       	std	Z+2, r4	; 0x02
      ca:	ad 2b       	or	r26, r29
      cc:	3e 68       	ori	r19, 0x8E	; 142
      ce:	ec 82       	std	Y+4, r14	; 0x04
      d0:	76 be       	out	0x36, r7	; 54
      d2:	d9 8f       	std	Y+25, r29	; 0x19
      d4:	e1 a9       	ldd	r30, Z+49	; 0x31
      d6:	3e 4c       	sbci	r19, 0xCE	; 206
      d8:	80 ef       	ldi	r24, 0xF0	; 240
      da:	ff be       	out	0x3f, r15	; 63
      dc:	01 c4       	rjmp	.+2050   	; 0x8e0 <_Z13Kalman_Filterd+0xbe>
      de:	ff 7f       	andi	r31, 0xFF	; 255
      e0:	3f 00       	.word	0x003f	; ????
      e2:	00 00       	nop
      e4:	00 00       	nop
      e6:	07 63       	ori	r16, 0x37	; 55
      e8:	42 36       	cpi	r20, 0x62	; 98
      ea:	b7 9b       	sbis	0x16, 7	; 22
      ec:	d8 a7       	std	Y+40, r29	; 0x28
      ee:	1a 39       	cpi	r17, 0x9A	; 154
      f0:	68 56       	subi	r22, 0x68	; 104
      f2:	18 ae       	std	Y+56, r1	; 0x38
      f4:	ba ab       	std	Y+50, r27	; 0x32
      f6:	55 8c       	ldd	r5, Z+29	; 0x1d
      f8:	1d 3c       	cpi	r17, 0xCD	; 205
      fa:	b7 cc       	rjmp	.-1682   	; 0xfffffa6a <__eeprom_end+0xff7efa6a>
      fc:	57 63       	ori	r21, 0x37	; 55
      fe:	bd 6d       	ori	r27, 0xDD	; 221
     100:	ed fd       	.word	0xfded	; ????
     102:	75 3e       	cpi	r23, 0xE5	; 229
     104:	f6 17       	cp	r31, r22
     106:	72 31       	cpi	r23, 0x12	; 18
     108:	bf 00       	.word	0x00bf	; ????
     10a:	00 00       	nop
     10c:	80 3f       	cpi	r24, 0xF0	; 240

0000010e <__ctors_end>:
     10e:	11 24       	eor	r1, r1
     110:	1f be       	out	0x3f, r1	; 63
     112:	cf ef       	ldi	r28, 0xFF	; 255
     114:	d0 e1       	ldi	r29, 0x10	; 16
     116:	de bf       	out	0x3e, r29	; 62
     118:	cd bf       	out	0x3d, r28	; 61

0000011a <__do_copy_data>:
     11a:	13 e0       	ldi	r17, 0x03	; 3
     11c:	a0 e0       	ldi	r26, 0x00	; 0
     11e:	b1 e0       	ldi	r27, 0x01	; 1
     120:	ea e3       	ldi	r30, 0x3A	; 58
     122:	fe e1       	ldi	r31, 0x1E	; 30
     124:	00 e0       	ldi	r16, 0x00	; 0
     126:	0b bf       	out	0x3b, r16	; 59
     128:	02 c0       	rjmp	.+4      	; 0x12e <__do_copy_data+0x14>
     12a:	07 90       	elpm	r0, Z+
     12c:	0d 92       	st	X+, r0
     12e:	ac 32       	cpi	r26, 0x2C	; 44
     130:	b1 07       	cpc	r27, r17
     132:	d9 f7       	brne	.-10     	; 0x12a <__do_copy_data+0x10>

00000134 <__do_clear_bss>:
     134:	25 e0       	ldi	r18, 0x05	; 5
     136:	ac e2       	ldi	r26, 0x2C	; 44
     138:	b3 e0       	ldi	r27, 0x03	; 3
     13a:	01 c0       	rjmp	.+2      	; 0x13e <.do_clear_bss_start>

0000013c <.do_clear_bss_loop>:
     13c:	1d 92       	st	X+, r1

0000013e <.do_clear_bss_start>:
     13e:	aa 3b       	cpi	r26, 0xBA	; 186
     140:	b2 07       	cpc	r27, r18
     142:	e1 f7       	brne	.-8      	; 0x13c <.do_clear_bss_loop>
     144:	cc d4       	rcall	.+2456   	; 0xade <main>
     146:	0c 94 1b 0f 	jmp	0x1e36	; 0x1e36 <_exit>

0000014a <__bad_interrupt>:
     14a:	5a cf       	rjmp	.-332    	; 0x0 <__vectors>

0000014c <__vector_1>:

// USART1 데이터 수신 함수
unsigned char Uart_Receive(void){
   while(!(UCSR1A & (1<<RXC1)));
   return UDR1;//받은 데이터를 리턴
}
     14c:	1f 92       	push	r1
     14e:	0f 92       	push	r0
     150:	0f b6       	in	r0, 0x3f	; 63
     152:	0f 92       	push	r0
     154:	11 24       	eor	r1, r1
     156:	8f 93       	push	r24
     158:	9f 93       	push	r25
     15a:	80 91 8c 05 	lds	r24, 0x058C	; 0x80058c <PLOT_NUM>
     15e:	90 91 8d 05 	lds	r25, 0x058D	; 0x80058d <PLOT_NUM+0x1>
     162:	05 97       	sbiw	r24, 0x05	; 5
     164:	29 f4       	brne	.+10     	; 0x170 <__vector_1+0x24>
     166:	10 92 8d 05 	sts	0x058D, r1	; 0x80058d <PLOT_NUM+0x1>
     16a:	10 92 8c 05 	sts	0x058C, r1	; 0x80058c <PLOT_NUM>
     16e:	09 c0       	rjmp	.+18     	; 0x182 <__vector_1+0x36>
     170:	80 91 8c 05 	lds	r24, 0x058C	; 0x80058c <PLOT_NUM>
     174:	90 91 8d 05 	lds	r25, 0x058D	; 0x80058d <PLOT_NUM+0x1>
     178:	01 96       	adiw	r24, 0x01	; 1
     17a:	90 93 8d 05 	sts	0x058D, r25	; 0x80058d <PLOT_NUM+0x1>
     17e:	80 93 8c 05 	sts	0x058C, r24	; 0x80058c <PLOT_NUM>
     182:	9f 91       	pop	r25
     184:	8f 91       	pop	r24
     186:	0f 90       	pop	r0
     188:	0f be       	out	0x3f, r0	; 63
     18a:	0f 90       	pop	r0
     18c:	1f 90       	pop	r1
     18e:	18 95       	reti

00000190 <__vector_2>:
     190:	1f 92       	push	r1
     192:	0f 92       	push	r0
     194:	0f b6       	in	r0, 0x3f	; 63
     196:	0f 92       	push	r0
     198:	11 24       	eor	r1, r1
     19a:	0f 90       	pop	r0
     19c:	0f be       	out	0x3f, r0	; 63
     19e:	0f 90       	pop	r0
     1a0:	1f 90       	pop	r1
     1a2:	18 95       	reti

000001a4 <_Z7FIR_LPFd>:
     1a4:	cf 92       	push	r12
     1a6:	df 92       	push	r13
     1a8:	ef 92       	push	r14
     1aa:	ff 92       	push	r15
     1ac:	0f 93       	push	r16
     1ae:	1f 93       	push	r17
     1b0:	cf 93       	push	r28
     1b2:	df 93       	push	r29
     1b4:	cd b7       	in	r28, 0x3d	; 61
     1b6:	de b7       	in	r29, 0x3e	; 62
     1b8:	c0 59       	subi	r28, 0x90	; 144
     1ba:	d1 40       	sbci	r29, 0x01	; 1
     1bc:	0f b6       	in	r0, 0x3f	; 63
     1be:	f8 94       	cli
     1c0:	de bf       	out	0x3e, r29	; 62
     1c2:	0f be       	out	0x3f, r0	; 63
     1c4:	cd bf       	out	0x3d, r28	; 61
     1c6:	fe 01       	movw	r30, r28
     1c8:	31 96       	adiw	r30, 0x01	; 1
     1ca:	20 e9       	ldi	r18, 0x90	; 144
     1cc:	31 e0       	ldi	r19, 0x01	; 1
     1ce:	df 01       	movw	r26, r30
     1d0:	a9 01       	movw	r20, r18
     1d2:	1d 92       	st	X+, r1
     1d4:	41 50       	subi	r20, 0x01	; 1
     1d6:	50 40       	sbci	r21, 0x00	; 0
     1d8:	e1 f7       	brne	.-8      	; 0x1d2 <_Z7FIR_LPFd+0x2e>
     1da:	60 93 44 03 	sts	0x0344, r22	; 0x800344 <FIR_input>
     1de:	70 93 45 03 	sts	0x0345, r23	; 0x800345 <FIR_input+0x1>
     1e2:	80 93 46 03 	sts	0x0346, r24	; 0x800346 <FIR_input+0x2>
     1e6:	90 93 47 03 	sts	0x0347, r25	; 0x800347 <FIR_input+0x3>
     1ea:	10 92 40 03 	sts	0x0340, r1	; 0x800340 <FIR>
     1ee:	10 92 41 03 	sts	0x0341, r1	; 0x800341 <FIR+0x1>
     1f2:	10 92 42 03 	sts	0x0342, r1	; 0x800342 <FIR+0x2>
     1f6:	10 92 43 03 	sts	0x0343, r1	; 0x800343 <FIR+0x3>
     1fa:	00 e0       	ldi	r16, 0x00	; 0
     1fc:	10 e0       	ldi	r17, 0x00	; 0
     1fe:	98 01       	movw	r18, r16
     200:	22 0f       	add	r18, r18
     202:	33 1f       	adc	r19, r19
     204:	22 0f       	add	r18, r18
     206:	33 1f       	adc	r19, r19
     208:	f9 01       	movw	r30, r18
     20a:	e0 5e       	subi	r30, 0xE0	; 224
     20c:	fe 4f       	sbci	r31, 0xFE	; 254
     20e:	60 81       	ld	r22, Z
     210:	71 81       	ldd	r23, Z+1	; 0x01
     212:	82 81       	ldd	r24, Z+2	; 0x02
     214:	93 81       	ldd	r25, Z+3	; 0x03
     216:	f9 01       	movw	r30, r18
     218:	ec 5b       	subi	r30, 0xBC	; 188
     21a:	fc 4f       	sbci	r31, 0xFC	; 252
     21c:	20 81       	ld	r18, Z
     21e:	31 81       	ldd	r19, Z+1	; 0x01
     220:	42 81       	ldd	r20, Z+2	; 0x02
     222:	53 81       	ldd	r21, Z+3	; 0x03
     224:	c0 90 40 03 	lds	r12, 0x0340	; 0x800340 <FIR>
     228:	d0 90 41 03 	lds	r13, 0x0341	; 0x800341 <FIR+0x1>
     22c:	e0 90 42 03 	lds	r14, 0x0342	; 0x800342 <FIR+0x2>
     230:	f0 90 43 03 	lds	r15, 0x0343	; 0x800343 <FIR+0x3>
     234:	0e 94 71 0d 	call	0x1ae2	; 0x1ae2 <__mulsf3>
     238:	a7 01       	movw	r20, r14
     23a:	96 01       	movw	r18, r12
     23c:	0e 94 6f 0b 	call	0x16de	; 0x16de <__addsf3>
     240:	60 93 40 03 	sts	0x0340, r22	; 0x800340 <FIR>
     244:	70 93 41 03 	sts	0x0341, r23	; 0x800341 <FIR+0x1>
     248:	80 93 42 03 	sts	0x0342, r24	; 0x800342 <FIR+0x2>
     24c:	90 93 43 03 	sts	0x0343, r25	; 0x800343 <FIR+0x3>
     250:	0f 5f       	subi	r16, 0xFF	; 255
     252:	1f 4f       	sbci	r17, 0xFF	; 255
     254:	05 36       	cpi	r16, 0x65	; 101
     256:	11 05       	cpc	r17, r1
     258:	91 f6       	brne	.-92     	; 0x1fe <_Z7FIR_LPFd+0x5a>
     25a:	de 01       	movw	r26, r28
     25c:	11 96       	adiw	r26, 0x01	; 1
     25e:	9d 01       	movw	r18, r26
     260:	80 e0       	ldi	r24, 0x00	; 0
     262:	90 e0       	ldi	r25, 0x00	; 0
     264:	fc 01       	movw	r30, r24
     266:	ee 0f       	add	r30, r30
     268:	ff 1f       	adc	r31, r31
     26a:	ee 0f       	add	r30, r30
     26c:	ff 1f       	adc	r31, r31
     26e:	ec 5b       	subi	r30, 0xBC	; 188
     270:	fc 4f       	sbci	r31, 0xFC	; 252
     272:	40 81       	ld	r20, Z
     274:	51 81       	ldd	r21, Z+1	; 0x01
     276:	62 81       	ldd	r22, Z+2	; 0x02
     278:	73 81       	ldd	r23, Z+3	; 0x03
     27a:	f9 01       	movw	r30, r18
     27c:	41 93       	st	Z+, r20
     27e:	51 93       	st	Z+, r21
     280:	61 93       	st	Z+, r22
     282:	71 93       	st	Z+, r23
     284:	9f 01       	movw	r18, r30
     286:	01 96       	adiw	r24, 0x01	; 1
     288:	84 36       	cpi	r24, 0x64	; 100
     28a:	91 05       	cpc	r25, r1
     28c:	59 f7       	brne	.-42     	; 0x264 <_Z7FIR_LPFd+0xc0>
     28e:	80 e0       	ldi	r24, 0x00	; 0
     290:	90 e0       	ldi	r25, 0x00	; 0
     292:	01 96       	adiw	r24, 0x01	; 1
     294:	4d 91       	ld	r20, X+
     296:	5d 91       	ld	r21, X+
     298:	6d 91       	ld	r22, X+
     29a:	7d 91       	ld	r23, X+
     29c:	fc 01       	movw	r30, r24
     29e:	ee 0f       	add	r30, r30
     2a0:	ff 1f       	adc	r31, r31
     2a2:	ee 0f       	add	r30, r30
     2a4:	ff 1f       	adc	r31, r31
     2a6:	ec 5b       	subi	r30, 0xBC	; 188
     2a8:	fc 4f       	sbci	r31, 0xFC	; 252
     2aa:	40 83       	st	Z, r20
     2ac:	51 83       	std	Z+1, r21	; 0x01
     2ae:	62 83       	std	Z+2, r22	; 0x02
     2b0:	73 83       	std	Z+3, r23	; 0x03
     2b2:	84 36       	cpi	r24, 0x64	; 100
     2b4:	91 05       	cpc	r25, r1
     2b6:	69 f7       	brne	.-38     	; 0x292 <_Z7FIR_LPFd+0xee>
     2b8:	60 91 40 03 	lds	r22, 0x0340	; 0x800340 <FIR>
     2bc:	70 91 41 03 	lds	r23, 0x0341	; 0x800341 <FIR+0x1>
     2c0:	80 91 42 03 	lds	r24, 0x0342	; 0x800342 <FIR+0x2>
     2c4:	90 91 43 03 	lds	r25, 0x0343	; 0x800343 <FIR+0x3>
     2c8:	c0 57       	subi	r28, 0x70	; 112
     2ca:	de 4f       	sbci	r29, 0xFE	; 254
     2cc:	0f b6       	in	r0, 0x3f	; 63
     2ce:	f8 94       	cli
     2d0:	de bf       	out	0x3e, r29	; 62
     2d2:	0f be       	out	0x3f, r0	; 63
     2d4:	cd bf       	out	0x3d, r28	; 61
     2d6:	df 91       	pop	r29
     2d8:	cf 91       	pop	r28
     2da:	1f 91       	pop	r17
     2dc:	0f 91       	pop	r16
     2de:	ff 90       	pop	r15
     2e0:	ef 90       	pop	r14
     2e2:	df 90       	pop	r13
     2e4:	cf 90       	pop	r12
     2e6:	08 95       	ret

000002e8 <_Z7IIR_LPFd>:
     2e8:	cf 92       	push	r12
     2ea:	df 92       	push	r13
     2ec:	ef 92       	push	r14
     2ee:	ff 92       	push	r15
     2f0:	0f 93       	push	r16
     2f2:	1f 93       	push	r17
     2f4:	cf 93       	push	r28
     2f6:	df 93       	push	r29
     2f8:	60 93 2c 05 	sts	0x052C, r22	; 0x80052c <IIR_input>
     2fc:	70 93 2d 05 	sts	0x052D, r23	; 0x80052d <IIR_input+0x1>
     300:	80 93 2e 05 	sts	0x052E, r24	; 0x80052e <IIR_input+0x2>
     304:	90 93 2f 05 	sts	0x052F, r25	; 0x80052f <IIR_input+0x3>
     308:	10 92 20 05 	sts	0x0520, r1	; 0x800520 <IIR>
     30c:	10 92 21 05 	sts	0x0521, r1	; 0x800521 <IIR+0x1>
     310:	10 92 22 05 	sts	0x0522, r1	; 0x800522 <IIR+0x2>
     314:	10 92 23 05 	sts	0x0523, r1	; 0x800523 <IIR+0x3>
     318:	c0 e0       	ldi	r28, 0x00	; 0
     31a:	d0 e0       	ldi	r29, 0x00	; 0
     31c:	00 e2       	ldi	r16, 0x20	; 32
     31e:	15 e0       	ldi	r17, 0x05	; 5
     320:	9e 01       	movw	r18, r28
     322:	22 0f       	add	r18, r18
     324:	33 1f       	adc	r19, r19
     326:	22 0f       	add	r18, r18
     328:	33 1f       	adc	r19, r19
     32a:	f9 01       	movw	r30, r18
     32c:	e8 5f       	subi	r30, 0xF8	; 248
     32e:	fc 4f       	sbci	r31, 0xFC	; 252
     330:	60 81       	ld	r22, Z
     332:	71 81       	ldd	r23, Z+1	; 0x01
     334:	82 81       	ldd	r24, Z+2	; 0x02
     336:	93 81       	ldd	r25, Z+3	; 0x03
     338:	f9 01       	movw	r30, r18
     33a:	e4 5d       	subi	r30, 0xD4	; 212
     33c:	fa 4f       	sbci	r31, 0xFA	; 250
     33e:	20 81       	ld	r18, Z
     340:	31 81       	ldd	r19, Z+1	; 0x01
     342:	42 81       	ldd	r20, Z+2	; 0x02
     344:	53 81       	ldd	r21, Z+3	; 0x03
     346:	f8 01       	movw	r30, r16
     348:	c0 80       	ld	r12, Z
     34a:	d1 80       	ldd	r13, Z+1	; 0x01
     34c:	e2 80       	ldd	r14, Z+2	; 0x02
     34e:	f3 80       	ldd	r15, Z+3	; 0x03
     350:	0e 94 71 0d 	call	0x1ae2	; 0x1ae2 <__mulsf3>
     354:	a7 01       	movw	r20, r14
     356:	96 01       	movw	r18, r12
     358:	0e 94 6f 0b 	call	0x16de	; 0x16de <__addsf3>
     35c:	f8 01       	movw	r30, r16
     35e:	60 83       	st	Z, r22
     360:	71 83       	std	Z+1, r23	; 0x01
     362:	82 83       	std	Z+2, r24	; 0x02
     364:	93 83       	std	Z+3, r25	; 0x03
     366:	21 96       	adiw	r28, 0x01	; 1
     368:	c3 30       	cpi	r28, 0x03	; 3
     36a:	d1 05       	cpc	r29, r1
     36c:	c9 f6       	brne	.-78     	; 0x320 <_Z7IIR_LPFd+0x38>
     36e:	0c ef       	ldi	r16, 0xFC	; 252
     370:	12 e0       	ldi	r17, 0x02	; 2
     372:	f8 01       	movw	r30, r16
     374:	24 81       	ldd	r18, Z+4	; 0x04
     376:	35 81       	ldd	r19, Z+5	; 0x05
     378:	46 81       	ldd	r20, Z+6	; 0x06
     37a:	57 81       	ldd	r21, Z+7	; 0x07
     37c:	c0 e2       	ldi	r28, 0x20	; 32
     37e:	d5 e0       	ldi	r29, 0x05	; 5
     380:	6c 81       	ldd	r22, Y+4	; 0x04
     382:	7d 81       	ldd	r23, Y+5	; 0x05
     384:	8e 81       	ldd	r24, Y+6	; 0x06
     386:	9f 81       	ldd	r25, Y+7	; 0x07
     388:	c8 80       	ld	r12, Y
     38a:	d9 80       	ldd	r13, Y+1	; 0x01
     38c:	ea 80       	ldd	r14, Y+2	; 0x02
     38e:	fb 80       	ldd	r15, Y+3	; 0x03
     390:	0e 94 71 0d 	call	0x1ae2	; 0x1ae2 <__mulsf3>
     394:	9b 01       	movw	r18, r22
     396:	ac 01       	movw	r20, r24
     398:	c7 01       	movw	r24, r14
     39a:	b6 01       	movw	r22, r12
     39c:	0e 94 6e 0b 	call	0x16dc	; 0x16dc <__subsf3>
     3a0:	68 83       	st	Y, r22
     3a2:	79 83       	std	Y+1, r23	; 0x01
     3a4:	8a 83       	std	Y+2, r24	; 0x02
     3a6:	9b 83       	std	Y+3, r25	; 0x03
     3a8:	f8 01       	movw	r30, r16
     3aa:	60 85       	ldd	r22, Z+8	; 0x08
     3ac:	71 85       	ldd	r23, Z+9	; 0x09
     3ae:	82 85       	ldd	r24, Z+10	; 0x0a
     3b0:	93 85       	ldd	r25, Z+11	; 0x0b
     3b2:	28 85       	ldd	r18, Y+8	; 0x08
     3b4:	39 85       	ldd	r19, Y+9	; 0x09
     3b6:	4a 85       	ldd	r20, Y+10	; 0x0a
     3b8:	5b 85       	ldd	r21, Y+11	; 0x0b
     3ba:	c8 80       	ld	r12, Y
     3bc:	d9 80       	ldd	r13, Y+1	; 0x01
     3be:	ea 80       	ldd	r14, Y+2	; 0x02
     3c0:	fb 80       	ldd	r15, Y+3	; 0x03
     3c2:	0e 94 71 0d 	call	0x1ae2	; 0x1ae2 <__mulsf3>
     3c6:	9b 01       	movw	r18, r22
     3c8:	ac 01       	movw	r20, r24
     3ca:	c7 01       	movw	r24, r14
     3cc:	b6 01       	movw	r22, r12
     3ce:	0e 94 6e 0b 	call	0x16dc	; 0x16dc <__subsf3>
     3d2:	68 83       	st	Y, r22
     3d4:	79 83       	std	Y+1, r23	; 0x01
     3d6:	8a 83       	std	Y+2, r24	; 0x02
     3d8:	9b 83       	std	Y+3, r25	; 0x03
     3da:	8c 81       	ldd	r24, Y+4	; 0x04
     3dc:	9d 81       	ldd	r25, Y+5	; 0x05
     3de:	ae 81       	ldd	r26, Y+6	; 0x06
     3e0:	bf 81       	ldd	r27, Y+7	; 0x07
     3e2:	48 81       	ld	r20, Y
     3e4:	59 81       	ldd	r21, Y+1	; 0x01
     3e6:	6a 81       	ldd	r22, Y+2	; 0x02
     3e8:	7b 81       	ldd	r23, Y+3	; 0x03
     3ea:	4c 83       	std	Y+4, r20	; 0x04
     3ec:	5d 83       	std	Y+5, r21	; 0x05
     3ee:	6e 83       	std	Y+6, r22	; 0x06
     3f0:	7f 83       	std	Y+7, r23	; 0x07
     3f2:	88 87       	std	Y+8, r24	; 0x08
     3f4:	99 87       	std	Y+9, r25	; 0x09
     3f6:	aa 87       	std	Y+10, r26	; 0x0a
     3f8:	bb 87       	std	Y+11, r27	; 0x0b
     3fa:	ec e2       	ldi	r30, 0x2C	; 44
     3fc:	f5 e0       	ldi	r31, 0x05	; 5
     3fe:	84 81       	ldd	r24, Z+4	; 0x04
     400:	95 81       	ldd	r25, Z+5	; 0x05
     402:	a6 81       	ldd	r26, Z+6	; 0x06
     404:	b7 81       	ldd	r27, Z+7	; 0x07
     406:	40 81       	ld	r20, Z
     408:	51 81       	ldd	r21, Z+1	; 0x01
     40a:	62 81       	ldd	r22, Z+2	; 0x02
     40c:	73 81       	ldd	r23, Z+3	; 0x03
     40e:	44 83       	std	Z+4, r20	; 0x04
     410:	55 83       	std	Z+5, r21	; 0x05
     412:	66 83       	std	Z+6, r22	; 0x06
     414:	77 83       	std	Z+7, r23	; 0x07
     416:	80 87       	std	Z+8, r24	; 0x08
     418:	91 87       	std	Z+9, r25	; 0x09
     41a:	a2 87       	std	Z+10, r26	; 0x0a
     41c:	b3 87       	std	Z+11, r27	; 0x0b
     41e:	68 81       	ld	r22, Y
     420:	79 81       	ldd	r23, Y+1	; 0x01
     422:	8a 81       	ldd	r24, Y+2	; 0x02
     424:	9b 81       	ldd	r25, Y+3	; 0x03
     426:	df 91       	pop	r29
     428:	cf 91       	pop	r28
     42a:	1f 91       	pop	r17
     42c:	0f 91       	pop	r16
     42e:	ff 90       	pop	r15
     430:	ef 90       	pop	r14
     432:	df 90       	pop	r13
     434:	cf 90       	pop	r12
     436:	08 95       	ret

00000438 <_Z12IIR_LPF_LM35d>:
     438:	cf 92       	push	r12
     43a:	df 92       	push	r13
     43c:	ef 92       	push	r14
     43e:	ff 92       	push	r15
     440:	0f 93       	push	r16
     442:	1f 93       	push	r17
     444:	cf 93       	push	r28
     446:	df 93       	push	r29
     448:	60 93 e4 04 	sts	0x04E4, r22	; 0x8004e4 <IIR_input_LM35>
     44c:	70 93 e5 04 	sts	0x04E5, r23	; 0x8004e5 <IIR_input_LM35+0x1>
     450:	80 93 e6 04 	sts	0x04E6, r24	; 0x8004e6 <IIR_input_LM35+0x2>
     454:	90 93 e7 04 	sts	0x04E7, r25	; 0x8004e7 <IIR_input_LM35+0x3>
     458:	10 92 d8 04 	sts	0x04D8, r1	; 0x8004d8 <IIR_LM35>
     45c:	10 92 d9 04 	sts	0x04D9, r1	; 0x8004d9 <IIR_LM35+0x1>
     460:	10 92 da 04 	sts	0x04DA, r1	; 0x8004da <IIR_LM35+0x2>
     464:	10 92 db 04 	sts	0x04DB, r1	; 0x8004db <IIR_LM35+0x3>
     468:	c0 e0       	ldi	r28, 0x00	; 0
     46a:	d0 e0       	ldi	r29, 0x00	; 0
     46c:	08 ed       	ldi	r16, 0xD8	; 216
     46e:	14 e0       	ldi	r17, 0x04	; 4
     470:	9e 01       	movw	r18, r28
     472:	22 0f       	add	r18, r18
     474:	33 1f       	adc	r19, r19
     476:	22 0f       	add	r18, r18
     478:	33 1f       	adc	r19, r19
     47a:	f9 01       	movw	r30, r18
     47c:	e0 54       	subi	r30, 0x40	; 64
     47e:	fd 4f       	sbci	r31, 0xFD	; 253
     480:	60 81       	ld	r22, Z
     482:	71 81       	ldd	r23, Z+1	; 0x01
     484:	82 81       	ldd	r24, Z+2	; 0x02
     486:	93 81       	ldd	r25, Z+3	; 0x03
     488:	f9 01       	movw	r30, r18
     48a:	ec 51       	subi	r30, 0x1C	; 28
     48c:	fb 4f       	sbci	r31, 0xFB	; 251
     48e:	20 81       	ld	r18, Z
     490:	31 81       	ldd	r19, Z+1	; 0x01
     492:	42 81       	ldd	r20, Z+2	; 0x02
     494:	53 81       	ldd	r21, Z+3	; 0x03
     496:	f8 01       	movw	r30, r16
     498:	c0 80       	ld	r12, Z
     49a:	d1 80       	ldd	r13, Z+1	; 0x01
     49c:	e2 80       	ldd	r14, Z+2	; 0x02
     49e:	f3 80       	ldd	r15, Z+3	; 0x03
     4a0:	0e 94 71 0d 	call	0x1ae2	; 0x1ae2 <__mulsf3>
     4a4:	a7 01       	movw	r20, r14
     4a6:	96 01       	movw	r18, r12
     4a8:	0e 94 6f 0b 	call	0x16de	; 0x16de <__addsf3>
     4ac:	f8 01       	movw	r30, r16
     4ae:	60 83       	st	Z, r22
     4b0:	71 83       	std	Z+1, r23	; 0x01
     4b2:	82 83       	std	Z+2, r24	; 0x02
     4b4:	93 83       	std	Z+3, r25	; 0x03
     4b6:	21 96       	adiw	r28, 0x01	; 1
     4b8:	c3 30       	cpi	r28, 0x03	; 3
     4ba:	d1 05       	cpc	r29, r1
     4bc:	c9 f6       	brne	.-78     	; 0x470 <_Z12IIR_LPF_LM35d+0x38>
     4be:	04 eb       	ldi	r16, 0xB4	; 180
     4c0:	12 e0       	ldi	r17, 0x02	; 2
     4c2:	f8 01       	movw	r30, r16
     4c4:	24 81       	ldd	r18, Z+4	; 0x04
     4c6:	35 81       	ldd	r19, Z+5	; 0x05
     4c8:	46 81       	ldd	r20, Z+6	; 0x06
     4ca:	57 81       	ldd	r21, Z+7	; 0x07
     4cc:	c8 ed       	ldi	r28, 0xD8	; 216
     4ce:	d4 e0       	ldi	r29, 0x04	; 4
     4d0:	6c 81       	ldd	r22, Y+4	; 0x04
     4d2:	7d 81       	ldd	r23, Y+5	; 0x05
     4d4:	8e 81       	ldd	r24, Y+6	; 0x06
     4d6:	9f 81       	ldd	r25, Y+7	; 0x07
     4d8:	c8 80       	ld	r12, Y
     4da:	d9 80       	ldd	r13, Y+1	; 0x01
     4dc:	ea 80       	ldd	r14, Y+2	; 0x02
     4de:	fb 80       	ldd	r15, Y+3	; 0x03
     4e0:	0e 94 71 0d 	call	0x1ae2	; 0x1ae2 <__mulsf3>
     4e4:	9b 01       	movw	r18, r22
     4e6:	ac 01       	movw	r20, r24
     4e8:	c7 01       	movw	r24, r14
     4ea:	b6 01       	movw	r22, r12
     4ec:	0e 94 6e 0b 	call	0x16dc	; 0x16dc <__subsf3>
     4f0:	68 83       	st	Y, r22
     4f2:	79 83       	std	Y+1, r23	; 0x01
     4f4:	8a 83       	std	Y+2, r24	; 0x02
     4f6:	9b 83       	std	Y+3, r25	; 0x03
     4f8:	f8 01       	movw	r30, r16
     4fa:	60 85       	ldd	r22, Z+8	; 0x08
     4fc:	71 85       	ldd	r23, Z+9	; 0x09
     4fe:	82 85       	ldd	r24, Z+10	; 0x0a
     500:	93 85       	ldd	r25, Z+11	; 0x0b
     502:	28 85       	ldd	r18, Y+8	; 0x08
     504:	39 85       	ldd	r19, Y+9	; 0x09
     506:	4a 85       	ldd	r20, Y+10	; 0x0a
     508:	5b 85       	ldd	r21, Y+11	; 0x0b
     50a:	c8 80       	ld	r12, Y
     50c:	d9 80       	ldd	r13, Y+1	; 0x01
     50e:	ea 80       	ldd	r14, Y+2	; 0x02
     510:	fb 80       	ldd	r15, Y+3	; 0x03
     512:	0e 94 71 0d 	call	0x1ae2	; 0x1ae2 <__mulsf3>
     516:	9b 01       	movw	r18, r22
     518:	ac 01       	movw	r20, r24
     51a:	c7 01       	movw	r24, r14
     51c:	b6 01       	movw	r22, r12
     51e:	0e 94 6e 0b 	call	0x16dc	; 0x16dc <__subsf3>
     522:	68 83       	st	Y, r22
     524:	79 83       	std	Y+1, r23	; 0x01
     526:	8a 83       	std	Y+2, r24	; 0x02
     528:	9b 83       	std	Y+3, r25	; 0x03
     52a:	8c 81       	ldd	r24, Y+4	; 0x04
     52c:	9d 81       	ldd	r25, Y+5	; 0x05
     52e:	ae 81       	ldd	r26, Y+6	; 0x06
     530:	bf 81       	ldd	r27, Y+7	; 0x07
     532:	48 81       	ld	r20, Y
     534:	59 81       	ldd	r21, Y+1	; 0x01
     536:	6a 81       	ldd	r22, Y+2	; 0x02
     538:	7b 81       	ldd	r23, Y+3	; 0x03
     53a:	4c 83       	std	Y+4, r20	; 0x04
     53c:	5d 83       	std	Y+5, r21	; 0x05
     53e:	6e 83       	std	Y+6, r22	; 0x06
     540:	7f 83       	std	Y+7, r23	; 0x07
     542:	88 87       	std	Y+8, r24	; 0x08
     544:	99 87       	std	Y+9, r25	; 0x09
     546:	aa 87       	std	Y+10, r26	; 0x0a
     548:	bb 87       	std	Y+11, r27	; 0x0b
     54a:	e4 ee       	ldi	r30, 0xE4	; 228
     54c:	f4 e0       	ldi	r31, 0x04	; 4
     54e:	84 81       	ldd	r24, Z+4	; 0x04
     550:	95 81       	ldd	r25, Z+5	; 0x05
     552:	a6 81       	ldd	r26, Z+6	; 0x06
     554:	b7 81       	ldd	r27, Z+7	; 0x07
     556:	40 81       	ld	r20, Z
     558:	51 81       	ldd	r21, Z+1	; 0x01
     55a:	62 81       	ldd	r22, Z+2	; 0x02
     55c:	73 81       	ldd	r23, Z+3	; 0x03
     55e:	44 83       	std	Z+4, r20	; 0x04
     560:	55 83       	std	Z+5, r21	; 0x05
     562:	66 83       	std	Z+6, r22	; 0x06
     564:	77 83       	std	Z+7, r23	; 0x07
     566:	80 87       	std	Z+8, r24	; 0x08
     568:	91 87       	std	Z+9, r25	; 0x09
     56a:	a2 87       	std	Z+10, r26	; 0x0a
     56c:	b3 87       	std	Z+11, r27	; 0x0b
     56e:	68 81       	ld	r22, Y
     570:	79 81       	ldd	r23, Y+1	; 0x01
     572:	8a 81       	ldd	r24, Y+2	; 0x02
     574:	9b 81       	ldd	r25, Y+3	; 0x03
     576:	df 91       	pop	r29
     578:	cf 91       	pop	r28
     57a:	1f 91       	pop	r17
     57c:	0f 91       	pop	r16
     57e:	ff 90       	pop	r15
     580:	ef 90       	pop	r14
     582:	df 90       	pop	r13
     584:	cf 90       	pop	r12
     586:	08 95       	ret

00000588 <_Z10IIR_LPF_PMd>:
     588:	cf 92       	push	r12
     58a:	df 92       	push	r13
     58c:	ef 92       	push	r14
     58e:	ff 92       	push	r15
     590:	0f 93       	push	r16
     592:	1f 93       	push	r17
     594:	cf 93       	push	r28
     596:	df 93       	push	r29
     598:	60 93 14 05 	sts	0x0514, r22	; 0x800514 <IIR_input_PM>
     59c:	70 93 15 05 	sts	0x0515, r23	; 0x800515 <IIR_input_PM+0x1>
     5a0:	80 93 16 05 	sts	0x0516, r24	; 0x800516 <IIR_input_PM+0x2>
     5a4:	90 93 17 05 	sts	0x0517, r25	; 0x800517 <IIR_input_PM+0x3>
     5a8:	10 92 08 05 	sts	0x0508, r1	; 0x800508 <IIR_PM>
     5ac:	10 92 09 05 	sts	0x0509, r1	; 0x800509 <IIR_PM+0x1>
     5b0:	10 92 0a 05 	sts	0x050A, r1	; 0x80050a <IIR_PM+0x2>
     5b4:	10 92 0b 05 	sts	0x050B, r1	; 0x80050b <IIR_PM+0x3>
     5b8:	c0 e0       	ldi	r28, 0x00	; 0
     5ba:	d0 e0       	ldi	r29, 0x00	; 0
     5bc:	08 e0       	ldi	r16, 0x08	; 8
     5be:	15 e0       	ldi	r17, 0x05	; 5
     5c0:	9e 01       	movw	r18, r28
     5c2:	22 0f       	add	r18, r18
     5c4:	33 1f       	adc	r19, r19
     5c6:	22 0f       	add	r18, r18
     5c8:	33 1f       	adc	r19, r19
     5ca:	f9 01       	movw	r30, r18
     5cc:	e0 51       	subi	r30, 0x10	; 16
     5ce:	fd 4f       	sbci	r31, 0xFD	; 253
     5d0:	60 81       	ld	r22, Z
     5d2:	71 81       	ldd	r23, Z+1	; 0x01
     5d4:	82 81       	ldd	r24, Z+2	; 0x02
     5d6:	93 81       	ldd	r25, Z+3	; 0x03
     5d8:	f9 01       	movw	r30, r18
     5da:	ec 5e       	subi	r30, 0xEC	; 236
     5dc:	fa 4f       	sbci	r31, 0xFA	; 250
     5de:	20 81       	ld	r18, Z
     5e0:	31 81       	ldd	r19, Z+1	; 0x01
     5e2:	42 81       	ldd	r20, Z+2	; 0x02
     5e4:	53 81       	ldd	r21, Z+3	; 0x03
     5e6:	f8 01       	movw	r30, r16
     5e8:	c0 80       	ld	r12, Z
     5ea:	d1 80       	ldd	r13, Z+1	; 0x01
     5ec:	e2 80       	ldd	r14, Z+2	; 0x02
     5ee:	f3 80       	ldd	r15, Z+3	; 0x03
     5f0:	0e 94 71 0d 	call	0x1ae2	; 0x1ae2 <__mulsf3>
     5f4:	a7 01       	movw	r20, r14
     5f6:	96 01       	movw	r18, r12
     5f8:	0e 94 6f 0b 	call	0x16de	; 0x16de <__addsf3>
     5fc:	f8 01       	movw	r30, r16
     5fe:	60 83       	st	Z, r22
     600:	71 83       	std	Z+1, r23	; 0x01
     602:	82 83       	std	Z+2, r24	; 0x02
     604:	93 83       	std	Z+3, r25	; 0x03
     606:	21 96       	adiw	r28, 0x01	; 1
     608:	c3 30       	cpi	r28, 0x03	; 3
     60a:	d1 05       	cpc	r29, r1
     60c:	c9 f6       	brne	.-78     	; 0x5c0 <_Z10IIR_LPF_PMd+0x38>
     60e:	04 ee       	ldi	r16, 0xE4	; 228
     610:	12 e0       	ldi	r17, 0x02	; 2
     612:	f8 01       	movw	r30, r16
     614:	24 81       	ldd	r18, Z+4	; 0x04
     616:	35 81       	ldd	r19, Z+5	; 0x05
     618:	46 81       	ldd	r20, Z+6	; 0x06
     61a:	57 81       	ldd	r21, Z+7	; 0x07
     61c:	c8 e0       	ldi	r28, 0x08	; 8
     61e:	d5 e0       	ldi	r29, 0x05	; 5
     620:	6c 81       	ldd	r22, Y+4	; 0x04
     622:	7d 81       	ldd	r23, Y+5	; 0x05
     624:	8e 81       	ldd	r24, Y+6	; 0x06
     626:	9f 81       	ldd	r25, Y+7	; 0x07
     628:	c8 80       	ld	r12, Y
     62a:	d9 80       	ldd	r13, Y+1	; 0x01
     62c:	ea 80       	ldd	r14, Y+2	; 0x02
     62e:	fb 80       	ldd	r15, Y+3	; 0x03
     630:	0e 94 71 0d 	call	0x1ae2	; 0x1ae2 <__mulsf3>
     634:	9b 01       	movw	r18, r22
     636:	ac 01       	movw	r20, r24
     638:	c7 01       	movw	r24, r14
     63a:	b6 01       	movw	r22, r12
     63c:	0e 94 6e 0b 	call	0x16dc	; 0x16dc <__subsf3>
     640:	68 83       	st	Y, r22
     642:	79 83       	std	Y+1, r23	; 0x01
     644:	8a 83       	std	Y+2, r24	; 0x02
     646:	9b 83       	std	Y+3, r25	; 0x03
     648:	f8 01       	movw	r30, r16
     64a:	60 85       	ldd	r22, Z+8	; 0x08
     64c:	71 85       	ldd	r23, Z+9	; 0x09
     64e:	82 85       	ldd	r24, Z+10	; 0x0a
     650:	93 85       	ldd	r25, Z+11	; 0x0b
     652:	28 85       	ldd	r18, Y+8	; 0x08
     654:	39 85       	ldd	r19, Y+9	; 0x09
     656:	4a 85       	ldd	r20, Y+10	; 0x0a
     658:	5b 85       	ldd	r21, Y+11	; 0x0b
     65a:	c8 80       	ld	r12, Y
     65c:	d9 80       	ldd	r13, Y+1	; 0x01
     65e:	ea 80       	ldd	r14, Y+2	; 0x02
     660:	fb 80       	ldd	r15, Y+3	; 0x03
     662:	0e 94 71 0d 	call	0x1ae2	; 0x1ae2 <__mulsf3>
     666:	9b 01       	movw	r18, r22
     668:	ac 01       	movw	r20, r24
     66a:	c7 01       	movw	r24, r14
     66c:	b6 01       	movw	r22, r12
     66e:	0e 94 6e 0b 	call	0x16dc	; 0x16dc <__subsf3>
     672:	68 83       	st	Y, r22
     674:	79 83       	std	Y+1, r23	; 0x01
     676:	8a 83       	std	Y+2, r24	; 0x02
     678:	9b 83       	std	Y+3, r25	; 0x03
     67a:	8c 81       	ldd	r24, Y+4	; 0x04
     67c:	9d 81       	ldd	r25, Y+5	; 0x05
     67e:	ae 81       	ldd	r26, Y+6	; 0x06
     680:	bf 81       	ldd	r27, Y+7	; 0x07
     682:	48 81       	ld	r20, Y
     684:	59 81       	ldd	r21, Y+1	; 0x01
     686:	6a 81       	ldd	r22, Y+2	; 0x02
     688:	7b 81       	ldd	r23, Y+3	; 0x03
     68a:	4c 83       	std	Y+4, r20	; 0x04
     68c:	5d 83       	std	Y+5, r21	; 0x05
     68e:	6e 83       	std	Y+6, r22	; 0x06
     690:	7f 83       	std	Y+7, r23	; 0x07
     692:	88 87       	std	Y+8, r24	; 0x08
     694:	99 87       	std	Y+9, r25	; 0x09
     696:	aa 87       	std	Y+10, r26	; 0x0a
     698:	bb 87       	std	Y+11, r27	; 0x0b
     69a:	e4 e1       	ldi	r30, 0x14	; 20
     69c:	f5 e0       	ldi	r31, 0x05	; 5
     69e:	84 81       	ldd	r24, Z+4	; 0x04
     6a0:	95 81       	ldd	r25, Z+5	; 0x05
     6a2:	a6 81       	ldd	r26, Z+6	; 0x06
     6a4:	b7 81       	ldd	r27, Z+7	; 0x07
     6a6:	40 81       	ld	r20, Z
     6a8:	51 81       	ldd	r21, Z+1	; 0x01
     6aa:	62 81       	ldd	r22, Z+2	; 0x02
     6ac:	73 81       	ldd	r23, Z+3	; 0x03
     6ae:	44 83       	std	Z+4, r20	; 0x04
     6b0:	55 83       	std	Z+5, r21	; 0x05
     6b2:	66 83       	std	Z+6, r22	; 0x06
     6b4:	77 83       	std	Z+7, r23	; 0x07
     6b6:	80 87       	std	Z+8, r24	; 0x08
     6b8:	91 87       	std	Z+9, r25	; 0x09
     6ba:	a2 87       	std	Z+10, r26	; 0x0a
     6bc:	b3 87       	std	Z+11, r27	; 0x0b
     6be:	68 81       	ld	r22, Y
     6c0:	79 81       	ldd	r23, Y+1	; 0x01
     6c2:	8a 81       	ldd	r24, Y+2	; 0x02
     6c4:	9b 81       	ldd	r25, Y+3	; 0x03
     6c6:	df 91       	pop	r29
     6c8:	cf 91       	pop	r28
     6ca:	1f 91       	pop	r17
     6cc:	0f 91       	pop	r16
     6ce:	ff 90       	pop	r15
     6d0:	ef 90       	pop	r14
     6d2:	df 90       	pop	r13
     6d4:	cf 90       	pop	r12
     6d6:	08 95       	ret

000006d8 <_Z10IIR_LPF_IRd>:
     6d8:	cf 92       	push	r12
     6da:	df 92       	push	r13
     6dc:	ef 92       	push	r14
     6de:	ff 92       	push	r15
     6e0:	0f 93       	push	r16
     6e2:	1f 93       	push	r17
     6e4:	cf 93       	push	r28
     6e6:	df 93       	push	r29
     6e8:	60 93 fc 04 	sts	0x04FC, r22	; 0x8004fc <IIR_input_IR>
     6ec:	70 93 fd 04 	sts	0x04FD, r23	; 0x8004fd <IIR_input_IR+0x1>
     6f0:	80 93 fe 04 	sts	0x04FE, r24	; 0x8004fe <IIR_input_IR+0x2>
     6f4:	90 93 ff 04 	sts	0x04FF, r25	; 0x8004ff <IIR_input_IR+0x3>
     6f8:	10 92 f0 04 	sts	0x04F0, r1	; 0x8004f0 <IIR_IR>
     6fc:	10 92 f1 04 	sts	0x04F1, r1	; 0x8004f1 <IIR_IR+0x1>
     700:	10 92 f2 04 	sts	0x04F2, r1	; 0x8004f2 <IIR_IR+0x2>
     704:	10 92 f3 04 	sts	0x04F3, r1	; 0x8004f3 <IIR_IR+0x3>
     708:	c0 e0       	ldi	r28, 0x00	; 0
     70a:	d0 e0       	ldi	r29, 0x00	; 0
     70c:	00 ef       	ldi	r16, 0xF0	; 240
     70e:	14 e0       	ldi	r17, 0x04	; 4
     710:	9e 01       	movw	r18, r28
     712:	22 0f       	add	r18, r18
     714:	33 1f       	adc	r19, r19
     716:	22 0f       	add	r18, r18
     718:	33 1f       	adc	r19, r19
     71a:	f9 01       	movw	r30, r18
     71c:	e8 52       	subi	r30, 0x28	; 40
     71e:	fd 4f       	sbci	r31, 0xFD	; 253
     720:	60 81       	ld	r22, Z
     722:	71 81       	ldd	r23, Z+1	; 0x01
     724:	82 81       	ldd	r24, Z+2	; 0x02
     726:	93 81       	ldd	r25, Z+3	; 0x03
     728:	f9 01       	movw	r30, r18
     72a:	e4 50       	subi	r30, 0x04	; 4
     72c:	fb 4f       	sbci	r31, 0xFB	; 251
     72e:	20 81       	ld	r18, Z
     730:	31 81       	ldd	r19, Z+1	; 0x01
     732:	42 81       	ldd	r20, Z+2	; 0x02
     734:	53 81       	ldd	r21, Z+3	; 0x03
     736:	f8 01       	movw	r30, r16
     738:	c0 80       	ld	r12, Z
     73a:	d1 80       	ldd	r13, Z+1	; 0x01
     73c:	e2 80       	ldd	r14, Z+2	; 0x02
     73e:	f3 80       	ldd	r15, Z+3	; 0x03
     740:	0e 94 71 0d 	call	0x1ae2	; 0x1ae2 <__mulsf3>
     744:	a7 01       	movw	r20, r14
     746:	96 01       	movw	r18, r12
     748:	ca d7       	rcall	.+3988   	; 0x16de <__addsf3>
     74a:	f8 01       	movw	r30, r16
     74c:	60 83       	st	Z, r22
     74e:	71 83       	std	Z+1, r23	; 0x01
     750:	82 83       	std	Z+2, r24	; 0x02
     752:	93 83       	std	Z+3, r25	; 0x03
     754:	21 96       	adiw	r28, 0x01	; 1
     756:	c3 30       	cpi	r28, 0x03	; 3
     758:	d1 05       	cpc	r29, r1
     75a:	d1 f6       	brne	.-76     	; 0x710 <_Z10IIR_LPF_IRd+0x38>
     75c:	0c ec       	ldi	r16, 0xCC	; 204
     75e:	12 e0       	ldi	r17, 0x02	; 2
     760:	f8 01       	movw	r30, r16
     762:	24 81       	ldd	r18, Z+4	; 0x04
     764:	35 81       	ldd	r19, Z+5	; 0x05
     766:	46 81       	ldd	r20, Z+6	; 0x06
     768:	57 81       	ldd	r21, Z+7	; 0x07
     76a:	c0 ef       	ldi	r28, 0xF0	; 240
     76c:	d4 e0       	ldi	r29, 0x04	; 4
     76e:	6c 81       	ldd	r22, Y+4	; 0x04
     770:	7d 81       	ldd	r23, Y+5	; 0x05
     772:	8e 81       	ldd	r24, Y+6	; 0x06
     774:	9f 81       	ldd	r25, Y+7	; 0x07
     776:	c8 80       	ld	r12, Y
     778:	d9 80       	ldd	r13, Y+1	; 0x01
     77a:	ea 80       	ldd	r14, Y+2	; 0x02
     77c:	fb 80       	ldd	r15, Y+3	; 0x03
     77e:	0e 94 71 0d 	call	0x1ae2	; 0x1ae2 <__mulsf3>
     782:	9b 01       	movw	r18, r22
     784:	ac 01       	movw	r20, r24
     786:	c7 01       	movw	r24, r14
     788:	b6 01       	movw	r22, r12
     78a:	a8 d7       	rcall	.+3920   	; 0x16dc <__subsf3>
     78c:	68 83       	st	Y, r22
     78e:	79 83       	std	Y+1, r23	; 0x01
     790:	8a 83       	std	Y+2, r24	; 0x02
     792:	9b 83       	std	Y+3, r25	; 0x03
     794:	f8 01       	movw	r30, r16
     796:	60 85       	ldd	r22, Z+8	; 0x08
     798:	71 85       	ldd	r23, Z+9	; 0x09
     79a:	82 85       	ldd	r24, Z+10	; 0x0a
     79c:	93 85       	ldd	r25, Z+11	; 0x0b
     79e:	28 85       	ldd	r18, Y+8	; 0x08
     7a0:	39 85       	ldd	r19, Y+9	; 0x09
     7a2:	4a 85       	ldd	r20, Y+10	; 0x0a
     7a4:	5b 85       	ldd	r21, Y+11	; 0x0b
     7a6:	c8 80       	ld	r12, Y
     7a8:	d9 80       	ldd	r13, Y+1	; 0x01
     7aa:	ea 80       	ldd	r14, Y+2	; 0x02
     7ac:	fb 80       	ldd	r15, Y+3	; 0x03
     7ae:	0e 94 71 0d 	call	0x1ae2	; 0x1ae2 <__mulsf3>
     7b2:	9b 01       	movw	r18, r22
     7b4:	ac 01       	movw	r20, r24
     7b6:	c7 01       	movw	r24, r14
     7b8:	b6 01       	movw	r22, r12
     7ba:	90 d7       	rcall	.+3872   	; 0x16dc <__subsf3>
     7bc:	68 83       	st	Y, r22
     7be:	79 83       	std	Y+1, r23	; 0x01
     7c0:	8a 83       	std	Y+2, r24	; 0x02
     7c2:	9b 83       	std	Y+3, r25	; 0x03
     7c4:	8c 81       	ldd	r24, Y+4	; 0x04
     7c6:	9d 81       	ldd	r25, Y+5	; 0x05
     7c8:	ae 81       	ldd	r26, Y+6	; 0x06
     7ca:	bf 81       	ldd	r27, Y+7	; 0x07
     7cc:	48 81       	ld	r20, Y
     7ce:	59 81       	ldd	r21, Y+1	; 0x01
     7d0:	6a 81       	ldd	r22, Y+2	; 0x02
     7d2:	7b 81       	ldd	r23, Y+3	; 0x03
     7d4:	4c 83       	std	Y+4, r20	; 0x04
     7d6:	5d 83       	std	Y+5, r21	; 0x05
     7d8:	6e 83       	std	Y+6, r22	; 0x06
     7da:	7f 83       	std	Y+7, r23	; 0x07
     7dc:	88 87       	std	Y+8, r24	; 0x08
     7de:	99 87       	std	Y+9, r25	; 0x09
     7e0:	aa 87       	std	Y+10, r26	; 0x0a
     7e2:	bb 87       	std	Y+11, r27	; 0x0b
     7e4:	ec ef       	ldi	r30, 0xFC	; 252
     7e6:	f4 e0       	ldi	r31, 0x04	; 4
     7e8:	84 81       	ldd	r24, Z+4	; 0x04
     7ea:	95 81       	ldd	r25, Z+5	; 0x05
     7ec:	a6 81       	ldd	r26, Z+6	; 0x06
     7ee:	b7 81       	ldd	r27, Z+7	; 0x07
     7f0:	40 81       	ld	r20, Z
     7f2:	51 81       	ldd	r21, Z+1	; 0x01
     7f4:	62 81       	ldd	r22, Z+2	; 0x02
     7f6:	73 81       	ldd	r23, Z+3	; 0x03
     7f8:	44 83       	std	Z+4, r20	; 0x04
     7fa:	55 83       	std	Z+5, r21	; 0x05
     7fc:	66 83       	std	Z+6, r22	; 0x06
     7fe:	77 83       	std	Z+7, r23	; 0x07
     800:	80 87       	std	Z+8, r24	; 0x08
     802:	91 87       	std	Z+9, r25	; 0x09
     804:	a2 87       	std	Z+10, r26	; 0x0a
     806:	b3 87       	std	Z+11, r27	; 0x0b
     808:	68 81       	ld	r22, Y
     80a:	79 81       	ldd	r23, Y+1	; 0x01
     80c:	8a 81       	ldd	r24, Y+2	; 0x02
     80e:	9b 81       	ldd	r25, Y+3	; 0x03
     810:	df 91       	pop	r29
     812:	cf 91       	pop	r28
     814:	1f 91       	pop	r17
     816:	0f 91       	pop	r16
     818:	ff 90       	pop	r15
     81a:	ef 90       	pop	r14
     81c:	df 90       	pop	r13
     81e:	cf 90       	pop	r12
     820:	08 95       	ret

00000822 <_Z13Kalman_Filterd>:
     822:	4f 92       	push	r4
     824:	5f 92       	push	r5
     826:	6f 92       	push	r6
     828:	7f 92       	push	r7
     82a:	8f 92       	push	r8
     82c:	9f 92       	push	r9
     82e:	af 92       	push	r10
     830:	bf 92       	push	r11
     832:	cf 92       	push	r12
     834:	df 92       	push	r13
     836:	ef 92       	push	r14
     838:	ff 92       	push	r15
     83a:	0f 93       	push	r16
     83c:	1f 93       	push	r17
     83e:	cf 93       	push	r28
     840:	df 93       	push	r29
     842:	cd b7       	in	r28, 0x3d	; 61
     844:	de b7       	in	r29, 0x3e	; 62
     846:	2c 97       	sbiw	r28, 0x0c	; 12
     848:	0f b6       	in	r0, 0x3f	; 63
     84a:	f8 94       	cli
     84c:	de bf       	out	0x3e, r29	; 62
     84e:	0f be       	out	0x3f, r0	; 63
     850:	cd bf       	out	0x3d, r28	; 61
     852:	6d 83       	std	Y+5, r22	; 0x05
     854:	7e 83       	std	Y+6, r23	; 0x06
     856:	8f 83       	std	Y+7, r24	; 0x07
     858:	98 87       	std	Y+8, r25	; 0x08
     85a:	60 91 28 03 	lds	r22, 0x0328	; 0x800328 <A_kal>
     85e:	70 91 29 03 	lds	r23, 0x0329	; 0x800329 <A_kal+0x1>
     862:	80 91 2a 03 	lds	r24, 0x032A	; 0x80032a <A_kal+0x2>
     866:	90 91 2b 03 	lds	r25, 0x032B	; 0x80032b <A_kal+0x3>
     86a:	20 91 18 03 	lds	r18, 0x0318	; 0x800318 <x_est_kal>
     86e:	30 91 19 03 	lds	r19, 0x0319	; 0x800319 <x_est_kal+0x1>
     872:	40 91 1a 03 	lds	r20, 0x031A	; 0x80031a <x_est_kal+0x2>
     876:	50 91 1b 03 	lds	r21, 0x031B	; 0x80031b <x_est_kal+0x3>
     87a:	0e 94 71 0d 	call	0x1ae2	; 0x1ae2 <__mulsf3>
     87e:	60 93 40 05 	sts	0x0540, r22	; 0x800540 <x_pred_kal>
     882:	70 93 41 05 	sts	0x0541, r23	; 0x800541 <x_pred_kal+0x1>
     886:	80 93 42 05 	sts	0x0542, r24	; 0x800542 <x_pred_kal+0x2>
     88a:	90 93 43 05 	sts	0x0543, r25	; 0x800543 <x_pred_kal+0x3>
     88e:	60 91 28 03 	lds	r22, 0x0328	; 0x800328 <A_kal>
     892:	70 91 29 03 	lds	r23, 0x0329	; 0x800329 <A_kal+0x1>
     896:	80 91 2a 03 	lds	r24, 0x032A	; 0x80032a <A_kal+0x2>
     89a:	90 91 2b 03 	lds	r25, 0x032B	; 0x80032b <A_kal+0x3>
     89e:	20 91 14 03 	lds	r18, 0x0314	; 0x800314 <p_cal_kal>
     8a2:	30 91 15 03 	lds	r19, 0x0315	; 0x800315 <p_cal_kal+0x1>
     8a6:	40 91 16 03 	lds	r20, 0x0316	; 0x800316 <p_cal_kal+0x2>
     8aa:	50 91 17 03 	lds	r21, 0x0317	; 0x800317 <p_cal_kal+0x3>
     8ae:	40 90 28 03 	lds	r4, 0x0328	; 0x800328 <A_kal>
     8b2:	50 90 29 03 	lds	r5, 0x0329	; 0x800329 <A_kal+0x1>
     8b6:	60 90 2a 03 	lds	r6, 0x032A	; 0x80032a <A_kal+0x2>
     8ba:	70 90 2b 03 	lds	r7, 0x032B	; 0x80032b <A_kal+0x3>
     8be:	80 90 20 03 	lds	r8, 0x0320	; 0x800320 <Q_kal>
     8c2:	90 90 21 03 	lds	r9, 0x0321	; 0x800321 <Q_kal+0x1>
     8c6:	a0 90 22 03 	lds	r10, 0x0322	; 0x800322 <Q_kal+0x2>
     8ca:	b0 90 23 03 	lds	r11, 0x0323	; 0x800323 <Q_kal+0x3>
     8ce:	0e 94 71 0d 	call	0x1ae2	; 0x1ae2 <__mulsf3>
     8d2:	a3 01       	movw	r20, r6
     8d4:	92 01       	movw	r18, r4
     8d6:	0e 94 71 0d 	call	0x1ae2	; 0x1ae2 <__mulsf3>
     8da:	a5 01       	movw	r20, r10
     8dc:	94 01       	movw	r18, r8
     8de:	ff d6       	rcall	.+3582   	; 0x16de <__addsf3>
     8e0:	60 93 3c 05 	sts	0x053C, r22	; 0x80053c <p_pred_kal>
     8e4:	70 93 3d 05 	sts	0x053D, r23	; 0x80053d <p_pred_kal+0x1>
     8e8:	80 93 3e 05 	sts	0x053E, r24	; 0x80053e <p_pred_kal+0x2>
     8ec:	90 93 3f 05 	sts	0x053F, r25	; 0x80053f <p_pred_kal+0x3>
     8f0:	60 91 3c 05 	lds	r22, 0x053C	; 0x80053c <p_pred_kal>
     8f4:	70 91 3d 05 	lds	r23, 0x053D	; 0x80053d <p_pred_kal+0x1>
     8f8:	80 91 3e 05 	lds	r24, 0x053E	; 0x80053e <p_pred_kal+0x2>
     8fc:	90 91 3f 05 	lds	r25, 0x053F	; 0x80053f <p_pred_kal+0x3>
     900:	20 91 24 03 	lds	r18, 0x0324	; 0x800324 <H_kal>
     904:	30 91 25 03 	lds	r19, 0x0325	; 0x800325 <H_kal+0x1>
     908:	40 91 26 03 	lds	r20, 0x0326	; 0x800326 <H_kal+0x2>
     90c:	50 91 27 03 	lds	r21, 0x0327	; 0x800327 <H_kal+0x3>
     910:	e0 90 24 03 	lds	r14, 0x0324	; 0x800324 <H_kal>
     914:	f0 90 25 03 	lds	r15, 0x0325	; 0x800325 <H_kal+0x1>
     918:	00 91 26 03 	lds	r16, 0x0326	; 0x800326 <H_kal+0x2>
     91c:	10 91 27 03 	lds	r17, 0x0327	; 0x800327 <H_kal+0x3>
     920:	e9 82       	std	Y+1, r14	; 0x01
     922:	fa 82       	std	Y+2, r15	; 0x02
     924:	0b 83       	std	Y+3, r16	; 0x03
     926:	1c 83       	std	Y+4, r17	; 0x04
     928:	40 90 3c 05 	lds	r4, 0x053C	; 0x80053c <p_pred_kal>
     92c:	50 90 3d 05 	lds	r5, 0x053D	; 0x80053d <p_pred_kal+0x1>
     930:	60 90 3e 05 	lds	r6, 0x053E	; 0x80053e <p_pred_kal+0x2>
     934:	70 90 3f 05 	lds	r7, 0x053F	; 0x80053f <p_pred_kal+0x3>
     938:	80 90 24 03 	lds	r8, 0x0324	; 0x800324 <H_kal>
     93c:	90 90 25 03 	lds	r9, 0x0325	; 0x800325 <H_kal+0x1>
     940:	a0 90 26 03 	lds	r10, 0x0326	; 0x800326 <H_kal+0x2>
     944:	b0 90 27 03 	lds	r11, 0x0327	; 0x800327 <H_kal+0x3>
     948:	c0 90 1c 03 	lds	r12, 0x031C	; 0x80031c <R_kal>
     94c:	d0 90 1d 03 	lds	r13, 0x031D	; 0x80031d <R_kal+0x1>
     950:	e0 90 1e 03 	lds	r14, 0x031E	; 0x80031e <R_kal+0x2>
     954:	f0 90 1f 03 	lds	r15, 0x031F	; 0x80031f <R_kal+0x3>
     958:	0e 94 71 0d 	call	0x1ae2	; 0x1ae2 <__mulsf3>
     95c:	69 87       	std	Y+9, r22	; 0x09
     95e:	7a 87       	std	Y+10, r23	; 0x0a
     960:	8b 87       	std	Y+11, r24	; 0x0b
     962:	9c 87       	std	Y+12, r25	; 0x0c
     964:	a3 01       	movw	r20, r6
     966:	92 01       	movw	r18, r4
     968:	69 81       	ldd	r22, Y+1	; 0x01
     96a:	7a 81       	ldd	r23, Y+2	; 0x02
     96c:	8b 81       	ldd	r24, Y+3	; 0x03
     96e:	9c 81       	ldd	r25, Y+4	; 0x04
     970:	0e 94 71 0d 	call	0x1ae2	; 0x1ae2 <__mulsf3>
     974:	a5 01       	movw	r20, r10
     976:	94 01       	movw	r18, r8
     978:	0e 94 71 0d 	call	0x1ae2	; 0x1ae2 <__mulsf3>
     97c:	a7 01       	movw	r20, r14
     97e:	96 01       	movw	r18, r12
     980:	ae d6       	rcall	.+3420   	; 0x16de <__addsf3>
     982:	9b 01       	movw	r18, r22
     984:	ac 01       	movw	r20, r24
     986:	69 85       	ldd	r22, Y+9	; 0x09
     988:	7a 85       	ldd	r23, Y+10	; 0x0a
     98a:	8b 85       	ldd	r24, Y+11	; 0x0b
     98c:	9c 85       	ldd	r25, Y+12	; 0x0c
     98e:	0f d7       	rcall	.+3614   	; 0x17ae <__divsf3>
     990:	60 93 38 05 	sts	0x0538, r22	; 0x800538 <k_gain_kal>
     994:	70 93 39 05 	sts	0x0539, r23	; 0x800539 <k_gain_kal+0x1>
     998:	80 93 3a 05 	sts	0x053A, r24	; 0x80053a <k_gain_kal+0x2>
     99c:	90 93 3b 05 	sts	0x053B, r25	; 0x80053b <k_gain_kal+0x3>
     9a0:	60 91 24 03 	lds	r22, 0x0324	; 0x800324 <H_kal>
     9a4:	70 91 25 03 	lds	r23, 0x0325	; 0x800325 <H_kal+0x1>
     9a8:	80 91 26 03 	lds	r24, 0x0326	; 0x800326 <H_kal+0x2>
     9ac:	90 91 27 03 	lds	r25, 0x0327	; 0x800327 <H_kal+0x3>
     9b0:	20 91 40 05 	lds	r18, 0x0540	; 0x800540 <x_pred_kal>
     9b4:	30 91 41 05 	lds	r19, 0x0541	; 0x800541 <x_pred_kal+0x1>
     9b8:	40 91 42 05 	lds	r20, 0x0542	; 0x800542 <x_pred_kal+0x2>
     9bc:	50 91 43 05 	lds	r21, 0x0543	; 0x800543 <x_pred_kal+0x3>
     9c0:	40 90 38 05 	lds	r4, 0x0538	; 0x800538 <k_gain_kal>
     9c4:	50 90 39 05 	lds	r5, 0x0539	; 0x800539 <k_gain_kal+0x1>
     9c8:	60 90 3a 05 	lds	r6, 0x053A	; 0x80053a <k_gain_kal+0x2>
     9cc:	70 90 3b 05 	lds	r7, 0x053B	; 0x80053b <k_gain_kal+0x3>
     9d0:	80 90 40 05 	lds	r8, 0x0540	; 0x800540 <x_pred_kal>
     9d4:	90 90 41 05 	lds	r9, 0x0541	; 0x800541 <x_pred_kal+0x1>
     9d8:	a0 90 42 05 	lds	r10, 0x0542	; 0x800542 <x_pred_kal+0x2>
     9dc:	b0 90 43 05 	lds	r11, 0x0543	; 0x800543 <x_pred_kal+0x3>
     9e0:	0e 94 71 0d 	call	0x1ae2	; 0x1ae2 <__mulsf3>
     9e4:	9b 01       	movw	r18, r22
     9e6:	ac 01       	movw	r20, r24
     9e8:	6d 81       	ldd	r22, Y+5	; 0x05
     9ea:	7e 81       	ldd	r23, Y+6	; 0x06
     9ec:	8f 81       	ldd	r24, Y+7	; 0x07
     9ee:	98 85       	ldd	r25, Y+8	; 0x08
     9f0:	75 d6       	rcall	.+3306   	; 0x16dc <__subsf3>
     9f2:	a3 01       	movw	r20, r6
     9f4:	92 01       	movw	r18, r4
     9f6:	0e 94 71 0d 	call	0x1ae2	; 0x1ae2 <__mulsf3>
     9fa:	a5 01       	movw	r20, r10
     9fc:	94 01       	movw	r18, r8
     9fe:	6f d6       	rcall	.+3294   	; 0x16de <__addsf3>
     a00:	60 93 18 03 	sts	0x0318, r22	; 0x800318 <x_est_kal>
     a04:	70 93 19 03 	sts	0x0319, r23	; 0x800319 <x_est_kal+0x1>
     a08:	80 93 1a 03 	sts	0x031A, r24	; 0x80031a <x_est_kal+0x2>
     a0c:	90 93 1b 03 	sts	0x031B, r25	; 0x80031b <x_est_kal+0x3>
     a10:	c0 90 3c 05 	lds	r12, 0x053C	; 0x80053c <p_pred_kal>
     a14:	d0 90 3d 05 	lds	r13, 0x053D	; 0x80053d <p_pred_kal+0x1>
     a18:	e0 90 3e 05 	lds	r14, 0x053E	; 0x80053e <p_pred_kal+0x2>
     a1c:	f0 90 3f 05 	lds	r15, 0x053F	; 0x80053f <p_pred_kal+0x3>
     a20:	60 91 38 05 	lds	r22, 0x0538	; 0x800538 <k_gain_kal>
     a24:	70 91 39 05 	lds	r23, 0x0539	; 0x800539 <k_gain_kal+0x1>
     a28:	80 91 3a 05 	lds	r24, 0x053A	; 0x80053a <k_gain_kal+0x2>
     a2c:	90 91 3b 05 	lds	r25, 0x053B	; 0x80053b <k_gain_kal+0x3>
     a30:	20 91 24 03 	lds	r18, 0x0324	; 0x800324 <H_kal>
     a34:	30 91 25 03 	lds	r19, 0x0325	; 0x800325 <H_kal+0x1>
     a38:	40 91 26 03 	lds	r20, 0x0326	; 0x800326 <H_kal+0x2>
     a3c:	50 91 27 03 	lds	r21, 0x0327	; 0x800327 <H_kal+0x3>
     a40:	80 90 3c 05 	lds	r8, 0x053C	; 0x80053c <p_pred_kal>
     a44:	90 90 3d 05 	lds	r9, 0x053D	; 0x80053d <p_pred_kal+0x1>
     a48:	a0 90 3e 05 	lds	r10, 0x053E	; 0x80053e <p_pred_kal+0x2>
     a4c:	b0 90 3f 05 	lds	r11, 0x053F	; 0x80053f <p_pred_kal+0x3>
     a50:	0e 94 71 0d 	call	0x1ae2	; 0x1ae2 <__mulsf3>
     a54:	a5 01       	movw	r20, r10
     a56:	94 01       	movw	r18, r8
     a58:	0e 94 71 0d 	call	0x1ae2	; 0x1ae2 <__mulsf3>
     a5c:	9b 01       	movw	r18, r22
     a5e:	ac 01       	movw	r20, r24
     a60:	c7 01       	movw	r24, r14
     a62:	b6 01       	movw	r22, r12
     a64:	3b d6       	rcall	.+3190   	; 0x16dc <__subsf3>
     a66:	60 93 14 03 	sts	0x0314, r22	; 0x800314 <p_cal_kal>
     a6a:	70 93 15 03 	sts	0x0315, r23	; 0x800315 <p_cal_kal+0x1>
     a6e:	80 93 16 03 	sts	0x0316, r24	; 0x800316 <p_cal_kal+0x2>
     a72:	90 93 17 03 	sts	0x0317, r25	; 0x800317 <p_cal_kal+0x3>
     a76:	60 91 18 03 	lds	r22, 0x0318	; 0x800318 <x_est_kal>
     a7a:	70 91 19 03 	lds	r23, 0x0319	; 0x800319 <x_est_kal+0x1>
     a7e:	80 91 1a 03 	lds	r24, 0x031A	; 0x80031a <x_est_kal+0x2>
     a82:	90 91 1b 03 	lds	r25, 0x031B	; 0x80031b <x_est_kal+0x3>
     a86:	2c 96       	adiw	r28, 0x0c	; 12
     a88:	0f b6       	in	r0, 0x3f	; 63
     a8a:	f8 94       	cli
     a8c:	de bf       	out	0x3e, r29	; 62
     a8e:	0f be       	out	0x3f, r0	; 63
     a90:	cd bf       	out	0x3d, r28	; 61
     a92:	df 91       	pop	r29
     a94:	cf 91       	pop	r28
     a96:	1f 91       	pop	r17
     a98:	0f 91       	pop	r16
     a9a:	ff 90       	pop	r15
     a9c:	ef 90       	pop	r14
     a9e:	df 90       	pop	r13
     aa0:	cf 90       	pop	r12
     aa2:	bf 90       	pop	r11
     aa4:	af 90       	pop	r10
     aa6:	9f 90       	pop	r9
     aa8:	8f 90       	pop	r8
     aaa:	7f 90       	pop	r7
     aac:	6f 90       	pop	r6
     aae:	5f 90       	pop	r5
     ab0:	4f 90       	pop	r4
     ab2:	08 95       	ret

00000ab4 <_Z9Uart_Initv>:
     ab4:	1b b8       	out	0x0b, r1	; 11
     ab6:	28 e1       	ldi	r18, 0x18	; 24
     ab8:	2a b9       	out	0x0a, r18	; 10
     aba:	96 e0       	ldi	r25, 0x06	; 6
     abc:	90 93 95 00 	sts	0x0095, r25	; 0x800095 <__TEXT_REGION_LENGTH__+0x7e0095>
     ac0:	10 92 90 00 	sts	0x0090, r1	; 0x800090 <__TEXT_REGION_LENGTH__+0x7e0090>
     ac4:	87 e6       	ldi	r24, 0x67	; 103
     ac6:	89 b9       	out	0x09, r24	; 9
     ac8:	10 92 9b 00 	sts	0x009B, r1	; 0x80009b <__TEXT_REGION_LENGTH__+0x7e009b>
     acc:	20 93 9a 00 	sts	0x009A, r18	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
     ad0:	90 93 9d 00 	sts	0x009D, r25	; 0x80009d <__TEXT_REGION_LENGTH__+0x7e009d>
     ad4:	10 92 98 00 	sts	0x0098, r1	; 0x800098 <__TEXT_REGION_LENGTH__+0x7e0098>
     ad8:	80 93 99 00 	sts	0x0099, r24	; 0x800099 <__TEXT_REGION_LENGTH__+0x7e0099>
     adc:	08 95       	ret

00000ade <main>:
     ade:	8f ef       	ldi	r24, 0xFF	; 255
     ae0:	8a bb       	out	0x1a, r24	; 26
     ae2:	87 bb       	out	0x17, r24	; 23
     ae4:	9f ee       	ldi	r25, 0xEF	; 239
     ae6:	94 bb       	out	0x14, r25	; 20
     ae8:	98 ee       	ldi	r25, 0xE8	; 232
     aea:	91 bb       	out	0x11, r25	; 17
     aec:	9e ef       	ldi	r25, 0xFE	; 254
     aee:	92 b9       	out	0x02, r25	; 2
     af0:	10 92 61 00 	sts	0x0061, r1	; 0x800061 <__TEXT_REGION_LENGTH__+0x7e0061>
     af4:	8b bb       	out	0x1b, r24	; 27
     af6:	8a ee       	ldi	r24, 0xEA	; 234
     af8:	85 bb       	out	0x15, r24	; 21
     afa:	87 e0       	ldi	r24, 0x07	; 7
     afc:	83 bf       	out	0x33, r24	; 51
     afe:	81 e0       	ldi	r24, 0x01	; 1
     b00:	87 bf       	out	0x37, r24	; 55
     b02:	84 e6       	ldi	r24, 0x64	; 100
     b04:	82 bf       	out	0x32, r24	; 50
     b06:	8a e0       	ldi	r24, 0x0A	; 10
     b08:	80 93 6a 00 	sts	0x006A, r24	; 0x80006a <__TEXT_REGION_LENGTH__+0x7e006a>
     b0c:	83 e0       	ldi	r24, 0x03	; 3
     b0e:	89 bf       	out	0x39, r24	; 57
     b10:	8a ea       	ldi	r24, 0xAA	; 170
     b12:	8f bd       	out	0x2f, r24	; 47
     b14:	2b e1       	ldi	r18, 0x1B	; 27
     b16:	2e bd       	out	0x2e, r18	; 46
     b18:	87 e8       	ldi	r24, 0x87	; 135
     b1a:	93 e1       	ldi	r25, 0x13	; 19
     b1c:	97 bd       	out	0x27, r25	; 39
     b1e:	86 bd       	out	0x26, r24	; 38
     b20:	3a e8       	ldi	r19, 0x8A	; 138
     b22:	30 93 8b 00 	sts	0x008B, r19	; 0x80008b <__TEXT_REGION_LENGTH__+0x7e008b>
     b26:	20 93 8a 00 	sts	0x008A, r18	; 0x80008a <__TEXT_REGION_LENGTH__+0x7e008a>
     b2a:	90 93 81 00 	sts	0x0081, r25	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
     b2e:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
     b32:	80 e4       	ldi	r24, 0x40	; 64
     b34:	87 b9       	out	0x07, r24	; 7
     b36:	87 e8       	ldi	r24, 0x87	; 135
     b38:	86 b9       	out	0x06, r24	; 6
     b3a:	78 94       	sei
     b3c:	bb df       	rcall	.-138    	; 0xab4 <_Z9Uart_Initv>
     b3e:	ff cf       	rjmp	.-2      	; 0xb3e <main+0x60>

00000b40 <_Z11Uart_Trans0h>:
     b40:	5d 9b       	sbis	0x0b, 5	; 11
     b42:	fe cf       	rjmp	.-4      	; 0xb40 <_Z11Uart_Trans0h>
     b44:	8c b9       	out	0x0c, r24	; 12
     b46:	08 95       	ret

00000b48 <_Z10Uart_Transh>:
     b48:	eb e9       	ldi	r30, 0x9B	; 155
     b4a:	f0 e0       	ldi	r31, 0x00	; 0
     b4c:	90 81       	ld	r25, Z
     b4e:	95 ff       	sbrs	r25, 5
     b50:	fd cf       	rjmp	.-6      	; 0xb4c <_Z10Uart_Transh+0x4>
     b52:	80 93 9c 00 	sts	0x009C, r24	; 0x80009c <__TEXT_REGION_LENGTH__+0x7e009c>
     b56:	08 95       	ret

00000b58 <_Z13Uart_TransNumi>:

// 5자리 정수를 UART 통신으로 송신하는 함수
void Uart_TransNum(int num)
{
     b58:	ef 92       	push	r14
     b5a:	ff 92       	push	r15
     b5c:	0f 93       	push	r16
     b5e:	1f 93       	push	r17
     b60:	cf 93       	push	r28
     b62:	df 93       	push	r29
     b64:	ec 01       	movw	r28, r24
   if(num < 0)   // 입력한 숫자가 음수면
     b66:	99 23       	and	r25, r25
     b68:	2c f4       	brge	.+10     	; 0xb74 <_Z13Uart_TransNumi+0x1c>
   {
      Uart_Trans('-');   // (-)를 먼저 출력
     b6a:	8d e2       	ldi	r24, 0x2D	; 45
     b6c:	ed df       	rcall	.-38     	; 0xb48 <_Z10Uart_Transh>
      num = -num;   // 양수로 바꿔준다
     b6e:	d1 95       	neg	r29
     b70:	c1 95       	neg	r28
     b72:	d1 09       	sbc	r29, r1
   }
   Uart_Trans((num/10000) + 48);         // 만의 자리 출력
     b74:	ce 01       	movw	r24, r28
     b76:	60 e1       	ldi	r22, 0x10	; 16
     b78:	77 e2       	ldi	r23, 0x27	; 39
     b7a:	0e 94 f4 0e 	call	0x1de8	; 0x1de8 <__divmodhi4>
     b7e:	7c 01       	movw	r14, r24
     b80:	80 e3       	ldi	r24, 0x30	; 48
     b82:	86 0f       	add	r24, r22
     b84:	e1 df       	rcall	.-62     	; 0xb48 <_Z10Uart_Transh>
   Uart_Trans(((num%10000)/1000) + 48);      // 쳔의 자리 출력
     b86:	08 ee       	ldi	r16, 0xE8	; 232
     b88:	13 e0       	ldi	r17, 0x03	; 3
     b8a:	c7 01       	movw	r24, r14
     b8c:	b8 01       	movw	r22, r16
     b8e:	0e 94 f4 0e 	call	0x1de8	; 0x1de8 <__divmodhi4>
     b92:	80 e3       	ldi	r24, 0x30	; 48
     b94:	86 0f       	add	r24, r22
     b96:	d8 df       	rcall	.-80     	; 0xb48 <_Z10Uart_Transh>
   Uart_Trans(((num%1000)/100) + 48);      // 백의 자리 출력
     b98:	ce 01       	movw	r24, r28
     b9a:	b8 01       	movw	r22, r16
     b9c:	0e 94 f4 0e 	call	0x1de8	; 0x1de8 <__divmodhi4>
     ba0:	04 e6       	ldi	r16, 0x64	; 100
     ba2:	10 e0       	ldi	r17, 0x00	; 0
     ba4:	b8 01       	movw	r22, r16
     ba6:	0e 94 f4 0e 	call	0x1de8	; 0x1de8 <__divmodhi4>
     baa:	80 e3       	ldi	r24, 0x30	; 48
     bac:	86 0f       	add	r24, r22
     bae:	cc df       	rcall	.-104    	; 0xb48 <_Z10Uart_Transh>
   Uart_Trans(((num%100)/10) + 48);         // 십의 자리 출력
     bb0:	ce 01       	movw	r24, r28
     bb2:	b8 01       	movw	r22, r16
     bb4:	0e 94 f4 0e 	call	0x1de8	; 0x1de8 <__divmodhi4>
     bb8:	0a e0       	ldi	r16, 0x0A	; 10
     bba:	10 e0       	ldi	r17, 0x00	; 0
     bbc:	b8 01       	movw	r22, r16
     bbe:	0e 94 f4 0e 	call	0x1de8	; 0x1de8 <__divmodhi4>
     bc2:	80 e3       	ldi	r24, 0x30	; 48
     bc4:	86 0f       	add	r24, r22
     bc6:	c0 df       	rcall	.-128    	; 0xb48 <_Z10Uart_Transh>
   Uart_Trans(((num%10)/1) + 48);         // 일의 자리 출력
     bc8:	ce 01       	movw	r24, r28
     bca:	b8 01       	movw	r22, r16
     bcc:	0e 94 f4 0e 	call	0x1de8	; 0x1de8 <__divmodhi4>
     bd0:	80 5d       	subi	r24, 0xD0	; 208
     bd2:	ba df       	rcall	.-140    	; 0xb48 <_Z10Uart_Transh>
   //Uart_Trans(13);
}
     bd4:	df 91       	pop	r29
     bd6:	cf 91       	pop	r28
     bd8:	1f 91       	pop	r17
     bda:	0f 91       	pop	r16
     bdc:	ff 90       	pop	r15
     bde:	ef 90       	pop	r14
     be0:	08 95       	ret

00000be2 <_Z19Dynamixel_Packet_TXhii>:


// Dynamixel을 구동시키기 위한 패킷통신 함수
void Dynamixel_Packet_TX(unsigned char ID,int Pos,int Spd)
{
     be2:	ff 92       	push	r15
     be4:	0f 93       	push	r16
     be6:	1f 93       	push	r17
     be8:	cf 93       	push	r28
     bea:	df 93       	push	r29
     bec:	f8 2e       	mov	r15, r24
     bee:	16 2f       	mov	r17, r22
     bf0:	c7 2f       	mov	r28, r23
     bf2:	04 2f       	mov	r16, r20
     bf4:	d5 2f       	mov	r29, r21
   Pos_L = Pos;
   Pos_H = (Pos>>8);
   Spd_L = Spd;
   Spd_H = (Spd>>8);

   Uart_Trans0(0xFF);  //ini
     bf6:	8f ef       	ldi	r24, 0xFF	; 255
     bf8:	a3 df       	rcall	.-186    	; 0xb40 <_Z11Uart_Trans0h>
   Uart_Trans0(0xFF);  //ini, Packet의 시작을 알림
     bfa:	8f ef       	ldi	r24, 0xFF	; 255
     bfc:	a1 df       	rcall	.-190    	; 0xb40 <_Z11Uart_Trans0h>
   Uart_Trans0(ID);  //ID, Broadcase = 0xFE
     bfe:	8f 2d       	mov	r24, r15
     c00:	9f df       	rcall	.-194    	; 0xb40 <_Z11Uart_Trans0h>
   Uart_Trans0(0x07);  // Packet의 길이: 7
     c02:	87 e0       	ldi	r24, 0x07	; 7
     c04:	9d df       	rcall	.-198    	; 0xb40 <_Z11Uart_Trans0h>
   Uart_Trans0(0x03);  //Dynamixel에 내릴 명령어(숫자) 입력: Instruction WRITE = 3
     c06:	83 e0       	ldi	r24, 0x03	; 3
     c08:	9b df       	rcall	.-202    	; 0xb40 <_Z11Uart_Trans0h>
   Uart_Trans0(0x1E);  //모터 회전
     c0a:	8e e1       	ldi	r24, 0x1E	; 30
     c0c:	99 df       	rcall	.-206    	; 0xb40 <_Z11Uart_Trans0h>
   Uart_Trans0(Pos_L);  //각도L bit
     c0e:	81 2f       	mov	r24, r17
     c10:	97 df       	rcall	.-210    	; 0xb40 <_Z11Uart_Trans0h>
   Uart_Trans0(Pos_H);  //각도H bit
     c12:	8c 2f       	mov	r24, r28
     c14:	95 df       	rcall	.-214    	; 0xb40 <_Z11Uart_Trans0h>
     c16:	80 2f       	mov	r24, r16
   Uart_Trans0(Spd_L);  //속도L bit
     c18:	93 df       	rcall	.-218    	; 0xb40 <_Z11Uart_Trans0h>
     c1a:	8d 2f       	mov	r24, r29
     c1c:	91 df       	rcall	.-222    	; 0xb40 <_Z11Uart_Trans0h>
   Uart_Trans0(Spd_H);  //속도L bit
     c1e:	88 e2       	ldi	r24, 0x28	; 40
     c20:	8f 0d       	add	r24, r15
   Uart_Trans0((unsigned char)(~(ID + 0x07 + 0x03 + 0x1E + Pos_L + Pos_H + Spd_L + Spd_H))); 
     c22:	80 0f       	add	r24, r16
     c24:	81 0f       	add	r24, r17
     c26:	8d 0f       	add	r24, r29
     c28:	8c 0f       	add	r24, r28
     c2a:	80 95       	com	r24
     c2c:	89 df       	rcall	.-238    	; 0xb40 <_Z11Uart_Trans0h>
     c2e:	df 91       	pop	r29
     c30:	cf 91       	pop	r28
     c32:	1f 91       	pop	r17
            // CheckSum 데이터 검사
     c34:	0f 91       	pop	r16
     c36:	ff 90       	pop	r15
     c38:	08 95       	ret

00000c3a <__vector_16>:
     c3a:	1f 92       	push	r1
     c3c:	0f 92       	push	r0
     c3e:	0f b6       	in	r0, 0x3f	; 63

}

/// 타이머/카운터 0번 인터럽트 ///
ISR(TIMER0_OVF_vect)
{
     c40:	0f 92       	push	r0
     c42:	11 24       	eor	r1, r1
     c44:	0b b6       	in	r0, 0x3b	; 59
     c46:	0f 92       	push	r0
     c48:	4f 92       	push	r4
     c4a:	5f 92       	push	r5
     c4c:	6f 92       	push	r6
     c4e:	7f 92       	push	r7
     c50:	8f 92       	push	r8
     c52:	9f 92       	push	r9
     c54:	af 92       	push	r10
     c56:	bf 92       	push	r11
     c58:	cf 92       	push	r12
     c5a:	df 92       	push	r13
     c5c:	ef 92       	push	r14
     c5e:	ff 92       	push	r15
     c60:	0f 93       	push	r16
     c62:	1f 93       	push	r17
     c64:	2f 93       	push	r18
     c66:	3f 93       	push	r19
     c68:	4f 93       	push	r20
     c6a:	5f 93       	push	r21
     c6c:	6f 93       	push	r22
     c6e:	7f 93       	push	r23
     c70:	8f 93       	push	r24
     c72:	9f 93       	push	r25
     c74:	af 93       	push	r26
     c76:	bf 93       	push	r27
     c78:	ef 93       	push	r30
     c7a:	ff 93       	push	r31
     c7c:	cf 93       	push	r28
     c7e:	df 93       	push	r29
     c80:	00 d0       	rcall	.+0      	; 0xc82 <__vector_16+0x48>
     c82:	00 d0       	rcall	.+0      	; 0xc84 <__vector_16+0x4a>
     c84:	cd b7       	in	r28, 0x3d	; 61
     c86:	de b7       	in	r29, 0x3e	; 62
   TCNT0=100; //10ms 주기
     c88:	84 e6       	ldi	r24, 0x64	; 100
     c8a:	82 bf       	out	0x32, r24	; 50
   PORTA = ~((~PORTA & 0b10111111)|(0b00000000));   // 스텝모터 여자X
     c8c:	de 9a       	sbi	0x1b, 6	; 27
   
      
   // 센서값 읽기
   for(i=0;i<8;i++)               // ADC는 총 8개이므로 8번을 돌린다
     c8e:	10 92 a7 05 	sts	0x05A7, r1	; 0x8005a7 <i+0x1>
     c92:	10 92 a6 05 	sts	0x05A6, r1	; 0x8005a6 <i>
     c96:	80 91 a6 05 	lds	r24, 0x05A6	; 0x8005a6 <i>
     c9a:	90 91 a7 05 	lds	r25, 0x05A7	; 0x8005a7 <i+0x1>
     c9e:	08 97       	sbiw	r24, 0x08	; 8
     ca0:	24 f5       	brge	.+72     	; 0xcea <__vector_16+0xb0>
   {
      ADMUX=(0x40)|i;            // 각 i번째의 ADC 채널 접근
     ca2:	80 91 a6 05 	lds	r24, 0x05A6	; 0x8005a6 <i>
     ca6:	90 91 a7 05 	lds	r25, 0x05A7	; 0x8005a7 <i+0x1>
     caa:	80 64       	ori	r24, 0x40	; 64
     cac:	87 b9       	out	0x07, r24	; 7
      ADCSRA |=(1<<ADSC);         // 해당 채널에서 ADC변환 시작
     cae:	36 9a       	sbi	0x06, 6	; 6
      while(!(ADCSRA&(1<<ADIF)));   // ADC변환이 완료되면 다음 줄로
     cb0:	34 9b       	sbis	0x06, 4	; 6
     cb2:	fe cf       	rjmp	.-4      	; 0xcb0 <__vector_16+0x76>
      adc[i]=ADC;               // i 번째 채널에서 변환된 센서값을 adc 배열의 i 번째에 저장
     cb4:	e0 91 a6 05 	lds	r30, 0x05A6	; 0x8005a6 <i>
     cb8:	f0 91 a7 05 	lds	r31, 0x05A7	; 0x8005a7 <i+0x1>
     cbc:	84 b1       	in	r24, 0x04	; 4
     cbe:	95 b1       	in	r25, 0x05	; 5
     cc0:	ee 0f       	add	r30, r30
     cc2:	ff 1f       	adc	r31, r31
     cc4:	e8 55       	subi	r30, 0x58	; 88
     cc6:	fa 4f       	sbci	r31, 0xFA	; 250
     cc8:	91 83       	std	Z+1, r25	; 0x01
     cca:	80 83       	st	Z, r24
   TCNT0=100; //10ms 주기
   PORTA = ~((~PORTA & 0b10111111)|(0b00000000));   // 스텝모터 여자X
   
      
   // 센서값 읽기
   for(i=0;i<8;i++)               // ADC는 총 8개이므로 8번을 돌린다
     ccc:	80 91 a6 05 	lds	r24, 0x05A6	; 0x8005a6 <i>
     cd0:	90 91 a7 05 	lds	r25, 0x05A7	; 0x8005a7 <i+0x1>
     cd4:	01 96       	adiw	r24, 0x01	; 1
     cd6:	90 93 a7 05 	sts	0x05A7, r25	; 0x8005a7 <i+0x1>
     cda:	80 93 a6 05 	sts	0x05A6, r24	; 0x8005a6 <i>
     cde:	80 91 a6 05 	lds	r24, 0x05A6	; 0x8005a6 <i>
     ce2:	90 91 a7 05 	lds	r25, 0x05A7	; 0x8005a7 <i+0x1>
     ce6:	08 97       	sbiw	r24, 0x08	; 8
     ce8:	e4 f2       	brlt	.-72     	; 0xca2 <__vector_16+0x68>
      while(!(ADCSRA&(1<<ADIF)));   // ADC변환이 완료되면 다음 줄로
      adc[i]=ADC;               // i 번째 채널에서 변환된 센서값을 adc 배열의 i 번째에 저장
   }
   
   // adc 배열변수에 받은 값들을 해당 센서값을 저장하는 변수에 저장
   PM_ADC = adc[0];            // adc 0번: 가변저항
     cea:	e8 ea       	ldi	r30, 0xA8	; 168
     cec:	f5 e0       	ldi	r31, 0x05	; 5
     cee:	60 81       	ld	r22, Z
     cf0:	71 81       	ldd	r23, Z+1	; 0x01
     cf2:	07 2e       	mov	r0, r23
     cf4:	00 0c       	add	r0, r0
     cf6:	88 0b       	sbc	r24, r24
     cf8:	99 0b       	sbc	r25, r25
     cfa:	f4 d5       	rcall	.+3048   	; 0x18e4 <__floatsisf>
     cfc:	60 93 9a 05 	sts	0x059A, r22	; 0x80059a <PM_ADC>
     d00:	70 93 9b 05 	sts	0x059B, r23	; 0x80059b <PM_ADC+0x1>
     d04:	80 93 9c 05 	sts	0x059C, r24	; 0x80059c <PM_ADC+0x2>
     d08:	90 93 9d 05 	sts	0x059D, r25	; 0x80059d <PM_ADC+0x3>
   CDS_ADC = adc[1];         // adc 1번: CDS
     d0c:	60 91 aa 05 	lds	r22, 0x05AA	; 0x8005aa <adc+0x2>
     d10:	70 91 ab 05 	lds	r23, 0x05AB	; 0x8005ab <adc+0x3>
     d14:	07 2e       	mov	r0, r23
     d16:	00 0c       	add	r0, r0
     d18:	88 0b       	sbc	r24, r24
     d1a:	99 0b       	sbc	r25, r25
     d1c:	e3 d5       	rcall	.+3014   	; 0x18e4 <__floatsisf>
     d1e:	60 93 9e 05 	sts	0x059E, r22	; 0x80059e <CDS_ADC>
     d22:	70 93 9f 05 	sts	0x059F, r23	; 0x80059f <CDS_ADC+0x1>
     d26:	80 93 a0 05 	sts	0x05A0, r24	; 0x8005a0 <CDS_ADC+0x2>
     d2a:	90 93 a1 05 	sts	0x05A1, r25	; 0x8005a1 <CDS_ADC+0x3>
   LM35_ADC = adc[2];         // adc 2번: LM35
     d2e:	60 91 ac 05 	lds	r22, 0x05AC	; 0x8005ac <adc+0x4>
     d32:	70 91 ad 05 	lds	r23, 0x05AD	; 0x8005ad <adc+0x5>
     d36:	07 2e       	mov	r0, r23
     d38:	00 0c       	add	r0, r0
     d3a:	88 0b       	sbc	r24, r24
     d3c:	99 0b       	sbc	r25, r25
     d3e:	d2 d5       	rcall	.+2980   	; 0x18e4 <__floatsisf>
     d40:	60 93 a2 05 	sts	0x05A2, r22	; 0x8005a2 <LM35_ADC>
     d44:	70 93 a3 05 	sts	0x05A3, r23	; 0x8005a3 <LM35_ADC+0x1>
     d48:	80 93 a4 05 	sts	0x05A4, r24	; 0x8005a4 <LM35_ADC+0x2>
     d4c:	90 93 a5 05 	sts	0x05A5, r25	; 0x8005a5 <LM35_ADC+0x3>
   THERMISTER_ADC = adc[3];      // adc 3번: 써미스터`
     d50:	60 91 ae 05 	lds	r22, 0x05AE	; 0x8005ae <adc+0x6>
     d54:	70 91 af 05 	lds	r23, 0x05AF	; 0x8005af <adc+0x7>
     d58:	07 2e       	mov	r0, r23
     d5a:	00 0c       	add	r0, r0
     d5c:	88 0b       	sbc	r24, r24
     d5e:	99 0b       	sbc	r25, r25
     d60:	c1 d5       	rcall	.+2946   	; 0x18e4 <__floatsisf>
     d62:	60 93 92 05 	sts	0x0592, r22	; 0x800592 <THERMISTER_ADC>
     d66:	70 93 93 05 	sts	0x0593, r23	; 0x800593 <THERMISTER_ADC+0x1>
     d6a:	80 93 94 05 	sts	0x0594, r24	; 0x800594 <THERMISTER_ADC+0x2>
     d6e:	90 93 95 05 	sts	0x0595, r25	; 0x800595 <THERMISTER_ADC+0x3>
   PSD_ADC = adc[4];         // adc 4번: PSD
     d72:	60 91 b0 05 	lds	r22, 0x05B0	; 0x8005b0 <adc+0x8>
     d76:	70 91 b1 05 	lds	r23, 0x05B1	; 0x8005b1 <adc+0x9>
     d7a:	07 2e       	mov	r0, r23
     d7c:	00 0c       	add	r0, r0
     d7e:	88 0b       	sbc	r24, r24
     d80:	99 0b       	sbc	r25, r25
     d82:	b0 d5       	rcall	.+2912   	; 0x18e4 <__floatsisf>
     d84:	60 93 96 05 	sts	0x0596, r22	; 0x800596 <PSD_ADC>
     d88:	70 93 97 05 	sts	0x0597, r23	; 0x800597 <PSD_ADC+0x1>
     d8c:	80 93 98 05 	sts	0x0598, r24	; 0x800598 <PSD_ADC+0x2>
     d90:	90 93 99 05 	sts	0x0599, r25	; 0x800599 <PSD_ADC+0x3>
   IR_ADC = adc[5];            // adc 5번: IR
     d94:	60 91 b2 05 	lds	r22, 0x05B2	; 0x8005b2 <adc+0xa>
     d98:	70 91 b3 05 	lds	r23, 0x05B3	; 0x8005b3 <adc+0xb>
     d9c:	07 2e       	mov	r0, r23
     d9e:	00 0c       	add	r0, r0
     da0:	88 0b       	sbc	r24, r24
     da2:	99 0b       	sbc	r25, r25
     da4:	9f d5       	rcall	.+2878   	; 0x18e4 <__floatsisf>
     da6:	60 93 8e 05 	sts	0x058E, r22	; 0x80058e <IR_ADC>
     daa:	70 93 8f 05 	sts	0x058F, r23	; 0x80058f <IR_ADC+0x1>
     dae:	80 93 90 05 	sts	0x0590, r24	; 0x800590 <IR_ADC+0x2>
     db2:	90 93 91 05 	sts	0x0591, r25	; 0x800591 <IR_ADC+0x3>
   
   // USART로 원활한 주파수 비교 및 확인을 위해 필터링 이전 값들을 따로 배열에 저장
   NF_ADC[0] = PM_ADC;         // adc 0번: 가변저항
     db6:	80 91 9a 05 	lds	r24, 0x059A	; 0x80059a <PM_ADC>
     dba:	90 91 9b 05 	lds	r25, 0x059B	; 0x80059b <PM_ADC+0x1>
     dbe:	a0 91 9c 05 	lds	r26, 0x059C	; 0x80059c <PM_ADC+0x2>
     dc2:	b0 91 9d 05 	lds	r27, 0x059D	; 0x80059d <PM_ADC+0x3>
     dc6:	e4 e7       	ldi	r30, 0x74	; 116
     dc8:	f5 e0       	ldi	r31, 0x05	; 5
     dca:	80 83       	st	Z, r24
     dcc:	91 83       	std	Z+1, r25	; 0x01
     dce:	a2 83       	std	Z+2, r26	; 0x02
     dd0:	b3 83       	std	Z+3, r27	; 0x03
   NF_ADC[1] = CDS_ADC;         // adc 1번: CDS
     dd2:	80 91 9e 05 	lds	r24, 0x059E	; 0x80059e <CDS_ADC>
     dd6:	90 91 9f 05 	lds	r25, 0x059F	; 0x80059f <CDS_ADC+0x1>
     dda:	a0 91 a0 05 	lds	r26, 0x05A0	; 0x8005a0 <CDS_ADC+0x2>
     dde:	b0 91 a1 05 	lds	r27, 0x05A1	; 0x8005a1 <CDS_ADC+0x3>
     de2:	84 83       	std	Z+4, r24	; 0x04
     de4:	95 83       	std	Z+5, r25	; 0x05
     de6:	a6 83       	std	Z+6, r26	; 0x06
     de8:	b7 83       	std	Z+7, r27	; 0x07
   NF_ADC[2] = LM35_ADC;      // adc 2번: LM35
     dea:	80 91 a2 05 	lds	r24, 0x05A2	; 0x8005a2 <LM35_ADC>
     dee:	90 91 a3 05 	lds	r25, 0x05A3	; 0x8005a3 <LM35_ADC+0x1>
     df2:	a0 91 a4 05 	lds	r26, 0x05A4	; 0x8005a4 <LM35_ADC+0x2>
     df6:	b0 91 a5 05 	lds	r27, 0x05A5	; 0x8005a5 <LM35_ADC+0x3>
     dfa:	80 87       	std	Z+8, r24	; 0x08
     dfc:	91 87       	std	Z+9, r25	; 0x09
     dfe:	a2 87       	std	Z+10, r26	; 0x0a
     e00:	b3 87       	std	Z+11, r27	; 0x0b
   NF_ADC[3] = THERMISTER_ADC;   // adc 3번: 써미스터`
     e02:	80 91 92 05 	lds	r24, 0x0592	; 0x800592 <THERMISTER_ADC>
     e06:	90 91 93 05 	lds	r25, 0x0593	; 0x800593 <THERMISTER_ADC+0x1>
     e0a:	a0 91 94 05 	lds	r26, 0x0594	; 0x800594 <THERMISTER_ADC+0x2>
     e0e:	b0 91 95 05 	lds	r27, 0x0595	; 0x800595 <THERMISTER_ADC+0x3>
     e12:	84 87       	std	Z+12, r24	; 0x0c
     e14:	95 87       	std	Z+13, r25	; 0x0d
     e16:	a6 87       	std	Z+14, r26	; 0x0e
     e18:	b7 87       	std	Z+15, r27	; 0x0f
   NF_ADC[4] = PSD_ADC;         // adc 4번: PSD
     e1a:	80 91 96 05 	lds	r24, 0x0596	; 0x800596 <PSD_ADC>
     e1e:	90 91 97 05 	lds	r25, 0x0597	; 0x800597 <PSD_ADC+0x1>
     e22:	a0 91 98 05 	lds	r26, 0x0598	; 0x800598 <PSD_ADC+0x2>
     e26:	b0 91 99 05 	lds	r27, 0x0599	; 0x800599 <PSD_ADC+0x3>
     e2a:	80 8b       	std	Z+16, r24	; 0x10
     e2c:	91 8b       	std	Z+17, r25	; 0x11
     e2e:	a2 8b       	std	Z+18, r26	; 0x12
     e30:	b3 8b       	std	Z+19, r27	; 0x13
   NF_ADC[5] = IR_ADC;         // adc 5번: IR
     e32:	80 91 8e 05 	lds	r24, 0x058E	; 0x80058e <IR_ADC>
     e36:	90 91 8f 05 	lds	r25, 0x058F	; 0x80058f <IR_ADC+0x1>
     e3a:	a0 91 90 05 	lds	r26, 0x0590	; 0x800590 <IR_ADC+0x2>
     e3e:	b0 91 91 05 	lds	r27, 0x0591	; 0x800591 <IR_ADC+0x3>
     e42:	84 8b       	std	Z+20, r24	; 0x14
     e44:	95 8b       	std	Z+21, r25	; 0x15
     e46:	a6 8b       	std	Z+22, r26	; 0x16
     e48:	b7 8b       	std	Z+23, r27	; 0x17
   
   // 필터링을 마친 센서값을 저장
   F_ADC[0] = IIR_LPF_PM(PM_ADC);          // 가변저항 - IIR 필터 적용
     e4a:	60 91 9a 05 	lds	r22, 0x059A	; 0x80059a <PM_ADC>
     e4e:	70 91 9b 05 	lds	r23, 0x059B	; 0x80059b <PM_ADC+0x1>
     e52:	80 91 9c 05 	lds	r24, 0x059C	; 0x80059c <PM_ADC+0x2>
     e56:	90 91 9d 05 	lds	r25, 0x059D	; 0x80059d <PM_ADC+0x3>
     e5a:	96 db       	rcall	.-2260   	; 0x588 <_Z10IIR_LPF_PMd>
     e5c:	ec e5       	ldi	r30, 0x5C	; 92
     e5e:	f5 e0       	ldi	r31, 0x05	; 5
     e60:	60 83       	st	Z, r22
     e62:	71 83       	std	Z+1, r23	; 0x01
     e64:	82 83       	std	Z+2, r24	; 0x02
     e66:	93 83       	std	Z+3, r25	; 0x03
   F_ADC[1] = FIR_LPF(CDS_ADC);            // CDS - FIR 필터 적용
     e68:	60 91 9e 05 	lds	r22, 0x059E	; 0x80059e <CDS_ADC>
     e6c:	70 91 9f 05 	lds	r23, 0x059F	; 0x80059f <CDS_ADC+0x1>
     e70:	80 91 a0 05 	lds	r24, 0x05A0	; 0x8005a0 <CDS_ADC+0x2>
     e74:	90 91 a1 05 	lds	r25, 0x05A1	; 0x8005a1 <CDS_ADC+0x3>
     e78:	95 d9       	rcall	.-3286   	; 0x1a4 <_Z7FIR_LPFd>
     e7a:	60 93 60 05 	sts	0x0560, r22	; 0x800560 <F_ADC+0x4>
     e7e:	70 93 61 05 	sts	0x0561, r23	; 0x800561 <F_ADC+0x5>
     e82:	80 93 62 05 	sts	0x0562, r24	; 0x800562 <F_ADC+0x6>
     e86:	90 93 63 05 	sts	0x0563, r25	; 0x800563 <F_ADC+0x7>
   F_ADC[2] = IIR_LPF_LM35(LM35_ADC);      // LM35 - IIR 필터 적용
     e8a:	60 91 a2 05 	lds	r22, 0x05A2	; 0x8005a2 <LM35_ADC>
     e8e:	70 91 a3 05 	lds	r23, 0x05A3	; 0x8005a3 <LM35_ADC+0x1>
     e92:	80 91 a4 05 	lds	r24, 0x05A4	; 0x8005a4 <LM35_ADC+0x2>
     e96:	90 91 a5 05 	lds	r25, 0x05A5	; 0x8005a5 <LM35_ADC+0x3>
     e9a:	ce da       	rcall	.-2660   	; 0x438 <_Z12IIR_LPF_LM35d>
     e9c:	60 93 64 05 	sts	0x0564, r22	; 0x800564 <F_ADC+0x8>
     ea0:	70 93 65 05 	sts	0x0565, r23	; 0x800565 <F_ADC+0x9>
     ea4:	80 93 66 05 	sts	0x0566, r24	; 0x800566 <F_ADC+0xa>
     ea8:	90 93 67 05 	sts	0x0567, r25	; 0x800567 <F_ADC+0xb>
   F_ADC[3] = IIR_LPF(THERMISTER_ADC);     // 서미스터 - IIR 필터 적용
     eac:	60 91 92 05 	lds	r22, 0x0592	; 0x800592 <THERMISTER_ADC>
     eb0:	70 91 93 05 	lds	r23, 0x0593	; 0x800593 <THERMISTER_ADC+0x1>
     eb4:	80 91 94 05 	lds	r24, 0x0594	; 0x800594 <THERMISTER_ADC+0x2>
     eb8:	90 91 95 05 	lds	r25, 0x0595	; 0x800595 <THERMISTER_ADC+0x3>
     ebc:	15 da       	rcall	.-3030   	; 0x2e8 <_Z7IIR_LPFd>
     ebe:	60 93 68 05 	sts	0x0568, r22	; 0x800568 <F_ADC+0xc>
     ec2:	70 93 69 05 	sts	0x0569, r23	; 0x800569 <F_ADC+0xd>
     ec6:	80 93 6a 05 	sts	0x056A, r24	; 0x80056a <F_ADC+0xe>
     eca:	90 93 6b 05 	sts	0x056B, r25	; 0x80056b <F_ADC+0xf>
   F_ADC[4] = Kalman_Filter(PSD_ADC);      // PSD - 칼만필터 적용
     ece:	60 91 96 05 	lds	r22, 0x0596	; 0x800596 <PSD_ADC>
     ed2:	70 91 97 05 	lds	r23, 0x0597	; 0x800597 <PSD_ADC+0x1>
     ed6:	80 91 98 05 	lds	r24, 0x0598	; 0x800598 <PSD_ADC+0x2>
     eda:	90 91 99 05 	lds	r25, 0x0599	; 0x800599 <PSD_ADC+0x3>
     ede:	a1 dc       	rcall	.-1726   	; 0x822 <_Z13Kalman_Filterd>
     ee0:	60 93 6c 05 	sts	0x056C, r22	; 0x80056c <F_ADC+0x10>
     ee4:	70 93 6d 05 	sts	0x056D, r23	; 0x80056d <F_ADC+0x11>
     ee8:	80 93 6e 05 	sts	0x056E, r24	; 0x80056e <F_ADC+0x12>
     eec:	90 93 6f 05 	sts	0x056F, r25	; 0x80056f <F_ADC+0x13>
   F_ADC[5] = IIR_LPF_IR(IR_ADC);          // IR - IIR 필터 적용
     ef0:	60 91 8e 05 	lds	r22, 0x058E	; 0x80058e <IR_ADC>
     ef4:	70 91 8f 05 	lds	r23, 0x058F	; 0x80058f <IR_ADC+0x1>
     ef8:	80 91 90 05 	lds	r24, 0x0590	; 0x800590 <IR_ADC+0x2>
     efc:	90 91 91 05 	lds	r25, 0x0591	; 0x800591 <IR_ADC+0x3>
     f00:	eb db       	rcall	.-2090   	; 0x6d8 <_Z10IIR_LPF_IRd>
     f02:	60 93 70 05 	sts	0x0570, r22	; 0x800570 <F_ADC+0x14>
     f06:	70 93 71 05 	sts	0x0571, r23	; 0x800571 <F_ADC+0x15>
     f0a:	80 93 72 05 	sts	0x0572, r24	; 0x800572 <F_ADC+0x16>
     f0e:	90 93 73 05 	sts	0x0573, r25	; 0x800573 <F_ADC+0x17>
     f12:	60 91 04 01 	lds	r22, 0x0104	; 0x800104 <R9>
   
   ///////// 
   //수치화//
   /////////
   // CDS 수치화를 위한 파라미터 계산
   R_cds = (((R9*AVCC*1023)/(F_ADC[1] * 5)) - R9);
     f16:	70 91 05 01 	lds	r23, 0x0105	; 0x800105 <R9+0x1>
     f1a:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <R9+0x2>
     f1e:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <R9+0x3>
     f22:	20 91 18 01 	lds	r18, 0x0118	; 0x800118 <AVCC>
     f26:	30 91 19 01 	lds	r19, 0x0119	; 0x800119 <AVCC+0x1>
     f2a:	40 91 1a 01 	lds	r20, 0x011A	; 0x80011a <AVCC+0x2>
     f2e:	50 91 1b 01 	lds	r21, 0x011B	; 0x80011b <AVCC+0x3>
     f32:	40 90 60 05 	lds	r4, 0x0560	; 0x800560 <F_ADC+0x4>
     f36:	50 90 61 05 	lds	r5, 0x0561	; 0x800561 <F_ADC+0x5>
     f3a:	60 90 62 05 	lds	r6, 0x0562	; 0x800562 <F_ADC+0x6>
     f3e:	70 90 63 05 	lds	r7, 0x0563	; 0x800563 <F_ADC+0x7>
     f42:	c0 90 04 01 	lds	r12, 0x0104	; 0x800104 <R9>
     f46:	d0 90 05 01 	lds	r13, 0x0105	; 0x800105 <R9+0x1>
     f4a:	e0 90 06 01 	lds	r14, 0x0106	; 0x800106 <R9+0x2>
     f4e:	f0 90 07 01 	lds	r15, 0x0107	; 0x800107 <R9+0x3>
     f52:	c7 d5       	rcall	.+2958   	; 0x1ae2 <__mulsf3>
     f54:	20 e0       	ldi	r18, 0x00	; 0
     f56:	30 ec       	ldi	r19, 0xC0	; 192
     f58:	4f e7       	ldi	r20, 0x7F	; 127
     f5a:	54 e4       	ldi	r21, 0x44	; 68
     f5c:	c2 d5       	rcall	.+2948   	; 0x1ae2 <__mulsf3>
     f5e:	4b 01       	movw	r8, r22
     f60:	5c 01       	movw	r10, r24
     f62:	20 e0       	ldi	r18, 0x00	; 0
     f64:	30 e0       	ldi	r19, 0x00	; 0
     f66:	40 ea       	ldi	r20, 0xA0	; 160
     f68:	50 e4       	ldi	r21, 0x40	; 64
     f6a:	c3 01       	movw	r24, r6
     f6c:	b2 01       	movw	r22, r4
     f6e:	b9 d5       	rcall	.+2930   	; 0x1ae2 <__mulsf3>
     f70:	9b 01       	movw	r18, r22
     f72:	ac 01       	movw	r20, r24
     f74:	c5 01       	movw	r24, r10
     f76:	b4 01       	movw	r22, r8
     f78:	1a d4       	rcall	.+2100   	; 0x17ae <__divsf3>
     f7a:	a7 01       	movw	r20, r14
     f7c:	96 01       	movw	r18, r12
     f7e:	ae d3       	rcall	.+1884   	; 0x16dc <__subsf3>
     f80:	60 93 30 03 	sts	0x0330, r22	; 0x800330 <R_cds>
     f84:	70 93 31 03 	sts	0x0331, r23	; 0x800331 <R_cds+0x1>
     f88:	80 93 32 03 	sts	0x0332, r24	; 0x800332 <R_cds+0x2>
     f8c:	90 93 33 03 	sts	0x0333, r25	; 0x800333 <R_cds+0x3>
   x = (1 - ((log10(R_cds) - log10(40000)) / gamm));
     f90:	60 91 30 03 	lds	r22, 0x0330	; 0x800330 <R_cds>
     f94:	70 91 31 03 	lds	r23, 0x0331	; 0x800331 <R_cds+0x1>
     f98:	80 91 32 03 	lds	r24, 0x0332	; 0x800332 <R_cds+0x2>
     f9c:	90 91 33 03 	lds	r25, 0x0333	; 0x800333 <R_cds+0x3>
     fa0:	55 d5       	rcall	.+2730   	; 0x1a4c <log10>
     fa2:	c0 90 00 01 	lds	r12, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     fa6:	d0 90 01 01 	lds	r13, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     faa:	e0 90 02 01 	lds	r14, 0x0102	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
     fae:	f0 90 03 01 	lds	r15, 0x0103	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
     fb2:	23 e1       	ldi	r18, 0x13	; 19
     fb4:	34 e4       	ldi	r19, 0x44	; 68
     fb6:	43 e9       	ldi	r20, 0x93	; 147
     fb8:	50 e4       	ldi	r21, 0x40	; 64
     fba:	90 d3       	rcall	.+1824   	; 0x16dc <__subsf3>
     fbc:	a7 01       	movw	r20, r14
     fbe:	96 01       	movw	r18, r12
     fc0:	f6 d3       	rcall	.+2028   	; 0x17ae <__divsf3>
     fc2:	9b 01       	movw	r18, r22
     fc4:	ac 01       	movw	r20, r24
     fc6:	60 e0       	ldi	r22, 0x00	; 0
     fc8:	70 e0       	ldi	r23, 0x00	; 0
     fca:	80 e8       	ldi	r24, 0x80	; 128
     fcc:	9f e3       	ldi	r25, 0x3F	; 63
     fce:	86 d3       	rcall	.+1804   	; 0x16dc <__subsf3>
     fd0:	60 93 2c 03 	sts	0x032C, r22	; 0x80032c <__data_end>
     fd4:	70 93 2d 03 	sts	0x032D, r23	; 0x80032d <__data_end+0x1>
     fd8:	80 93 2e 03 	sts	0x032E, r24	; 0x80032e <__data_end+0x2>
     fdc:	90 93 2f 03 	sts	0x032F, r25	; 0x80032f <__data_end+0x3>
     fe0:	60 91 18 01 	lds	r22, 0x0118	; 0x800118 <AVCC>
   // Thermister 수치화를 위한 파라미터 계산
   R_th = (double)((AVCC * 1023 * R10 / (F_ADC[3] * 5 ))  - R10);
     fe4:	70 91 19 01 	lds	r23, 0x0119	; 0x800119 <AVCC+0x1>
     fe8:	80 91 1a 01 	lds	r24, 0x011A	; 0x80011a <AVCC+0x2>
     fec:	90 91 1b 01 	lds	r25, 0x011B	; 0x80011b <AVCC+0x3>
     ff0:	80 90 08 01 	lds	r8, 0x0108	; 0x800108 <R10>
     ff4:	90 90 09 01 	lds	r9, 0x0109	; 0x800109 <R10+0x1>
     ff8:	a0 90 0a 01 	lds	r10, 0x010A	; 0x80010a <R10+0x2>
     ffc:	b0 90 0b 01 	lds	r11, 0x010B	; 0x80010b <R10+0x3>
    1000:	40 90 68 05 	lds	r4, 0x0568	; 0x800568 <F_ADC+0xc>
    1004:	50 90 69 05 	lds	r5, 0x0569	; 0x800569 <F_ADC+0xd>
    1008:	60 90 6a 05 	lds	r6, 0x056A	; 0x80056a <F_ADC+0xe>
    100c:	70 90 6b 05 	lds	r7, 0x056B	; 0x80056b <F_ADC+0xf>
    1010:	c0 90 08 01 	lds	r12, 0x0108	; 0x800108 <R10>
    1014:	d0 90 09 01 	lds	r13, 0x0109	; 0x800109 <R10+0x1>
    1018:	e0 90 0a 01 	lds	r14, 0x010A	; 0x80010a <R10+0x2>
    101c:	f0 90 0b 01 	lds	r15, 0x010B	; 0x80010b <R10+0x3>
    1020:	20 e0       	ldi	r18, 0x00	; 0
    1022:	30 ec       	ldi	r19, 0xC0	; 192
    1024:	4f e7       	ldi	r20, 0x7F	; 127
    1026:	54 e4       	ldi	r21, 0x44	; 68
    1028:	5c d5       	rcall	.+2744   	; 0x1ae2 <__mulsf3>
    102a:	a5 01       	movw	r20, r10
    102c:	94 01       	movw	r18, r8
    102e:	59 d5       	rcall	.+2738   	; 0x1ae2 <__mulsf3>
    1030:	4b 01       	movw	r8, r22
    1032:	5c 01       	movw	r10, r24
    1034:	20 e0       	ldi	r18, 0x00	; 0
    1036:	30 e0       	ldi	r19, 0x00	; 0
    1038:	40 ea       	ldi	r20, 0xA0	; 160
    103a:	50 e4       	ldi	r21, 0x40	; 64
    103c:	c3 01       	movw	r24, r6
    103e:	b2 01       	movw	r22, r4
    1040:	50 d5       	rcall	.+2720   	; 0x1ae2 <__mulsf3>
    1042:	9b 01       	movw	r18, r22
    1044:	ac 01       	movw	r20, r24
    1046:	c5 01       	movw	r24, r10
    1048:	b4 01       	movw	r22, r8
    104a:	b1 d3       	rcall	.+1890   	; 0x17ae <__divsf3>
    104c:	a7 01       	movw	r20, r14
    104e:	96 01       	movw	r18, r12
    1050:	45 d3       	rcall	.+1674   	; 0x16dc <__subsf3>
    1052:	60 93 34 03 	sts	0x0334, r22	; 0x800334 <R_th>
    1056:	70 93 35 03 	sts	0x0335, r23	; 0x800335 <R_th+0x1>
    105a:	80 93 36 03 	sts	0x0336, r24	; 0x800336 <R_th+0x2>
    105e:	90 93 37 03 	sts	0x0337, r25	; 0x800337 <R_th+0x3>
   
   
   
   // 최종 계산된 수치화 값 저장
   Digit_F_ADC[0] = (double)((F_ADC[0]*100)/1023);    // 가변저항 수치화  0~1023 -> 0~100 
    1062:	ec e5       	ldi	r30, 0x5C	; 92
    1064:	f5 e0       	ldi	r31, 0x05	; 5
    1066:	60 81       	ld	r22, Z
    1068:	71 81       	ldd	r23, Z+1	; 0x01
    106a:	82 81       	ldd	r24, Z+2	; 0x02
    106c:	93 81       	ldd	r25, Z+3	; 0x03
    106e:	20 e0       	ldi	r18, 0x00	; 0
    1070:	30 e0       	ldi	r19, 0x00	; 0
    1072:	48 ec       	ldi	r20, 0xC8	; 200
    1074:	52 e4       	ldi	r21, 0x42	; 66
    1076:	35 d5       	rcall	.+2666   	; 0x1ae2 <__mulsf3>
    1078:	20 e0       	ldi	r18, 0x00	; 0
    107a:	30 ec       	ldi	r19, 0xC0	; 192
    107c:	4f e7       	ldi	r20, 0x7F	; 127
    107e:	54 e4       	ldi	r21, 0x44	; 68
    1080:	96 d3       	rcall	.+1836   	; 0x17ae <__divsf3>
    1082:	04 e4       	ldi	r16, 0x44	; 68
    1084:	15 e0       	ldi	r17, 0x05	; 5
    1086:	f8 01       	movw	r30, r16
    1088:	60 83       	st	Z, r22
    108a:	71 83       	std	Z+1, r23	; 0x01
    108c:	82 83       	std	Z+2, r24	; 0x02
    108e:	93 83       	std	Z+3, r25	; 0x03
   Digit_F_ADC[1] = pow(10, x);
    1090:	20 91 2c 03 	lds	r18, 0x032C	; 0x80032c <__data_end>
    1094:	30 91 2d 03 	lds	r19, 0x032D	; 0x80032d <__data_end+0x1>
    1098:	40 91 2e 03 	lds	r20, 0x032E	; 0x80032e <__data_end+0x2>
    109c:	50 91 2f 03 	lds	r21, 0x032F	; 0x80032f <__data_end+0x3>
    10a0:	60 e0       	ldi	r22, 0x00	; 0
    10a2:	70 e0       	ldi	r23, 0x00	; 0
    10a4:	80 e2       	ldi	r24, 0x20	; 32
    10a6:	91 e4       	ldi	r25, 0x41	; 65
    10a8:	7f d5       	rcall	.+2814   	; 0x1ba8 <pow>
    10aa:	f8 01       	movw	r30, r16
    10ac:	64 83       	std	Z+4, r22	; 0x04
    10ae:	75 83       	std	Z+5, r23	; 0x05
    10b0:	86 83       	std	Z+6, r24	; 0x06
    10b2:	97 83       	std	Z+7, r25	; 0x07
   if (F_ADC[2]<185) Digit_F_ADC[2]=25;                          //173(846mv)이하일때는 25도로 간주
    10b4:	60 91 64 05 	lds	r22, 0x0564	; 0x800564 <F_ADC+0x8>
    10b8:	70 91 65 05 	lds	r23, 0x0565	; 0x800565 <F_ADC+0x9>
    10bc:	80 91 66 05 	lds	r24, 0x0566	; 0x800566 <F_ADC+0xa>
    10c0:	90 91 67 05 	lds	r25, 0x0567	; 0x800567 <F_ADC+0xb>
    10c4:	20 e0       	ldi	r18, 0x00	; 0
    10c6:	30 e0       	ldi	r19, 0x00	; 0
    10c8:	49 e3       	ldi	r20, 0x39	; 57
    10ca:	53 e4       	ldi	r21, 0x43	; 67
    10cc:	6c d3       	rcall	.+1752   	; 0x17a6 <__cmpsf2>
    10ce:	88 23       	and	r24, r24
    10d0:	6c f4       	brge	.+26     	; 0x10ec <__vector_16+0x4b2>
    10d2:	80 e0       	ldi	r24, 0x00	; 0
    10d4:	90 e0       	ldi	r25, 0x00	; 0
    10d6:	a8 ec       	ldi	r26, 0xC8	; 200
    10d8:	b1 e4       	ldi	r27, 0x41	; 65
    10da:	80 93 4c 05 	sts	0x054C, r24	; 0x80054c <Digit_F_ADC+0x8>
    10de:	90 93 4d 05 	sts	0x054D, r25	; 0x80054d <Digit_F_ADC+0x9>
    10e2:	a0 93 4e 05 	sts	0x054E, r26	; 0x80054e <Digit_F_ADC+0xa>
    10e6:	b0 93 4f 05 	sts	0x054F, r27	; 0x80054f <Digit_F_ADC+0xb>
   else Digit_F_ADC[2] = (double)(F_ADC[2]*5.0*100)/(1023*2);    //LM35의정상적인 수치 변환된 값 
    10ea:	1f c0       	rjmp	.+62     	; 0x112a <__stack+0x2b>
    10ec:	60 91 64 05 	lds	r22, 0x0564	; 0x800564 <F_ADC+0x8>
    10f0:	70 91 65 05 	lds	r23, 0x0565	; 0x800565 <F_ADC+0x9>
    10f4:	80 91 66 05 	lds	r24, 0x0566	; 0x800566 <F_ADC+0xa>
    10f8:	90 91 67 05 	lds	r25, 0x0567	; 0x800567 <F_ADC+0xb>
    10fc:	20 e0       	ldi	r18, 0x00	; 0
    10fe:	30 e0       	ldi	r19, 0x00	; 0
    1100:	40 ea       	ldi	r20, 0xA0	; 160
    1102:	50 e4       	ldi	r21, 0x40	; 64
    1104:	ee d4       	rcall	.+2524   	; 0x1ae2 <__mulsf3>
    1106:	20 e0       	ldi	r18, 0x00	; 0
    1108:	30 e0       	ldi	r19, 0x00	; 0
    110a:	48 ec       	ldi	r20, 0xC8	; 200
    110c:	52 e4       	ldi	r21, 0x42	; 66
    110e:	e9 d4       	rcall	.+2514   	; 0x1ae2 <__mulsf3>
    1110:	20 e0       	ldi	r18, 0x00	; 0
    1112:	30 ec       	ldi	r19, 0xC0	; 192
    1114:	4f ef       	ldi	r20, 0xFF	; 255
    1116:	54 e4       	ldi	r21, 0x44	; 68
    1118:	4a d3       	rcall	.+1684   	; 0x17ae <__divsf3>
    111a:	60 93 4c 05 	sts	0x054C, r22	; 0x80054c <Digit_F_ADC+0x8>
    111e:	70 93 4d 05 	sts	0x054D, r23	; 0x80054d <Digit_F_ADC+0x9>
    1122:	80 93 4e 05 	sts	0x054E, r24	; 0x80054e <Digit_F_ADC+0xa>
    1126:	90 93 4f 05 	sts	0x054F, r25	; 0x80054f <Digit_F_ADC+0xb>
   Digit_F_ADC[3] = (double)(1 / ((1 / (t_0 + 273.15) + ((1 / beta)*(log(R_th)-log(R_0))))) - 273.15);
    112a:	c0 90 0c 01 	lds	r12, 0x010C	; 0x80010c <t_0>
    112e:	d0 90 0d 01 	lds	r13, 0x010D	; 0x80010d <t_0+0x1>
    1132:	e0 90 0e 01 	lds	r14, 0x010E	; 0x80010e <t_0+0x2>
    1136:	f0 90 0f 01 	lds	r15, 0x010F	; 0x80010f <t_0+0x3>
    113a:	80 90 10 01 	lds	r8, 0x0110	; 0x800110 <beta>
    113e:	90 90 11 01 	lds	r9, 0x0111	; 0x800111 <beta+0x1>
    1142:	a0 90 12 01 	lds	r10, 0x0112	; 0x800112 <beta+0x2>
    1146:	b0 90 13 01 	lds	r11, 0x0113	; 0x800113 <beta+0x3>
    114a:	60 91 34 03 	lds	r22, 0x0334	; 0x800334 <R_th>
    114e:	70 91 35 03 	lds	r23, 0x0335	; 0x800335 <R_th+0x1>
    1152:	80 91 36 03 	lds	r24, 0x0336	; 0x800336 <R_th+0x2>
    1156:	90 91 37 03 	lds	r25, 0x0337	; 0x800337 <R_th+0x3>
    115a:	83 d4       	rcall	.+2310   	; 0x1a62 <log>
    115c:	2b 01       	movw	r4, r22
    115e:	3c 01       	movw	r6, r24
    1160:	60 91 14 01 	lds	r22, 0x0114	; 0x800114 <R_0>
    1164:	70 91 15 01 	lds	r23, 0x0115	; 0x800115 <R_0+0x1>
    1168:	80 91 16 01 	lds	r24, 0x0116	; 0x800116 <R_0+0x2>
    116c:	90 91 17 01 	lds	r25, 0x0117	; 0x800117 <R_0+0x3>
    1170:	78 d4       	rcall	.+2288   	; 0x1a62 <log>
    1172:	69 83       	std	Y+1, r22	; 0x01
    1174:	7a 83       	std	Y+2, r23	; 0x02
    1176:	8b 83       	std	Y+3, r24	; 0x03
    1178:	9c 83       	std	Y+4, r25	; 0x04
    117a:	a5 01       	movw	r20, r10
    117c:	94 01       	movw	r18, r8
    117e:	60 e0       	ldi	r22, 0x00	; 0
    1180:	70 e0       	ldi	r23, 0x00	; 0
    1182:	80 e8       	ldi	r24, 0x80	; 128
    1184:	9f e3       	ldi	r25, 0x3F	; 63
    1186:	13 d3       	rcall	.+1574   	; 0x17ae <__divsf3>
    1188:	4b 01       	movw	r8, r22
    118a:	5c 01       	movw	r10, r24
    118c:	29 81       	ldd	r18, Y+1	; 0x01
    118e:	3a 81       	ldd	r19, Y+2	; 0x02
    1190:	4b 81       	ldd	r20, Y+3	; 0x03
    1192:	5c 81       	ldd	r21, Y+4	; 0x04
    1194:	c3 01       	movw	r24, r6
    1196:	b2 01       	movw	r22, r4
    1198:	a1 d2       	rcall	.+1346   	; 0x16dc <__subsf3>
    119a:	9b 01       	movw	r18, r22
    119c:	ac 01       	movw	r20, r24
    119e:	c5 01       	movw	r24, r10
    11a0:	b4 01       	movw	r22, r8
    11a2:	9f d4       	rcall	.+2366   	; 0x1ae2 <__mulsf3>
    11a4:	4b 01       	movw	r8, r22
    11a6:	5c 01       	movw	r10, r24
    11a8:	23 e3       	ldi	r18, 0x33	; 51
    11aa:	33 e9       	ldi	r19, 0x93	; 147
    11ac:	48 e8       	ldi	r20, 0x88	; 136
    11ae:	53 e4       	ldi	r21, 0x43	; 67
    11b0:	c7 01       	movw	r24, r14
    11b2:	b6 01       	movw	r22, r12
    11b4:	94 d2       	rcall	.+1320   	; 0x16de <__addsf3>
    11b6:	9b 01       	movw	r18, r22
    11b8:	ac 01       	movw	r20, r24
    11ba:	60 e0       	ldi	r22, 0x00	; 0
    11bc:	70 e0       	ldi	r23, 0x00	; 0
    11be:	80 e8       	ldi	r24, 0x80	; 128
    11c0:	9f e3       	ldi	r25, 0x3F	; 63
    11c2:	f5 d2       	rcall	.+1514   	; 0x17ae <__divsf3>
    11c4:	9b 01       	movw	r18, r22
    11c6:	ac 01       	movw	r20, r24
    11c8:	c5 01       	movw	r24, r10
    11ca:	b4 01       	movw	r22, r8
    11cc:	88 d2       	rcall	.+1296   	; 0x16de <__addsf3>
    11ce:	9b 01       	movw	r18, r22
    11d0:	ac 01       	movw	r20, r24
    11d2:	60 e0       	ldi	r22, 0x00	; 0
    11d4:	70 e0       	ldi	r23, 0x00	; 0
    11d6:	80 e8       	ldi	r24, 0x80	; 128
    11d8:	9f e3       	ldi	r25, 0x3F	; 63
    11da:	e9 d2       	rcall	.+1490   	; 0x17ae <__divsf3>
    11dc:	23 e3       	ldi	r18, 0x33	; 51
    11de:	33 e9       	ldi	r19, 0x93	; 147
    11e0:	48 e8       	ldi	r20, 0x88	; 136
    11e2:	53 e4       	ldi	r21, 0x43	; 67
    11e4:	7b d2       	rcall	.+1270   	; 0x16dc <__subsf3>
    11e6:	60 93 50 05 	sts	0x0550, r22	; 0x800550 <Digit_F_ADC+0xc>
    11ea:	70 93 51 05 	sts	0x0551, r23	; 0x800551 <Digit_F_ADC+0xd>
    11ee:	80 93 52 05 	sts	0x0552, r24	; 0x800552 <Digit_F_ADC+0xe>
    11f2:	90 93 53 05 	sts	0x0553, r25	; 0x800553 <Digit_F_ADC+0xf>
   Digit_F_ADC[4] = (double)(49104/F_ADC[4]);   // PSD 수치화 (mm단위 까지 보기위해 *10)
    11f6:	0c e5       	ldi	r16, 0x5C	; 92
    11f8:	15 e0       	ldi	r17, 0x05	; 5
    11fa:	f8 01       	movw	r30, r16
    11fc:	20 89       	ldd	r18, Z+16	; 0x10
    11fe:	31 89       	ldd	r19, Z+17	; 0x11
    1200:	42 89       	ldd	r20, Z+18	; 0x12
    1202:	53 89       	ldd	r21, Z+19	; 0x13
    1204:	60 e0       	ldi	r22, 0x00	; 0
    1206:	70 ed       	ldi	r23, 0xD0	; 208
    1208:	8f e3       	ldi	r24, 0x3F	; 63
    120a:	97 e4       	ldi	r25, 0x47	; 71
    120c:	d0 d2       	rcall	.+1440   	; 0x17ae <__divsf3>
    120e:	60 93 54 05 	sts	0x0554, r22	; 0x800554 <Digit_F_ADC+0x10>
    1212:	70 93 55 05 	sts	0x0555, r23	; 0x800555 <Digit_F_ADC+0x11>
    1216:	80 93 56 05 	sts	0x0556, r24	; 0x800556 <Digit_F_ADC+0x12>
    121a:	90 93 57 05 	sts	0x0557, r25	; 0x800557 <Digit_F_ADC+0x13>
   Digit_F_ADC[5] = (F_ADC[5]-0.0)/(1023.0-0.0) * 307;  
    121e:	f8 01       	movw	r30, r16
    1220:	64 89       	ldd	r22, Z+20	; 0x14
    1222:	75 89       	ldd	r23, Z+21	; 0x15
    1224:	86 89       	ldd	r24, Z+22	; 0x16
    1226:	97 89       	ldd	r25, Z+23	; 0x17
    1228:	20 e0       	ldi	r18, 0x00	; 0
    122a:	30 ec       	ldi	r19, 0xC0	; 192
    122c:	4f e7       	ldi	r20, 0x7F	; 127
    122e:	54 e4       	ldi	r21, 0x44	; 68
    1230:	be d2       	rcall	.+1404   	; 0x17ae <__divsf3>
    1232:	20 e0       	ldi	r18, 0x00	; 0
    1234:	30 e8       	ldi	r19, 0x80	; 128
    1236:	49 e9       	ldi	r20, 0x99	; 153
    1238:	53 e4       	ldi	r21, 0x43	; 67
    123a:	53 d4       	rcall	.+2214   	; 0x1ae2 <__mulsf3>
    123c:	60 93 58 05 	sts	0x0558, r22	; 0x800558 <Digit_F_ADC+0x14>
    1240:	70 93 59 05 	sts	0x0559, r23	; 0x800559 <Digit_F_ADC+0x15>
    1244:	80 93 5a 05 	sts	0x055A, r24	; 0x80055a <Digit_F_ADC+0x16>
    1248:	90 93 5b 05 	sts	0x055B, r25	; 0x80055b <Digit_F_ADC+0x17>
                   // 다이나믹셀을 0~90도까지 작동시키기 위해 90도 x 3.41 = 307로 곱해준다.
   
   PORTA = ~((~PORTA & 0b11000000)|(1<<PLOT_NUM)); // 6번 7번 LED유지 0~5번 변경
    124c:	8b b3       	in	r24, 0x1b	; 27
    124e:	40 91 8c 05 	lds	r20, 0x058C	; 0x80058c <PLOT_NUM>
    1252:	50 91 8d 05 	lds	r21, 0x058D	; 0x80058d <PLOT_NUM+0x1>
    1256:	80 95       	com	r24
    1258:	28 2f       	mov	r18, r24
    125a:	20 7c       	andi	r18, 0xC0	; 192
    125c:	81 e0       	ldi	r24, 0x01	; 1
    125e:	90 e0       	ldi	r25, 0x00	; 0
    1260:	02 c0       	rjmp	.+4      	; 0x1266 <__stack+0x167>
    1262:	88 0f       	add	r24, r24
    1264:	99 1f       	adc	r25, r25
    1266:	4a 95       	dec	r20
   // 현재 명 번 ADC를 USART로 출력하고 있는지 그 번호의 LED만 켠다
  
   
   Uart_TransNum(NF_ADC[PLOT_NUM]);
    1268:	e2 f7       	brpl	.-8      	; 0x1262 <__stack+0x163>
    126a:	82 2b       	or	r24, r18
    126c:	80 95       	com	r24
    126e:	8b bb       	out	0x1b, r24	; 27
    1270:	e0 91 8c 05 	lds	r30, 0x058C	; 0x80058c <PLOT_NUM>
    1274:	f0 91 8d 05 	lds	r31, 0x058D	; 0x80058d <PLOT_NUM+0x1>
    1278:	ee 0f       	add	r30, r30
    127a:	ff 1f       	adc	r31, r31
    127c:	ee 0f       	add	r30, r30
    127e:	ff 1f       	adc	r31, r31
    1280:	ec 58       	subi	r30, 0x8C	; 140
    1282:	fa 4f       	sbci	r31, 0xFA	; 250
    1284:	60 81       	ld	r22, Z
   Uart_Trans(0x2C);   // 시리얼 차트 상에서 구분을 위해 콤마를 중간에 출력
    1286:	71 81       	ldd	r23, Z+1	; 0x01
    1288:	82 81       	ldd	r24, Z+2	; 0x02
    128a:	93 81       	ldd	r25, Z+3	; 0x03
   Uart_TransNum(F_ADC[PLOT_NUM]);
    128c:	f8 d2       	rcall	.+1520   	; 0x187e <__fixsfsi>
    128e:	cb 01       	movw	r24, r22
    1290:	63 dc       	rcall	.-1850   	; 0xb58 <_Z13Uart_TransNumi>
    1292:	8c e2       	ldi	r24, 0x2C	; 44
    1294:	59 dc       	rcall	.-1870   	; 0xb48 <_Z10Uart_Transh>
    1296:	e0 91 8c 05 	lds	r30, 0x058C	; 0x80058c <PLOT_NUM>
    129a:	f0 91 8d 05 	lds	r31, 0x058D	; 0x80058d <PLOT_NUM+0x1>
    129e:	ee 0f       	add	r30, r30
    12a0:	ff 1f       	adc	r31, r31
    12a2:	ee 0f       	add	r30, r30
    12a4:	ff 1f       	adc	r31, r31
    12a6:	e4 5a       	subi	r30, 0xA4	; 164
    12a8:	fa 4f       	sbci	r31, 0xFA	; 250
    12aa:	60 81       	ld	r22, Z
    12ac:	71 81       	ldd	r23, Z+1	; 0x01
    12ae:	82 81       	ldd	r24, Z+2	; 0x02
   Uart_Trans(0x2C);   // 시리얼 차트 상에서 구분을 위해 콤마를 중간에 출력
    12b0:	93 81       	ldd	r25, Z+3	; 0x03
    12b2:	e5 d2       	rcall	.+1482   	; 0x187e <__fixsfsi>
    12b4:	cb 01       	movw	r24, r22
   Uart_TransNum(Digit_F_ADC[PLOT_NUM]);
    12b6:	50 dc       	rcall	.-1888   	; 0xb58 <_Z13Uart_TransNumi>
    12b8:	8c e2       	ldi	r24, 0x2C	; 44
    12ba:	46 dc       	rcall	.-1908   	; 0xb48 <_Z10Uart_Transh>
    12bc:	e0 91 8c 05 	lds	r30, 0x058C	; 0x80058c <PLOT_NUM>
    12c0:	f0 91 8d 05 	lds	r31, 0x058D	; 0x80058d <PLOT_NUM+0x1>
    12c4:	ee 0f       	add	r30, r30
    12c6:	ff 1f       	adc	r31, r31
    12c8:	ee 0f       	add	r30, r30
    12ca:	ff 1f       	adc	r31, r31
    12cc:	ec 5b       	subi	r30, 0xBC	; 188
    12ce:	fa 4f       	sbci	r31, 0xFA	; 250
    12d0:	60 81       	ld	r22, Z
    12d2:	71 81       	ldd	r23, Z+1	; 0x01
    12d4:	82 81       	ldd	r24, Z+2	; 0x02
   Uart_Trans(0x0d);   // 시리얼 차트 상에서 마지막을 알리기 위한 출력
    12d6:	93 81       	ldd	r25, Z+3	; 0x03
    12d8:	d2 d2       	rcall	.+1444   	; 0x187e <__fixsfsi>
    12da:	cb 01       	movw	r24, r22
   Uart_Trans(13);      // 줄 바꿈
    12dc:	3d dc       	rcall	.-1926   	; 0xb58 <_Z13Uart_TransNumi>
    12de:	8d e0       	ldi	r24, 0x0D	; 13
    12e0:	33 dc       	rcall	.-1946   	; 0xb48 <_Z10Uart_Transh>
  
   
   ////////////////////
   //센서 값에따른 작동//
   ///////////////////
   if (cnt_motion>100) //초기에 센서값 튈수있으므로 초기 3초간 작동 정지
    12e2:	8d e0       	ldi	r24, 0x0D	; 13
    12e4:	31 dc       	rcall	.-1950   	; 0xb48 <_Z10Uart_Transh>
    12e6:	80 91 b8 05 	lds	r24, 0x05B8	; 0x8005b8 <cnt_motion>
    12ea:	90 91 b9 05 	lds	r25, 0x05B9	; 0x8005b9 <cnt_motion+0x1>
    12ee:	85 36       	cpi	r24, 0x65	; 101
   {
   // adc0-POTENTIOMETER(가변저항)에 따른 모션_dc PWM(팬)
   if (Digit_F_ADC[0] > Digit_F_ADC[2]) OCR1C = 61*(Digit_F_ADC[0]-Digit_F_ADC[2]);  // 설정온도와 LM35와 값비교하여 차이만큼 팬속도 조절
    12f0:	91 05       	cpc	r25, r1
    12f2:	0c f4       	brge	.+2      	; 0x12f6 <__stack+0x1f7>
    12f4:	87 c1       	rjmp	.+782    	; 0x1604 <__stack+0x505>
    12f6:	e4 e4       	ldi	r30, 0x44	; 68
    12f8:	f5 e0       	ldi	r31, 0x05	; 5
    12fa:	60 81       	ld	r22, Z
    12fc:	71 81       	ldd	r23, Z+1	; 0x01
    12fe:	82 81       	ldd	r24, Z+2	; 0x02
    1300:	93 81       	ldd	r25, Z+3	; 0x03
    1302:	20 85       	ldd	r18, Z+8	; 0x08
    1304:	31 85       	ldd	r19, Z+9	; 0x09
    1306:	42 85       	ldd	r20, Z+10	; 0x0a
    1308:	53 85       	ldd	r21, Z+11	; 0x0b
    130a:	9c d3       	rcall	.+1848   	; 0x1a44 <__gesf2>
    130c:	18 16       	cp	r1, r24
    130e:	b4 f4       	brge	.+44     	; 0x133c <__stack+0x23d>
    1310:	e4 e4       	ldi	r30, 0x44	; 68
    1312:	f5 e0       	ldi	r31, 0x05	; 5
    1314:	60 81       	ld	r22, Z
    1316:	71 81       	ldd	r23, Z+1	; 0x01
    1318:	82 81       	ldd	r24, Z+2	; 0x02
    131a:	93 81       	ldd	r25, Z+3	; 0x03
    131c:	20 85       	ldd	r18, Z+8	; 0x08
    131e:	31 85       	ldd	r19, Z+9	; 0x09
    1320:	42 85       	ldd	r20, Z+10	; 0x0a
    1322:	53 85       	ldd	r21, Z+11	; 0x0b
    1324:	db d1       	rcall	.+950    	; 0x16dc <__subsf3>
    1326:	20 e0       	ldi	r18, 0x00	; 0
    1328:	30 e0       	ldi	r19, 0x00	; 0
    132a:	44 e7       	ldi	r20, 0x74	; 116
    132c:	52 e4       	ldi	r21, 0x42	; 66
    132e:	d9 d3       	rcall	.+1970   	; 0x1ae2 <__mulsf3>
    1330:	ab d2       	rcall	.+1366   	; 0x1888 <__fixunssfsi>
    1332:	70 93 79 00 	sts	0x0079, r23	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
    1336:	60 93 78 00 	sts	0x0078, r22	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
   else OCR1C = 0;      // 
    133a:	04 c0       	rjmp	.+8      	; 0x1344 <__stack+0x245>
    133c:	10 92 79 00 	sts	0x0079, r1	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
   
   // adc1-CDS에따른 모션_LED밝기
   if (Digit_F_ADC[1] < 90) OCR1B = (abs(100-Digit_F_ADC[1]))*40; // 어두워질수록 밝아짐
    1340:	10 92 78 00 	sts	0x0078, r1	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
    1344:	60 91 48 05 	lds	r22, 0x0548	; 0x800548 <Digit_F_ADC+0x4>
    1348:	70 91 49 05 	lds	r23, 0x0549	; 0x800549 <Digit_F_ADC+0x5>
    134c:	80 91 4a 05 	lds	r24, 0x054A	; 0x80054a <Digit_F_ADC+0x6>
    1350:	90 91 4b 05 	lds	r25, 0x054B	; 0x80054b <Digit_F_ADC+0x7>
    1354:	20 e0       	ldi	r18, 0x00	; 0
    1356:	30 e0       	ldi	r19, 0x00	; 0
    1358:	44 eb       	ldi	r20, 0xB4	; 180
    135a:	52 e4       	ldi	r21, 0x42	; 66
    135c:	24 d2       	rcall	.+1096   	; 0x17a6 <__cmpsf2>
    135e:	88 23       	and	r24, r24
    1360:	f4 f4       	brge	.+60     	; 0x139e <__stack+0x29f>
    1362:	20 91 48 05 	lds	r18, 0x0548	; 0x800548 <Digit_F_ADC+0x4>
    1366:	30 91 49 05 	lds	r19, 0x0549	; 0x800549 <Digit_F_ADC+0x5>
    136a:	40 91 4a 05 	lds	r20, 0x054A	; 0x80054a <Digit_F_ADC+0x6>
    136e:	50 91 4b 05 	lds	r21, 0x054B	; 0x80054b <Digit_F_ADC+0x7>
    1372:	60 e0       	ldi	r22, 0x00	; 0
    1374:	70 e0       	ldi	r23, 0x00	; 0
    1376:	88 ec       	ldi	r24, 0xC8	; 200
    1378:	92 e4       	ldi	r25, 0x42	; 66
    137a:	b0 d1       	rcall	.+864    	; 0x16dc <__subsf3>
    137c:	80 d2       	rcall	.+1280   	; 0x187e <__fixsfsi>
    137e:	fb 01       	movw	r30, r22
    1380:	ff 23       	and	r31, r31
    1382:	24 f4       	brge	.+8      	; 0x138c <__stack+0x28d>
    1384:	ee 27       	eor	r30, r30
    1386:	ff 27       	eor	r31, r31
    1388:	e6 1b       	sub	r30, r22
    138a:	f7 0b       	sbc	r31, r23
    138c:	48 e2       	ldi	r20, 0x28	; 40
    138e:	4e 9f       	mul	r20, r30
    1390:	90 01       	movw	r18, r0
    1392:	4f 9f       	mul	r20, r31
    1394:	30 0d       	add	r19, r0
    1396:	11 24       	eor	r1, r1
    1398:	39 bd       	out	0x29, r19	; 41
    139a:	28 bd       	out	0x28, r18	; 40
   else OCR1B = 0;
    139c:	02 c0       	rjmp	.+4      	; 0x13a2 <__stack+0x2a3>
    139e:	19 bc       	out	0x29, r1	; 41
      
   // adc2-LM35에 따른 모션_3색LED
   if (Digit_F_ADC[2] > 85) PORTC = ~((~PORTC & 0b00011111)|(0b10000000));         //85도 이상일때 빨간색
    13a0:	18 bc       	out	0x28, r1	; 40
    13a2:	60 91 4c 05 	lds	r22, 0x054C	; 0x80054c <Digit_F_ADC+0x8>
    13a6:	70 91 4d 05 	lds	r23, 0x054D	; 0x80054d <Digit_F_ADC+0x9>
    13aa:	80 91 4e 05 	lds	r24, 0x054E	; 0x80054e <Digit_F_ADC+0xa>
    13ae:	90 91 4f 05 	lds	r25, 0x054F	; 0x80054f <Digit_F_ADC+0xb>
    13b2:	20 e0       	ldi	r18, 0x00	; 0
    13b4:	30 e0       	ldi	r19, 0x00	; 0
    13b6:	4a ea       	ldi	r20, 0xAA	; 170
    13b8:	52 e4       	ldi	r21, 0x42	; 66
    13ba:	44 d3       	rcall	.+1672   	; 0x1a44 <__gesf2>
    13bc:	18 16       	cp	r1, r24
    13be:	3c f4       	brge	.+14     	; 0x13ce <__stack+0x2cf>
    13c0:	85 b3       	in	r24, 0x15	; 21
    13c2:	80 95       	com	r24
    13c4:	8f 71       	andi	r24, 0x1F	; 31
    13c6:	80 68       	ori	r24, 0x80	; 128
    13c8:	80 95       	com	r24
    13ca:	85 bb       	out	0x15, r24	; 21
   else if (Digit_F_ADC[2] > 75) PORTC = ~((~PORTC & 0b00011111)|(0b11000000));    //75도 이상일때 노란색
    13cc:	5b c0       	rjmp	.+182    	; 0x1484 <__stack+0x385>
    13ce:	60 91 4c 05 	lds	r22, 0x054C	; 0x80054c <Digit_F_ADC+0x8>
    13d2:	70 91 4d 05 	lds	r23, 0x054D	; 0x80054d <Digit_F_ADC+0x9>
    13d6:	80 91 4e 05 	lds	r24, 0x054E	; 0x80054e <Digit_F_ADC+0xa>
    13da:	90 91 4f 05 	lds	r25, 0x054F	; 0x80054f <Digit_F_ADC+0xb>
    13de:	20 e0       	ldi	r18, 0x00	; 0
    13e0:	30 e0       	ldi	r19, 0x00	; 0
    13e2:	46 e9       	ldi	r20, 0x96	; 150
    13e4:	52 e4       	ldi	r21, 0x42	; 66
    13e6:	2e d3       	rcall	.+1628   	; 0x1a44 <__gesf2>
    13e8:	18 16       	cp	r1, r24
    13ea:	3c f4       	brge	.+14     	; 0x13fa <__stack+0x2fb>
    13ec:	85 b3       	in	r24, 0x15	; 21
    13ee:	80 95       	com	r24
    13f0:	8f 71       	andi	r24, 0x1F	; 31
    13f2:	80 6c       	ori	r24, 0xC0	; 192
    13f4:	80 95       	com	r24
    13f6:	85 bb       	out	0x15, r24	; 21
   else if (Digit_F_ADC[2] > 65) PORTC = ~((~PORTC & 0b00011111)|(0b01000000));    //65도 이상일때 초록색
    13f8:	45 c0       	rjmp	.+138    	; 0x1484 <__stack+0x385>
    13fa:	60 91 4c 05 	lds	r22, 0x054C	; 0x80054c <Digit_F_ADC+0x8>
    13fe:	70 91 4d 05 	lds	r23, 0x054D	; 0x80054d <Digit_F_ADC+0x9>
    1402:	80 91 4e 05 	lds	r24, 0x054E	; 0x80054e <Digit_F_ADC+0xa>
    1406:	90 91 4f 05 	lds	r25, 0x054F	; 0x80054f <Digit_F_ADC+0xb>
    140a:	20 e0       	ldi	r18, 0x00	; 0
    140c:	30 e0       	ldi	r19, 0x00	; 0
    140e:	42 e8       	ldi	r20, 0x82	; 130
    1410:	52 e4       	ldi	r21, 0x42	; 66
    1412:	18 d3       	rcall	.+1584   	; 0x1a44 <__gesf2>
    1414:	18 16       	cp	r1, r24
    1416:	3c f4       	brge	.+14     	; 0x1426 <__stack+0x327>
    1418:	85 b3       	in	r24, 0x15	; 21
    141a:	80 95       	com	r24
    141c:	8f 71       	andi	r24, 0x1F	; 31
    141e:	80 64       	ori	r24, 0x40	; 64
    1420:	80 95       	com	r24
    1422:	85 bb       	out	0x15, r24	; 21
   else if (Digit_F_ADC[2] > 55) PORTC = ~((~PORTC & 0b00011111)|(0b01100000));    //55도 이상일때 하늘색
    1424:	2f c0       	rjmp	.+94     	; 0x1484 <__stack+0x385>
    1426:	60 91 4c 05 	lds	r22, 0x054C	; 0x80054c <Digit_F_ADC+0x8>
    142a:	70 91 4d 05 	lds	r23, 0x054D	; 0x80054d <Digit_F_ADC+0x9>
    142e:	80 91 4e 05 	lds	r24, 0x054E	; 0x80054e <Digit_F_ADC+0xa>
    1432:	90 91 4f 05 	lds	r25, 0x054F	; 0x80054f <Digit_F_ADC+0xb>
    1436:	20 e0       	ldi	r18, 0x00	; 0
    1438:	30 e0       	ldi	r19, 0x00	; 0
    143a:	4c e5       	ldi	r20, 0x5C	; 92
    143c:	52 e4       	ldi	r21, 0x42	; 66
    143e:	02 d3       	rcall	.+1540   	; 0x1a44 <__gesf2>
    1440:	18 16       	cp	r1, r24
    1442:	3c f4       	brge	.+14     	; 0x1452 <__stack+0x353>
    1444:	85 b3       	in	r24, 0x15	; 21
    1446:	80 95       	com	r24
    1448:	8f 71       	andi	r24, 0x1F	; 31
    144a:	80 66       	ori	r24, 0x60	; 96
    144c:	80 95       	com	r24
    144e:	85 bb       	out	0x15, r24	; 21
   else if (Digit_F_ADC[2] > 45) PORTC = ~((~PORTC & 0b00011111)|(0b00100000));    //45도 이상일때 파란색
    1450:	19 c0       	rjmp	.+50     	; 0x1484 <__stack+0x385>
    1452:	60 91 4c 05 	lds	r22, 0x054C	; 0x80054c <Digit_F_ADC+0x8>
    1456:	70 91 4d 05 	lds	r23, 0x054D	; 0x80054d <Digit_F_ADC+0x9>
    145a:	80 91 4e 05 	lds	r24, 0x054E	; 0x80054e <Digit_F_ADC+0xa>
    145e:	90 91 4f 05 	lds	r25, 0x054F	; 0x80054f <Digit_F_ADC+0xb>
    1462:	20 e0       	ldi	r18, 0x00	; 0
    1464:	30 e0       	ldi	r19, 0x00	; 0
    1466:	44 e3       	ldi	r20, 0x34	; 52
    1468:	52 e4       	ldi	r21, 0x42	; 66
    146a:	ec d2       	rcall	.+1496   	; 0x1a44 <__gesf2>
    146c:	18 16       	cp	r1, r24
    146e:	3c f4       	brge	.+14     	; 0x147e <__stack+0x37f>
    1470:	85 b3       	in	r24, 0x15	; 21
    1472:	80 95       	com	r24
    1474:	8f 71       	andi	r24, 0x1F	; 31
    1476:	80 62       	ori	r24, 0x20	; 32
    1478:	80 95       	com	r24
    147a:	85 bb       	out	0x15, r24	; 21
    147c:	03 c0       	rjmp	.+6      	; 0x1484 <__stack+0x385>
   else PORTC = ~((~PORTC & 0b00011111)|(0b11100000));                             //평소에 흰색 
    147e:	85 b3       	in	r24, 0x15	; 21
    1480:	8f 71       	andi	r24, 0x1F	; 31
    1482:	85 bb       	out	0x15, r24	; 21
   
   // adc3-THERMISTER에따른 모션_stepmotor
   if ((Digit_F_ADC[3] > (Digit_F_ADC[2]+30))) // LM35보다 30도 높으면 스텝모터 이용하여 원운동 선운동으로 바꾸어 차단벽 닫음
    1484:	e4 e4       	ldi	r30, 0x44	; 68
    1486:	f5 e0       	ldi	r31, 0x05	; 5
    1488:	c4 84       	ldd	r12, Z+12	; 0x0c
    148a:	d5 84       	ldd	r13, Z+13	; 0x0d
    148c:	e6 84       	ldd	r14, Z+14	; 0x0e
    148e:	f7 84       	ldd	r15, Z+15	; 0x0f
    1490:	60 85       	ldd	r22, Z+8	; 0x08
    1492:	71 85       	ldd	r23, Z+9	; 0x09
    1494:	82 85       	ldd	r24, Z+10	; 0x0a
    1496:	93 85       	ldd	r25, Z+11	; 0x0b
    1498:	20 e0       	ldi	r18, 0x00	; 0
    149a:	30 e0       	ldi	r19, 0x00	; 0
    149c:	40 ef       	ldi	r20, 0xF0	; 240
    149e:	51 e4       	ldi	r21, 0x41	; 65
    14a0:	1e d1       	rcall	.+572    	; 0x16de <__addsf3>
    14a2:	9b 01       	movw	r18, r22
    14a4:	ac 01       	movw	r20, r24
    14a6:	c7 01       	movw	r24, r14
    14a8:	b6 01       	movw	r22, r12
    14aa:	cc d2       	rcall	.+1432   	; 0x1a44 <__gesf2>
    14ac:	18 16       	cp	r1, r24
    14ae:	cc f4       	brge	.+50     	; 0x14e2 <__stack+0x3e3>
    14b0:	80 91 3e 03 	lds	r24, 0x033E	; 0x80033e <cnt_THER>
   {
      cnt_THER++;
    14b4:	90 91 3f 03 	lds	r25, 0x033F	; 0x80033f <cnt_THER+0x1>
    14b8:	01 96       	adiw	r24, 0x01	; 1
    14ba:	90 93 3f 03 	sts	0x033F, r25	; 0x80033f <cnt_THER+0x1>
    14be:	80 93 3e 03 	sts	0x033E, r24	; 0x80033e <cnt_THER>
    14c2:	80 91 3c 03 	lds	r24, 0x033C	; 0x80033c <flag_THER>
      
      if (flag_THER==0 && cnt_THER<220)                  // 문 안닫혀있으면 3초동안 스텝모터 구동하여 개폐
    14c6:	90 91 3d 03 	lds	r25, 0x033D	; 0x80033d <flag_THER+0x1>
    14ca:	89 2b       	or	r24, r25
    14cc:	09 f0       	breq	.+2      	; 0x14d0 <__stack+0x3d1>
    14ce:	ba c0       	rjmp	.+372    	; 0x1644 <__stack+0x545>
    14d0:	80 91 3e 03 	lds	r24, 0x033E	; 0x80033e <cnt_THER>
    14d4:	90 91 3f 03 	lds	r25, 0x033F	; 0x80033f <cnt_THER+0x1>
    14d8:	8c 3d       	cpi	r24, 0xDC	; 220
    14da:	91 05       	cpc	r25, r1
    14dc:	0c f4       	brge	.+2      	; 0x14e0 <__stack+0x3e1>
    14de:	a9 c0       	rjmp	.+338    	; 0x1632 <__stack+0x533>
    14e0:	b1 c0       	rjmp	.+354    	; 0x1644 <__stack+0x545>
    14e2:	80 91 3e 03 	lds	r24, 0x033E	; 0x80033e <cnt_THER>
      }
      
   }
   else
   {
      cnt_THER++;
    14e6:	90 91 3f 03 	lds	r25, 0x033F	; 0x80033f <cnt_THER+0x1>
    14ea:	01 96       	adiw	r24, 0x01	; 1
    14ec:	90 93 3f 03 	sts	0x033F, r25	; 0x80033f <cnt_THER+0x1>
    14f0:	80 93 3e 03 	sts	0x033E, r24	; 0x80033e <cnt_THER>
    14f4:	80 91 3c 03 	lds	r24, 0x033C	; 0x80033c <flag_THER>
      if (flag_THER==1 && cnt_THER<220)
    14f8:	90 91 3d 03 	lds	r25, 0x033D	; 0x80033d <flag_THER+0x1>
    14fc:	01 97       	sbiw	r24, 0x01	; 1
    14fe:	09 f0       	breq	.+2      	; 0x1502 <__stack+0x403>
    1500:	b9 c0       	rjmp	.+370    	; 0x1674 <__stack+0x575>
    1502:	80 91 3e 03 	lds	r24, 0x033E	; 0x80033e <cnt_THER>
    1506:	90 91 3f 03 	lds	r25, 0x033F	; 0x80033f <cnt_THER+0x1>
    150a:	8c 3d       	cpi	r24, 0xDC	; 220
    150c:	91 05       	cpc	r25, r1
    150e:	0c f4       	brge	.+2      	; 0x1512 <__stack+0x413>
    1510:	a8 c0       	rjmp	.+336    	; 0x1662 <__stack+0x563>
    1512:	b0 c0       	rjmp	.+352    	; 0x1674 <__stack+0x575>
    1514:	60 91 54 05 	lds	r22, 0x0554	; 0x800554 <Digit_F_ADC+0x10>
      }
   }

   
   // adc4-PSD에 따른 모션_서보모터
   if (Digit_F_ADC[4] < 100 || flag_PSD == 1)  // 물체 인식하면 서보모터 이용하여 출입문 염 
    1518:	70 91 55 05 	lds	r23, 0x0555	; 0x800555 <Digit_F_ADC+0x11>
    151c:	80 91 56 05 	lds	r24, 0x0556	; 0x800556 <Digit_F_ADC+0x12>
    1520:	90 91 57 05 	lds	r25, 0x0557	; 0x800557 <Digit_F_ADC+0x13>
    1524:	20 e0       	ldi	r18, 0x00	; 0
    1526:	30 e0       	ldi	r19, 0x00	; 0
    1528:	48 ec       	ldi	r20, 0xC8	; 200
    152a:	52 e4       	ldi	r21, 0x42	; 66
    152c:	3c d1       	rcall	.+632    	; 0x17a6 <__cmpsf2>
    152e:	88 23       	and	r24, r24
    1530:	34 f0       	brlt	.+12     	; 0x153e <__stack+0x43f>
    1532:	80 91 38 03 	lds	r24, 0x0338	; 0x800338 <flag_PSD>
    1536:	90 91 39 03 	lds	r25, 0x0339	; 0x800339 <flag_PSD+0x1>
    153a:	01 97       	sbiw	r24, 0x01	; 1
    153c:	59 f5       	brne	.+86     	; 0x1594 <__stack+0x495>
    153e:	81 e0       	ldi	r24, 0x01	; 1
    1540:	90 e0       	ldi	r25, 0x00	; 0
   {  
      flag_PSD = 1;
    1542:	90 93 39 03 	sts	0x0339, r25	; 0x800339 <flag_PSD+0x1>
    1546:	80 93 38 03 	sts	0x0338, r24	; 0x800338 <flag_PSD>
    154a:	80 e0       	ldi	r24, 0x00	; 0
    154c:	90 e0       	ldi	r25, 0x00	; 0
      SERVO_PSD_angle = 120;
    154e:	a0 ef       	ldi	r26, 0xF0	; 240
    1550:	b2 e4       	ldi	r27, 0x42	; 66
    1552:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <SERVO_PSD_angle>
    1556:	90 93 1d 01 	sts	0x011D, r25	; 0x80011d <SERVO_PSD_angle+0x1>
    155a:	a0 93 1e 01 	sts	0x011E, r26	; 0x80011e <SERVO_PSD_angle+0x2>
    155e:	b0 93 1f 01 	sts	0x011F, r27	; 0x80011f <SERVO_PSD_angle+0x3>
      cnt_PSD++;
    1562:	80 91 3a 03 	lds	r24, 0x033A	; 0x80033a <cnt_PSD>
    1566:	90 91 3b 03 	lds	r25, 0x033B	; 0x80033b <cnt_PSD+0x1>
    156a:	01 96       	adiw	r24, 0x01	; 1
    156c:	90 93 3b 03 	sts	0x033B, r25	; 0x80033b <cnt_PSD+0x1>
      if (cnt_PSD>=150)                        // 열고 약 1.5초동안 열린상태 유지, 1.5초뒤에 물체있으면 열린상태유지 아니면 닫음
    1570:	80 93 3a 03 	sts	0x033A, r24	; 0x80033a <cnt_PSD>
    1574:	80 91 3a 03 	lds	r24, 0x033A	; 0x80033a <cnt_PSD>
    1578:	90 91 3b 03 	lds	r25, 0x033B	; 0x80033b <cnt_PSD+0x1>
    157c:	86 39       	cpi	r24, 0x96	; 150
      {
         flag_PSD = 0;
    157e:	91 05       	cpc	r25, r1
    1580:	dc f0       	brlt	.+54     	; 0x15b8 <__stack+0x4b9>
    1582:	10 92 39 03 	sts	0x0339, r1	; 0x800339 <flag_PSD+0x1>
         cnt_PSD = 0;
    1586:	10 92 38 03 	sts	0x0338, r1	; 0x800338 <flag_PSD>
    158a:	10 92 3b 03 	sts	0x033B, r1	; 0x80033b <cnt_PSD+0x1>
    158e:	10 92 3a 03 	sts	0x033A, r1	; 0x80033a <cnt_PSD>
      }
   }
   else if(flag_PSD == 0) SERVO_PSD_angle = 60;
    1592:	12 c0       	rjmp	.+36     	; 0x15b8 <__stack+0x4b9>
    1594:	80 91 38 03 	lds	r24, 0x0338	; 0x800338 <flag_PSD>
    1598:	90 91 39 03 	lds	r25, 0x0339	; 0x800339 <flag_PSD+0x1>
    159c:	89 2b       	or	r24, r25
    159e:	61 f4       	brne	.+24     	; 0x15b8 <__stack+0x4b9>
    15a0:	80 e0       	ldi	r24, 0x00	; 0
    15a2:	90 e0       	ldi	r25, 0x00	; 0
    15a4:	a0 e7       	ldi	r26, 0x70	; 112
    15a6:	b2 e4       	ldi	r27, 0x42	; 66
    15a8:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <SERVO_PSD_angle>
    15ac:	90 93 1d 01 	sts	0x011D, r25	; 0x80011d <SERVO_PSD_angle+0x1>
   OCR1A = ((45 + SERVO_PSD_angle) / 1800 ) * ICR1;
    15b0:	a0 93 1e 01 	sts	0x011E, r26	; 0x80011e <SERVO_PSD_angle+0x2>
    15b4:	b0 93 1f 01 	sts	0x011F, r27	; 0x80011f <SERVO_PSD_angle+0x3>
    15b8:	60 91 1c 01 	lds	r22, 0x011C	; 0x80011c <SERVO_PSD_angle>
    15bc:	70 91 1d 01 	lds	r23, 0x011D	; 0x80011d <SERVO_PSD_angle+0x1>
    15c0:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <SERVO_PSD_angle+0x2>
    15c4:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <SERVO_PSD_angle+0x3>
    15c8:	26 b5       	in	r18, 0x26	; 38
    15ca:	37 b5       	in	r19, 0x27	; 39
    15cc:	3a 83       	std	Y+2, r19	; 0x02
    15ce:	29 83       	std	Y+1, r18	; 0x01
    15d0:	20 e0       	ldi	r18, 0x00	; 0
    15d2:	30 e0       	ldi	r19, 0x00	; 0
    15d4:	44 e3       	ldi	r20, 0x34	; 52
    15d6:	52 e4       	ldi	r21, 0x42	; 66
    15d8:	82 d0       	rcall	.+260    	; 0x16de <__addsf3>
    15da:	20 e0       	ldi	r18, 0x00	; 0
    15dc:	30 e0       	ldi	r19, 0x00	; 0
    15de:	41 ee       	ldi	r20, 0xE1	; 225
    15e0:	54 e4       	ldi	r21, 0x44	; 68
    15e2:	e5 d0       	rcall	.+458    	; 0x17ae <__divsf3>
    15e4:	6b 01       	movw	r12, r22
    15e6:	7c 01       	movw	r14, r24
    15e8:	e9 81       	ldd	r30, Y+1	; 0x01
    15ea:	fa 81       	ldd	r31, Y+2	; 0x02
    15ec:	bf 01       	movw	r22, r30
    15ee:	80 e0       	ldi	r24, 0x00	; 0
    15f0:	90 e0       	ldi	r25, 0x00	; 0
    15f2:	76 d1       	rcall	.+748    	; 0x18e0 <__floatunsisf>
    15f4:	9b 01       	movw	r18, r22
    15f6:	ac 01       	movw	r20, r24
    15f8:	c7 01       	movw	r24, r14
    15fa:	b6 01       	movw	r22, r12
    15fc:	72 d2       	rcall	.+1252   	; 0x1ae2 <__mulsf3>
    15fe:	44 d1       	rcall	.+648    	; 0x1888 <__fixunssfsi>
    1600:	7b bd       	out	0x2b, r23	; 43
    1602:	6a bd       	out	0x2a, r22	; 42
    1604:	80 91 b8 05 	lds	r24, 0x05B8	; 0x8005b8 <cnt_motion>
   
   }
   cnt_motion++;
    1608:	90 91 b9 05 	lds	r25, 0x05B9	; 0x8005b9 <cnt_motion+0x1>
    160c:	01 96       	adiw	r24, 0x01	; 1
    160e:	90 93 b9 05 	sts	0x05B9, r25	; 0x8005b9 <cnt_motion+0x1>
    1612:	80 93 b8 05 	sts	0x05B8, r24	; 0x8005b8 <cnt_motion>
    1616:	60 91 58 05 	lds	r22, 0x0558	; 0x800558 <Digit_F_ADC+0x14>
   
   
    
   // adc5-IR에 따른 모션_다이나믹셀
   Dynamixel_Packet_TX(1, (int)Digit_F_ADC[5], 0);   // (ID, 이동할 각도 위치, 속도 모드)
    161a:	70 91 59 05 	lds	r23, 0x0559	; 0x800559 <Digit_F_ADC+0x15>
    161e:	80 91 5a 05 	lds	r24, 0x055A	; 0x80055a <Digit_F_ADC+0x16>
    1622:	90 91 5b 05 	lds	r25, 0x055B	; 0x80055b <Digit_F_ADC+0x17>
    1626:	2b d1       	rcall	.+598    	; 0x187e <__fixsfsi>
    1628:	40 e0       	ldi	r20, 0x00	; 0
    162a:	50 e0       	ldi	r21, 0x00	; 0
    162c:	81 e0       	ldi	r24, 0x01	; 1
    162e:	d9 da       	rcall	.-2638   	; 0xbe2 <_Z19Dynamixel_Packet_TXhii>
    1630:	2e c0       	rjmp	.+92     	; 0x168e <__stack+0x58f>
    1632:	85 b3       	in	r24, 0x15	; 21
    1634:	80 95       	com	r24
      // IR값을 1023까지 정규화를 진행한 후 그 값을 다이나믹셀 이동 위치값 파라미터로 바로 넘겨준다
   

   ///////////////////////////////여기까지 센서값에따른 작동

}
    1636:	83 7f       	andi	r24, 0xF3	; 243
   {
      cnt_THER++;
      
      if (flag_THER==0 && cnt_THER<220)                  // 문 안닫혀있으면 3초동안 스텝모터 구동하여 개폐
      {
         PORTC = ~((~PORTC & 0b11110011)|(0b00000100));  // 스텝모터 구동방향설정(문여는방향)
    1638:	84 60       	ori	r24, 0x04	; 4
    163a:	80 95       	com	r24
    163c:	85 bb       	out	0x15, r24	; 21
    163e:	df 98       	cbi	0x1b, 7	; 27
    1640:	de 98       	cbi	0x1b, 6	; 27
    1642:	68 cf       	rjmp	.-304    	; 0x1514 <__stack+0x415>
         PORTA = ~((~PORTA & 0b01111111)|(0b10000000));  // LM35보다 30도 높으면 LED ON
    1644:	85 b3       	in	r24, 0x15	; 21
         PORTA = ~((~PORTA & 0b10111111)|(0b01000000));  // 10ms마다 스텝모터를 여자시켜 스텝모터 구동
    1646:	83 7f       	andi	r24, 0xF3	; 243
    1648:	85 bb       	out	0x15, r24	; 21
      }
      else
      {
         PORTC = ~((~PORTC & 0b11110011)|(0b00001100));  // 스텝모터 구동방향설정(구동X)
    164a:	de 9a       	sbi	0x1b, 6	; 27
    164c:	81 e0       	ldi	r24, 0x01	; 1
    164e:	90 e0       	ldi	r25, 0x00	; 0
         PORTA = ~((~PORTA & 0b10111111)|(0b00000000));  // 스텝모터 여자X
    1650:	90 93 3d 03 	sts	0x033D, r25	; 0x80033d <flag_THER+0x1>
         flag_THER = 1; 
    1654:	80 93 3c 03 	sts	0x033C, r24	; 0x80033c <flag_THER>
    1658:	10 92 3f 03 	sts	0x033F, r1	; 0x80033f <cnt_THER+0x1>
    165c:	10 92 3e 03 	sts	0x033E, r1	; 0x80033e <cnt_THER>
         cnt_THER = 0;
    1660:	59 cf       	rjmp	.-334    	; 0x1514 <__stack+0x415>
    1662:	85 b3       	in	r24, 0x15	; 21
    1664:	80 95       	com	r24
    1666:	83 7f       	andi	r24, 0xF3	; 243
   else
   {
      cnt_THER++;
      if (flag_THER==1 && cnt_THER<220)
      {
         PORTC = ~((~PORTC & 0b11110011)|(0b00001000)); // 스텝모터 구동방향설정(문닫는방향)
    1668:	88 60       	ori	r24, 0x08	; 8
    166a:	80 95       	com	r24
    166c:	85 bb       	out	0x15, r24	; 21
    166e:	de 98       	cbi	0x1b, 6	; 27
    1670:	df 9a       	sbi	0x1b, 7	; 27
    1672:	50 cf       	rjmp	.-352    	; 0x1514 <__stack+0x415>
         PORTA = ~((~PORTA & 0b10111111)|(0b01000000)); // LM35보다 30도 낮으면 LED off
    1674:	85 b3       	in	r24, 0x15	; 21
         PORTA = ~((~PORTA & 0b01111111)|(0b00000000)); // 스텝모터 여자X
    1676:	83 7f       	andi	r24, 0xF3	; 243
    1678:	85 bb       	out	0x15, r24	; 21
      }
      else
      {
         PORTC = ~((~PORTC & 0b11110011)|(0b00001100)); // 스텝모터 구동방향설정(구동X)
    167a:	de 9a       	sbi	0x1b, 6	; 27
    167c:	10 92 3d 03 	sts	0x033D, r1	; 0x80033d <flag_THER+0x1>
         PORTA = ~((~PORTA & 0b10111111)|(0b00000000)); // 스텝모터 여자X
    1680:	10 92 3c 03 	sts	0x033C, r1	; 0x80033c <flag_THER>
    
         flag_THER = 0;
    1684:	10 92 3f 03 	sts	0x033F, r1	; 0x80033f <cnt_THER+0x1>
    1688:	10 92 3e 03 	sts	0x033E, r1	; 0x80033e <cnt_THER>
         cnt_THER = 0;
    168c:	43 cf       	rjmp	.-378    	; 0x1514 <__stack+0x415>
    168e:	0f 90       	pop	r0
    1690:	0f 90       	pop	r0
    1692:	0f 90       	pop	r0
      // IR값을 1023까지 정규화를 진행한 후 그 값을 다이나믹셀 이동 위치값 파라미터로 바로 넘겨준다
   

   ///////////////////////////////여기까지 센서값에따른 작동

}
    1694:	0f 90       	pop	r0
    1696:	df 91       	pop	r29
    1698:	cf 91       	pop	r28
    169a:	ff 91       	pop	r31
    169c:	ef 91       	pop	r30
    169e:	bf 91       	pop	r27
    16a0:	af 91       	pop	r26
    16a2:	9f 91       	pop	r25
    16a4:	8f 91       	pop	r24
    16a6:	7f 91       	pop	r23
    16a8:	6f 91       	pop	r22
    16aa:	5f 91       	pop	r21
    16ac:	4f 91       	pop	r20
    16ae:	3f 91       	pop	r19
    16b0:	2f 91       	pop	r18
    16b2:	1f 91       	pop	r17
    16b4:	0f 91       	pop	r16
    16b6:	ff 90       	pop	r15
    16b8:	ef 90       	pop	r14
    16ba:	df 90       	pop	r13
    16bc:	cf 90       	pop	r12
    16be:	bf 90       	pop	r11
    16c0:	af 90       	pop	r10
    16c2:	9f 90       	pop	r9
    16c4:	8f 90       	pop	r8
    16c6:	7f 90       	pop	r7
    16c8:	6f 90       	pop	r6
    16ca:	5f 90       	pop	r5
    16cc:	4f 90       	pop	r4
    16ce:	0f 90       	pop	r0
    16d0:	0b be       	out	0x3b, r0	; 59
    16d2:	0f 90       	pop	r0
    16d4:	0f be       	out	0x3f, r0	; 63
    16d6:	0f 90       	pop	r0
    16d8:	1f 90       	pop	r1
    16da:	18 95       	reti

000016dc <__subsf3>:
    16dc:	50 58       	subi	r21, 0x80	; 128

000016de <__addsf3>:
    16de:	bb 27       	eor	r27, r27
    16e0:	aa 27       	eor	r26, r26
    16e2:	0e d0       	rcall	.+28     	; 0x1700 <__addsf3x>
    16e4:	75 c1       	rjmp	.+746    	; 0x19d0 <__fp_round>
    16e6:	66 d1       	rcall	.+716    	; 0x19b4 <__fp_pscA>
    16e8:	30 f0       	brcs	.+12     	; 0x16f6 <__addsf3+0x18>
    16ea:	6b d1       	rcall	.+726    	; 0x19c2 <__fp_pscB>
    16ec:	20 f0       	brcs	.+8      	; 0x16f6 <__addsf3+0x18>
    16ee:	31 f4       	brne	.+12     	; 0x16fc <__addsf3+0x1e>
    16f0:	9f 3f       	cpi	r25, 0xFF	; 255
    16f2:	11 f4       	brne	.+4      	; 0x16f8 <__addsf3+0x1a>
    16f4:	1e f4       	brtc	.+6      	; 0x16fc <__addsf3+0x1e>
    16f6:	5b c1       	rjmp	.+694    	; 0x19ae <__fp_nan>
    16f8:	0e f4       	brtc	.+2      	; 0x16fc <__addsf3+0x1e>
    16fa:	e0 95       	com	r30
    16fc:	e7 fb       	bst	r30, 7
    16fe:	51 c1       	rjmp	.+674    	; 0x19a2 <__fp_inf>

00001700 <__addsf3x>:
    1700:	e9 2f       	mov	r30, r25
    1702:	77 d1       	rcall	.+750    	; 0x19f2 <__fp_split3>
    1704:	80 f3       	brcs	.-32     	; 0x16e6 <__addsf3+0x8>
    1706:	ba 17       	cp	r27, r26
    1708:	62 07       	cpc	r22, r18
    170a:	73 07       	cpc	r23, r19
    170c:	84 07       	cpc	r24, r20
    170e:	95 07       	cpc	r25, r21
    1710:	18 f0       	brcs	.+6      	; 0x1718 <__addsf3x+0x18>
    1712:	71 f4       	brne	.+28     	; 0x1730 <__addsf3x+0x30>
    1714:	9e f5       	brtc	.+102    	; 0x177c <__addsf3x+0x7c>
    1716:	8f c1       	rjmp	.+798    	; 0x1a36 <__fp_zero>
    1718:	0e f4       	brtc	.+2      	; 0x171c <__addsf3x+0x1c>
    171a:	e0 95       	com	r30
    171c:	0b 2e       	mov	r0, r27
    171e:	ba 2f       	mov	r27, r26
    1720:	a0 2d       	mov	r26, r0
    1722:	0b 01       	movw	r0, r22
    1724:	b9 01       	movw	r22, r18
    1726:	90 01       	movw	r18, r0
    1728:	0c 01       	movw	r0, r24
    172a:	ca 01       	movw	r24, r20
    172c:	a0 01       	movw	r20, r0
    172e:	11 24       	eor	r1, r1
    1730:	ff 27       	eor	r31, r31
    1732:	59 1b       	sub	r21, r25
    1734:	99 f0       	breq	.+38     	; 0x175c <__addsf3x+0x5c>
    1736:	59 3f       	cpi	r21, 0xF9	; 249
    1738:	50 f4       	brcc	.+20     	; 0x174e <__addsf3x+0x4e>
    173a:	50 3e       	cpi	r21, 0xE0	; 224
    173c:	68 f1       	brcs	.+90     	; 0x1798 <__addsf3x+0x98>
    173e:	1a 16       	cp	r1, r26
    1740:	f0 40       	sbci	r31, 0x00	; 0
    1742:	a2 2f       	mov	r26, r18
    1744:	23 2f       	mov	r18, r19
    1746:	34 2f       	mov	r19, r20
    1748:	44 27       	eor	r20, r20
    174a:	58 5f       	subi	r21, 0xF8	; 248
    174c:	f3 cf       	rjmp	.-26     	; 0x1734 <__addsf3x+0x34>
    174e:	46 95       	lsr	r20
    1750:	37 95       	ror	r19
    1752:	27 95       	ror	r18
    1754:	a7 95       	ror	r26
    1756:	f0 40       	sbci	r31, 0x00	; 0
    1758:	53 95       	inc	r21
    175a:	c9 f7       	brne	.-14     	; 0x174e <__addsf3x+0x4e>
    175c:	7e f4       	brtc	.+30     	; 0x177c <__addsf3x+0x7c>
    175e:	1f 16       	cp	r1, r31
    1760:	ba 0b       	sbc	r27, r26
    1762:	62 0b       	sbc	r22, r18
    1764:	73 0b       	sbc	r23, r19
    1766:	84 0b       	sbc	r24, r20
    1768:	ba f0       	brmi	.+46     	; 0x1798 <__addsf3x+0x98>
    176a:	91 50       	subi	r25, 0x01	; 1
    176c:	a1 f0       	breq	.+40     	; 0x1796 <__addsf3x+0x96>
    176e:	ff 0f       	add	r31, r31
    1770:	bb 1f       	adc	r27, r27
    1772:	66 1f       	adc	r22, r22
    1774:	77 1f       	adc	r23, r23
    1776:	88 1f       	adc	r24, r24
    1778:	c2 f7       	brpl	.-16     	; 0x176a <__addsf3x+0x6a>
    177a:	0e c0       	rjmp	.+28     	; 0x1798 <__addsf3x+0x98>
    177c:	ba 0f       	add	r27, r26
    177e:	62 1f       	adc	r22, r18
    1780:	73 1f       	adc	r23, r19
    1782:	84 1f       	adc	r24, r20
    1784:	48 f4       	brcc	.+18     	; 0x1798 <__addsf3x+0x98>
    1786:	87 95       	ror	r24
    1788:	77 95       	ror	r23
    178a:	67 95       	ror	r22
    178c:	b7 95       	ror	r27
    178e:	f7 95       	ror	r31
    1790:	9e 3f       	cpi	r25, 0xFE	; 254
    1792:	08 f0       	brcs	.+2      	; 0x1796 <__addsf3x+0x96>
    1794:	b3 cf       	rjmp	.-154    	; 0x16fc <__addsf3+0x1e>
    1796:	93 95       	inc	r25
    1798:	88 0f       	add	r24, r24
    179a:	08 f0       	brcs	.+2      	; 0x179e <__addsf3x+0x9e>
    179c:	99 27       	eor	r25, r25
    179e:	ee 0f       	add	r30, r30
    17a0:	97 95       	ror	r25
    17a2:	87 95       	ror	r24
    17a4:	08 95       	ret

000017a6 <__cmpsf2>:
    17a6:	d9 d0       	rcall	.+434    	; 0x195a <__fp_cmp>
    17a8:	08 f4       	brcc	.+2      	; 0x17ac <__cmpsf2+0x6>
    17aa:	81 e0       	ldi	r24, 0x01	; 1
    17ac:	08 95       	ret

000017ae <__divsf3>:
    17ae:	0c d0       	rcall	.+24     	; 0x17c8 <__divsf3x>
    17b0:	0f c1       	rjmp	.+542    	; 0x19d0 <__fp_round>
    17b2:	07 d1       	rcall	.+526    	; 0x19c2 <__fp_pscB>
    17b4:	40 f0       	brcs	.+16     	; 0x17c6 <__divsf3+0x18>
    17b6:	fe d0       	rcall	.+508    	; 0x19b4 <__fp_pscA>
    17b8:	30 f0       	brcs	.+12     	; 0x17c6 <__divsf3+0x18>
    17ba:	21 f4       	brne	.+8      	; 0x17c4 <__divsf3+0x16>
    17bc:	5f 3f       	cpi	r21, 0xFF	; 255
    17be:	19 f0       	breq	.+6      	; 0x17c6 <__divsf3+0x18>
    17c0:	f0 c0       	rjmp	.+480    	; 0x19a2 <__fp_inf>
    17c2:	51 11       	cpse	r21, r1
    17c4:	39 c1       	rjmp	.+626    	; 0x1a38 <__fp_szero>
    17c6:	f3 c0       	rjmp	.+486    	; 0x19ae <__fp_nan>

000017c8 <__divsf3x>:
    17c8:	14 d1       	rcall	.+552    	; 0x19f2 <__fp_split3>
    17ca:	98 f3       	brcs	.-26     	; 0x17b2 <__divsf3+0x4>

000017cc <__divsf3_pse>:
    17cc:	99 23       	and	r25, r25
    17ce:	c9 f3       	breq	.-14     	; 0x17c2 <__divsf3+0x14>
    17d0:	55 23       	and	r21, r21
    17d2:	b1 f3       	breq	.-20     	; 0x17c0 <__divsf3+0x12>
    17d4:	95 1b       	sub	r25, r21
    17d6:	55 0b       	sbc	r21, r21
    17d8:	bb 27       	eor	r27, r27
    17da:	aa 27       	eor	r26, r26
    17dc:	62 17       	cp	r22, r18
    17de:	73 07       	cpc	r23, r19
    17e0:	84 07       	cpc	r24, r20
    17e2:	38 f0       	brcs	.+14     	; 0x17f2 <__divsf3_pse+0x26>
    17e4:	9f 5f       	subi	r25, 0xFF	; 255
    17e6:	5f 4f       	sbci	r21, 0xFF	; 255
    17e8:	22 0f       	add	r18, r18
    17ea:	33 1f       	adc	r19, r19
    17ec:	44 1f       	adc	r20, r20
    17ee:	aa 1f       	adc	r26, r26
    17f0:	a9 f3       	breq	.-22     	; 0x17dc <__divsf3_pse+0x10>
    17f2:	33 d0       	rcall	.+102    	; 0x185a <__divsf3_pse+0x8e>
    17f4:	0e 2e       	mov	r0, r30
    17f6:	3a f0       	brmi	.+14     	; 0x1806 <__divsf3_pse+0x3a>
    17f8:	e0 e8       	ldi	r30, 0x80	; 128
    17fa:	30 d0       	rcall	.+96     	; 0x185c <__divsf3_pse+0x90>
    17fc:	91 50       	subi	r25, 0x01	; 1
    17fe:	50 40       	sbci	r21, 0x00	; 0
    1800:	e6 95       	lsr	r30
    1802:	00 1c       	adc	r0, r0
    1804:	ca f7       	brpl	.-14     	; 0x17f8 <__divsf3_pse+0x2c>
    1806:	29 d0       	rcall	.+82     	; 0x185a <__divsf3_pse+0x8e>
    1808:	fe 2f       	mov	r31, r30
    180a:	27 d0       	rcall	.+78     	; 0x185a <__divsf3_pse+0x8e>
    180c:	66 0f       	add	r22, r22
    180e:	77 1f       	adc	r23, r23
    1810:	88 1f       	adc	r24, r24
    1812:	bb 1f       	adc	r27, r27
    1814:	26 17       	cp	r18, r22
    1816:	37 07       	cpc	r19, r23
    1818:	48 07       	cpc	r20, r24
    181a:	ab 07       	cpc	r26, r27
    181c:	b0 e8       	ldi	r27, 0x80	; 128
    181e:	09 f0       	breq	.+2      	; 0x1822 <__divsf3_pse+0x56>
    1820:	bb 0b       	sbc	r27, r27
    1822:	80 2d       	mov	r24, r0
    1824:	bf 01       	movw	r22, r30
    1826:	ff 27       	eor	r31, r31
    1828:	93 58       	subi	r25, 0x83	; 131
    182a:	5f 4f       	sbci	r21, 0xFF	; 255
    182c:	2a f0       	brmi	.+10     	; 0x1838 <__divsf3_pse+0x6c>
    182e:	9e 3f       	cpi	r25, 0xFE	; 254
    1830:	51 05       	cpc	r21, r1
    1832:	68 f0       	brcs	.+26     	; 0x184e <__divsf3_pse+0x82>
    1834:	b6 c0       	rjmp	.+364    	; 0x19a2 <__fp_inf>
    1836:	00 c1       	rjmp	.+512    	; 0x1a38 <__fp_szero>
    1838:	5f 3f       	cpi	r21, 0xFF	; 255
    183a:	ec f3       	brlt	.-6      	; 0x1836 <__divsf3_pse+0x6a>
    183c:	98 3e       	cpi	r25, 0xE8	; 232
    183e:	dc f3       	brlt	.-10     	; 0x1836 <__divsf3_pse+0x6a>
    1840:	86 95       	lsr	r24
    1842:	77 95       	ror	r23
    1844:	67 95       	ror	r22
    1846:	b7 95       	ror	r27
    1848:	f7 95       	ror	r31
    184a:	9f 5f       	subi	r25, 0xFF	; 255
    184c:	c9 f7       	brne	.-14     	; 0x1840 <__divsf3_pse+0x74>
    184e:	88 0f       	add	r24, r24
    1850:	91 1d       	adc	r25, r1
    1852:	96 95       	lsr	r25
    1854:	87 95       	ror	r24
    1856:	97 f9       	bld	r25, 7
    1858:	08 95       	ret
    185a:	e1 e0       	ldi	r30, 0x01	; 1
    185c:	66 0f       	add	r22, r22
    185e:	77 1f       	adc	r23, r23
    1860:	88 1f       	adc	r24, r24
    1862:	bb 1f       	adc	r27, r27
    1864:	62 17       	cp	r22, r18
    1866:	73 07       	cpc	r23, r19
    1868:	84 07       	cpc	r24, r20
    186a:	ba 07       	cpc	r27, r26
    186c:	20 f0       	brcs	.+8      	; 0x1876 <__divsf3_pse+0xaa>
    186e:	62 1b       	sub	r22, r18
    1870:	73 0b       	sbc	r23, r19
    1872:	84 0b       	sbc	r24, r20
    1874:	ba 0b       	sbc	r27, r26
    1876:	ee 1f       	adc	r30, r30
    1878:	88 f7       	brcc	.-30     	; 0x185c <__divsf3_pse+0x90>
    187a:	e0 95       	com	r30
    187c:	08 95       	ret

0000187e <__fixsfsi>:
    187e:	04 d0       	rcall	.+8      	; 0x1888 <__fixunssfsi>
    1880:	68 94       	set
    1882:	b1 11       	cpse	r27, r1
    1884:	d9 c0       	rjmp	.+434    	; 0x1a38 <__fp_szero>
    1886:	08 95       	ret

00001888 <__fixunssfsi>:
    1888:	bc d0       	rcall	.+376    	; 0x1a02 <__fp_splitA>
    188a:	88 f0       	brcs	.+34     	; 0x18ae <__fixunssfsi+0x26>
    188c:	9f 57       	subi	r25, 0x7F	; 127
    188e:	90 f0       	brcs	.+36     	; 0x18b4 <__fixunssfsi+0x2c>
    1890:	b9 2f       	mov	r27, r25
    1892:	99 27       	eor	r25, r25
    1894:	b7 51       	subi	r27, 0x17	; 23
    1896:	a0 f0       	brcs	.+40     	; 0x18c0 <__fixunssfsi+0x38>
    1898:	d1 f0       	breq	.+52     	; 0x18ce <__fixunssfsi+0x46>
    189a:	66 0f       	add	r22, r22
    189c:	77 1f       	adc	r23, r23
    189e:	88 1f       	adc	r24, r24
    18a0:	99 1f       	adc	r25, r25
    18a2:	1a f0       	brmi	.+6      	; 0x18aa <__fixunssfsi+0x22>
    18a4:	ba 95       	dec	r27
    18a6:	c9 f7       	brne	.-14     	; 0x189a <__fixunssfsi+0x12>
    18a8:	12 c0       	rjmp	.+36     	; 0x18ce <__fixunssfsi+0x46>
    18aa:	b1 30       	cpi	r27, 0x01	; 1
    18ac:	81 f0       	breq	.+32     	; 0x18ce <__fixunssfsi+0x46>
    18ae:	c3 d0       	rcall	.+390    	; 0x1a36 <__fp_zero>
    18b0:	b1 e0       	ldi	r27, 0x01	; 1
    18b2:	08 95       	ret
    18b4:	c0 c0       	rjmp	.+384    	; 0x1a36 <__fp_zero>
    18b6:	67 2f       	mov	r22, r23
    18b8:	78 2f       	mov	r23, r24
    18ba:	88 27       	eor	r24, r24
    18bc:	b8 5f       	subi	r27, 0xF8	; 248
    18be:	39 f0       	breq	.+14     	; 0x18ce <__fixunssfsi+0x46>
    18c0:	b9 3f       	cpi	r27, 0xF9	; 249
    18c2:	cc f3       	brlt	.-14     	; 0x18b6 <__fixunssfsi+0x2e>
    18c4:	86 95       	lsr	r24
    18c6:	77 95       	ror	r23
    18c8:	67 95       	ror	r22
    18ca:	b3 95       	inc	r27
    18cc:	d9 f7       	brne	.-10     	; 0x18c4 <__fixunssfsi+0x3c>
    18ce:	3e f4       	brtc	.+14     	; 0x18de <__fixunssfsi+0x56>
    18d0:	90 95       	com	r25
    18d2:	80 95       	com	r24
    18d4:	70 95       	com	r23
    18d6:	61 95       	neg	r22
    18d8:	7f 4f       	sbci	r23, 0xFF	; 255
    18da:	8f 4f       	sbci	r24, 0xFF	; 255
    18dc:	9f 4f       	sbci	r25, 0xFF	; 255
    18de:	08 95       	ret

000018e0 <__floatunsisf>:
    18e0:	e8 94       	clt
    18e2:	09 c0       	rjmp	.+18     	; 0x18f6 <__floatsisf+0x12>

000018e4 <__floatsisf>:
    18e4:	97 fb       	bst	r25, 7
    18e6:	3e f4       	brtc	.+14     	; 0x18f6 <__floatsisf+0x12>
    18e8:	90 95       	com	r25
    18ea:	80 95       	com	r24
    18ec:	70 95       	com	r23
    18ee:	61 95       	neg	r22
    18f0:	7f 4f       	sbci	r23, 0xFF	; 255
    18f2:	8f 4f       	sbci	r24, 0xFF	; 255
    18f4:	9f 4f       	sbci	r25, 0xFF	; 255
    18f6:	99 23       	and	r25, r25
    18f8:	a9 f0       	breq	.+42     	; 0x1924 <__floatsisf+0x40>
    18fa:	f9 2f       	mov	r31, r25
    18fc:	96 e9       	ldi	r25, 0x96	; 150
    18fe:	bb 27       	eor	r27, r27
    1900:	93 95       	inc	r25
    1902:	f6 95       	lsr	r31
    1904:	87 95       	ror	r24
    1906:	77 95       	ror	r23
    1908:	67 95       	ror	r22
    190a:	b7 95       	ror	r27
    190c:	f1 11       	cpse	r31, r1
    190e:	f8 cf       	rjmp	.-16     	; 0x1900 <__floatsisf+0x1c>
    1910:	fa f4       	brpl	.+62     	; 0x1950 <__floatsisf+0x6c>
    1912:	bb 0f       	add	r27, r27
    1914:	11 f4       	brne	.+4      	; 0x191a <__floatsisf+0x36>
    1916:	60 ff       	sbrs	r22, 0
    1918:	1b c0       	rjmp	.+54     	; 0x1950 <__floatsisf+0x6c>
    191a:	6f 5f       	subi	r22, 0xFF	; 255
    191c:	7f 4f       	sbci	r23, 0xFF	; 255
    191e:	8f 4f       	sbci	r24, 0xFF	; 255
    1920:	9f 4f       	sbci	r25, 0xFF	; 255
    1922:	16 c0       	rjmp	.+44     	; 0x1950 <__floatsisf+0x6c>
    1924:	88 23       	and	r24, r24
    1926:	11 f0       	breq	.+4      	; 0x192c <__floatsisf+0x48>
    1928:	96 e9       	ldi	r25, 0x96	; 150
    192a:	11 c0       	rjmp	.+34     	; 0x194e <__floatsisf+0x6a>
    192c:	77 23       	and	r23, r23
    192e:	21 f0       	breq	.+8      	; 0x1938 <__floatsisf+0x54>
    1930:	9e e8       	ldi	r25, 0x8E	; 142
    1932:	87 2f       	mov	r24, r23
    1934:	76 2f       	mov	r23, r22
    1936:	05 c0       	rjmp	.+10     	; 0x1942 <__floatsisf+0x5e>
    1938:	66 23       	and	r22, r22
    193a:	71 f0       	breq	.+28     	; 0x1958 <__floatsisf+0x74>
    193c:	96 e8       	ldi	r25, 0x86	; 134
    193e:	86 2f       	mov	r24, r22
    1940:	70 e0       	ldi	r23, 0x00	; 0
    1942:	60 e0       	ldi	r22, 0x00	; 0
    1944:	2a f0       	brmi	.+10     	; 0x1950 <__floatsisf+0x6c>
    1946:	9a 95       	dec	r25
    1948:	66 0f       	add	r22, r22
    194a:	77 1f       	adc	r23, r23
    194c:	88 1f       	adc	r24, r24
    194e:	da f7       	brpl	.-10     	; 0x1946 <__floatsisf+0x62>
    1950:	88 0f       	add	r24, r24
    1952:	96 95       	lsr	r25
    1954:	87 95       	ror	r24
    1956:	97 f9       	bld	r25, 7
    1958:	08 95       	ret

0000195a <__fp_cmp>:
    195a:	99 0f       	add	r25, r25
    195c:	00 08       	sbc	r0, r0
    195e:	55 0f       	add	r21, r21
    1960:	aa 0b       	sbc	r26, r26
    1962:	e0 e8       	ldi	r30, 0x80	; 128
    1964:	fe ef       	ldi	r31, 0xFE	; 254
    1966:	16 16       	cp	r1, r22
    1968:	17 06       	cpc	r1, r23
    196a:	e8 07       	cpc	r30, r24
    196c:	f9 07       	cpc	r31, r25
    196e:	c0 f0       	brcs	.+48     	; 0x19a0 <__fp_cmp+0x46>
    1970:	12 16       	cp	r1, r18
    1972:	13 06       	cpc	r1, r19
    1974:	e4 07       	cpc	r30, r20
    1976:	f5 07       	cpc	r31, r21
    1978:	98 f0       	brcs	.+38     	; 0x19a0 <__fp_cmp+0x46>
    197a:	62 1b       	sub	r22, r18
    197c:	73 0b       	sbc	r23, r19
    197e:	84 0b       	sbc	r24, r20
    1980:	95 0b       	sbc	r25, r21
    1982:	39 f4       	brne	.+14     	; 0x1992 <__fp_cmp+0x38>
    1984:	0a 26       	eor	r0, r26
    1986:	61 f0       	breq	.+24     	; 0x19a0 <__fp_cmp+0x46>
    1988:	23 2b       	or	r18, r19
    198a:	24 2b       	or	r18, r20
    198c:	25 2b       	or	r18, r21
    198e:	21 f4       	brne	.+8      	; 0x1998 <__fp_cmp+0x3e>
    1990:	08 95       	ret
    1992:	0a 26       	eor	r0, r26
    1994:	09 f4       	brne	.+2      	; 0x1998 <__fp_cmp+0x3e>
    1996:	a1 40       	sbci	r26, 0x01	; 1
    1998:	a6 95       	lsr	r26
    199a:	8f ef       	ldi	r24, 0xFF	; 255
    199c:	81 1d       	adc	r24, r1
    199e:	81 1d       	adc	r24, r1
    19a0:	08 95       	ret

000019a2 <__fp_inf>:
    19a2:	97 f9       	bld	r25, 7
    19a4:	9f 67       	ori	r25, 0x7F	; 127
    19a6:	80 e8       	ldi	r24, 0x80	; 128
    19a8:	70 e0       	ldi	r23, 0x00	; 0
    19aa:	60 e0       	ldi	r22, 0x00	; 0
    19ac:	08 95       	ret

000019ae <__fp_nan>:
    19ae:	9f ef       	ldi	r25, 0xFF	; 255
    19b0:	80 ec       	ldi	r24, 0xC0	; 192
    19b2:	08 95       	ret

000019b4 <__fp_pscA>:
    19b4:	00 24       	eor	r0, r0
    19b6:	0a 94       	dec	r0
    19b8:	16 16       	cp	r1, r22
    19ba:	17 06       	cpc	r1, r23
    19bc:	18 06       	cpc	r1, r24
    19be:	09 06       	cpc	r0, r25
    19c0:	08 95       	ret

000019c2 <__fp_pscB>:
    19c2:	00 24       	eor	r0, r0
    19c4:	0a 94       	dec	r0
    19c6:	12 16       	cp	r1, r18
    19c8:	13 06       	cpc	r1, r19
    19ca:	14 06       	cpc	r1, r20
    19cc:	05 06       	cpc	r0, r21
    19ce:	08 95       	ret

000019d0 <__fp_round>:
    19d0:	09 2e       	mov	r0, r25
    19d2:	03 94       	inc	r0
    19d4:	00 0c       	add	r0, r0
    19d6:	11 f4       	brne	.+4      	; 0x19dc <__fp_round+0xc>
    19d8:	88 23       	and	r24, r24
    19da:	52 f0       	brmi	.+20     	; 0x19f0 <__fp_round+0x20>
    19dc:	bb 0f       	add	r27, r27
    19de:	40 f4       	brcc	.+16     	; 0x19f0 <__fp_round+0x20>
    19e0:	bf 2b       	or	r27, r31
    19e2:	11 f4       	brne	.+4      	; 0x19e8 <__fp_round+0x18>
    19e4:	60 ff       	sbrs	r22, 0
    19e6:	04 c0       	rjmp	.+8      	; 0x19f0 <__fp_round+0x20>
    19e8:	6f 5f       	subi	r22, 0xFF	; 255
    19ea:	7f 4f       	sbci	r23, 0xFF	; 255
    19ec:	8f 4f       	sbci	r24, 0xFF	; 255
    19ee:	9f 4f       	sbci	r25, 0xFF	; 255
    19f0:	08 95       	ret

000019f2 <__fp_split3>:
    19f2:	57 fd       	sbrc	r21, 7
    19f4:	90 58       	subi	r25, 0x80	; 128
    19f6:	44 0f       	add	r20, r20
    19f8:	55 1f       	adc	r21, r21
    19fa:	59 f0       	breq	.+22     	; 0x1a12 <__fp_splitA+0x10>
    19fc:	5f 3f       	cpi	r21, 0xFF	; 255
    19fe:	71 f0       	breq	.+28     	; 0x1a1c <__fp_splitA+0x1a>
    1a00:	47 95       	ror	r20

00001a02 <__fp_splitA>:
    1a02:	88 0f       	add	r24, r24
    1a04:	97 fb       	bst	r25, 7
    1a06:	99 1f       	adc	r25, r25
    1a08:	61 f0       	breq	.+24     	; 0x1a22 <__fp_splitA+0x20>
    1a0a:	9f 3f       	cpi	r25, 0xFF	; 255
    1a0c:	79 f0       	breq	.+30     	; 0x1a2c <__fp_splitA+0x2a>
    1a0e:	87 95       	ror	r24
    1a10:	08 95       	ret
    1a12:	12 16       	cp	r1, r18
    1a14:	13 06       	cpc	r1, r19
    1a16:	14 06       	cpc	r1, r20
    1a18:	55 1f       	adc	r21, r21
    1a1a:	f2 cf       	rjmp	.-28     	; 0x1a00 <__fp_split3+0xe>
    1a1c:	46 95       	lsr	r20
    1a1e:	f1 df       	rcall	.-30     	; 0x1a02 <__fp_splitA>
    1a20:	08 c0       	rjmp	.+16     	; 0x1a32 <__fp_splitA+0x30>
    1a22:	16 16       	cp	r1, r22
    1a24:	17 06       	cpc	r1, r23
    1a26:	18 06       	cpc	r1, r24
    1a28:	99 1f       	adc	r25, r25
    1a2a:	f1 cf       	rjmp	.-30     	; 0x1a0e <__fp_splitA+0xc>
    1a2c:	86 95       	lsr	r24
    1a2e:	71 05       	cpc	r23, r1
    1a30:	61 05       	cpc	r22, r1
    1a32:	08 94       	sec
    1a34:	08 95       	ret

00001a36 <__fp_zero>:
    1a36:	e8 94       	clt

00001a38 <__fp_szero>:
    1a38:	bb 27       	eor	r27, r27
    1a3a:	66 27       	eor	r22, r22
    1a3c:	77 27       	eor	r23, r23
    1a3e:	cb 01       	movw	r24, r22
    1a40:	97 f9       	bld	r25, 7
    1a42:	08 95       	ret

00001a44 <__gesf2>:
    1a44:	8a df       	rcall	.-236    	; 0x195a <__fp_cmp>
    1a46:	08 f4       	brcc	.+2      	; 0x1a4a <__gesf2+0x6>
    1a48:	8f ef       	ldi	r24, 0xFF	; 255
    1a4a:	08 95       	ret

00001a4c <log10>:
    1a4c:	0a d0       	rcall	.+20     	; 0x1a62 <log>
    1a4e:	29 ed       	ldi	r18, 0xD9	; 217
    1a50:	3b e5       	ldi	r19, 0x5B	; 91
    1a52:	4e ed       	ldi	r20, 0xDE	; 222
    1a54:	5e e3       	ldi	r21, 0x3E	; 62
    1a56:	45 c0       	rjmp	.+138    	; 0x1ae2 <__mulsf3>
    1a58:	0e f0       	brts	.+2      	; 0x1a5c <log10+0x10>
    1a5a:	23 c1       	rjmp	.+582    	; 0x1ca2 <__fp_mpack>
    1a5c:	a8 cf       	rjmp	.-176    	; 0x19ae <__fp_nan>
    1a5e:	68 94       	set
    1a60:	a0 cf       	rjmp	.-192    	; 0x19a2 <__fp_inf>

00001a62 <log>:
    1a62:	cf df       	rcall	.-98     	; 0x1a02 <__fp_splitA>
    1a64:	c8 f3       	brcs	.-14     	; 0x1a58 <log10+0xc>
    1a66:	99 23       	and	r25, r25
    1a68:	d1 f3       	breq	.-12     	; 0x1a5e <log10+0x12>
    1a6a:	c6 f3       	brts	.-16     	; 0x1a5c <log10+0x10>
    1a6c:	df 93       	push	r29
    1a6e:	cf 93       	push	r28
    1a70:	1f 93       	push	r17
    1a72:	0f 93       	push	r16
    1a74:	ff 92       	push	r15
    1a76:	c9 2f       	mov	r28, r25
    1a78:	dd 27       	eor	r29, r29
    1a7a:	88 23       	and	r24, r24
    1a7c:	2a f0       	brmi	.+10     	; 0x1a88 <log+0x26>
    1a7e:	21 97       	sbiw	r28, 0x01	; 1
    1a80:	66 0f       	add	r22, r22
    1a82:	77 1f       	adc	r23, r23
    1a84:	88 1f       	adc	r24, r24
    1a86:	da f7       	brpl	.-10     	; 0x1a7e <log+0x1c>
    1a88:	20 e0       	ldi	r18, 0x00	; 0
    1a8a:	30 e0       	ldi	r19, 0x00	; 0
    1a8c:	40 e8       	ldi	r20, 0x80	; 128
    1a8e:	5f eb       	ldi	r21, 0xBF	; 191
    1a90:	9f e3       	ldi	r25, 0x3F	; 63
    1a92:	88 39       	cpi	r24, 0x98	; 152
    1a94:	20 f0       	brcs	.+8      	; 0x1a9e <log+0x3c>
    1a96:	80 3e       	cpi	r24, 0xE0	; 224
    1a98:	30 f0       	brcs	.+12     	; 0x1aa6 <log+0x44>
    1a9a:	21 96       	adiw	r28, 0x01	; 1
    1a9c:	8f 77       	andi	r24, 0x7F	; 127
    1a9e:	1f de       	rcall	.-962    	; 0x16de <__addsf3>
    1aa0:	ec e8       	ldi	r30, 0x8C	; 140
    1aa2:	f0 e0       	ldi	r31, 0x00	; 0
    1aa4:	03 c0       	rjmp	.+6      	; 0x1aac <log+0x4a>
    1aa6:	1b de       	rcall	.-970    	; 0x16de <__addsf3>
    1aa8:	e9 eb       	ldi	r30, 0xB9	; 185
    1aaa:	f0 e0       	ldi	r31, 0x00	; 0
    1aac:	08 d1       	rcall	.+528    	; 0x1cbe <__fp_powser>
    1aae:	8b 01       	movw	r16, r22
    1ab0:	be 01       	movw	r22, r28
    1ab2:	ec 01       	movw	r28, r24
    1ab4:	fb 2e       	mov	r15, r27
    1ab6:	6f 57       	subi	r22, 0x7F	; 127
    1ab8:	71 09       	sbc	r23, r1
    1aba:	75 95       	asr	r23
    1abc:	77 1f       	adc	r23, r23
    1abe:	88 0b       	sbc	r24, r24
    1ac0:	99 0b       	sbc	r25, r25
    1ac2:	10 df       	rcall	.-480    	; 0x18e4 <__floatsisf>
    1ac4:	28 e1       	ldi	r18, 0x18	; 24
    1ac6:	32 e7       	ldi	r19, 0x72	; 114
    1ac8:	41 e3       	ldi	r20, 0x31	; 49
    1aca:	5f e3       	ldi	r21, 0x3F	; 63
    1acc:	16 d0       	rcall	.+44     	; 0x1afa <__mulsf3x>
    1ace:	af 2d       	mov	r26, r15
    1ad0:	98 01       	movw	r18, r16
    1ad2:	ae 01       	movw	r20, r28
    1ad4:	ff 90       	pop	r15
    1ad6:	0f 91       	pop	r16
    1ad8:	1f 91       	pop	r17
    1ada:	cf 91       	pop	r28
    1adc:	df 91       	pop	r29
    1ade:	10 de       	rcall	.-992    	; 0x1700 <__addsf3x>
    1ae0:	77 cf       	rjmp	.-274    	; 0x19d0 <__fp_round>

00001ae2 <__mulsf3>:
    1ae2:	0b d0       	rcall	.+22     	; 0x1afa <__mulsf3x>
    1ae4:	75 cf       	rjmp	.-278    	; 0x19d0 <__fp_round>
    1ae6:	66 df       	rcall	.-308    	; 0x19b4 <__fp_pscA>
    1ae8:	28 f0       	brcs	.+10     	; 0x1af4 <__mulsf3+0x12>
    1aea:	6b df       	rcall	.-298    	; 0x19c2 <__fp_pscB>
    1aec:	18 f0       	brcs	.+6      	; 0x1af4 <__mulsf3+0x12>
    1aee:	95 23       	and	r25, r21
    1af0:	09 f0       	breq	.+2      	; 0x1af4 <__mulsf3+0x12>
    1af2:	57 cf       	rjmp	.-338    	; 0x19a2 <__fp_inf>
    1af4:	5c cf       	rjmp	.-328    	; 0x19ae <__fp_nan>
    1af6:	11 24       	eor	r1, r1
    1af8:	9f cf       	rjmp	.-194    	; 0x1a38 <__fp_szero>

00001afa <__mulsf3x>:
    1afa:	7b df       	rcall	.-266    	; 0x19f2 <__fp_split3>
    1afc:	a0 f3       	brcs	.-24     	; 0x1ae6 <__mulsf3+0x4>

00001afe <__mulsf3_pse>:
    1afe:	95 9f       	mul	r25, r21
    1b00:	d1 f3       	breq	.-12     	; 0x1af6 <__mulsf3+0x14>
    1b02:	95 0f       	add	r25, r21
    1b04:	50 e0       	ldi	r21, 0x00	; 0
    1b06:	55 1f       	adc	r21, r21
    1b08:	62 9f       	mul	r22, r18
    1b0a:	f0 01       	movw	r30, r0
    1b0c:	72 9f       	mul	r23, r18
    1b0e:	bb 27       	eor	r27, r27
    1b10:	f0 0d       	add	r31, r0
    1b12:	b1 1d       	adc	r27, r1
    1b14:	63 9f       	mul	r22, r19
    1b16:	aa 27       	eor	r26, r26
    1b18:	f0 0d       	add	r31, r0
    1b1a:	b1 1d       	adc	r27, r1
    1b1c:	aa 1f       	adc	r26, r26
    1b1e:	64 9f       	mul	r22, r20
    1b20:	66 27       	eor	r22, r22
    1b22:	b0 0d       	add	r27, r0
    1b24:	a1 1d       	adc	r26, r1
    1b26:	66 1f       	adc	r22, r22
    1b28:	82 9f       	mul	r24, r18
    1b2a:	22 27       	eor	r18, r18
    1b2c:	b0 0d       	add	r27, r0
    1b2e:	a1 1d       	adc	r26, r1
    1b30:	62 1f       	adc	r22, r18
    1b32:	73 9f       	mul	r23, r19
    1b34:	b0 0d       	add	r27, r0
    1b36:	a1 1d       	adc	r26, r1
    1b38:	62 1f       	adc	r22, r18
    1b3a:	83 9f       	mul	r24, r19
    1b3c:	a0 0d       	add	r26, r0
    1b3e:	61 1d       	adc	r22, r1
    1b40:	22 1f       	adc	r18, r18
    1b42:	74 9f       	mul	r23, r20
    1b44:	33 27       	eor	r19, r19
    1b46:	a0 0d       	add	r26, r0
    1b48:	61 1d       	adc	r22, r1
    1b4a:	23 1f       	adc	r18, r19
    1b4c:	84 9f       	mul	r24, r20
    1b4e:	60 0d       	add	r22, r0
    1b50:	21 1d       	adc	r18, r1
    1b52:	82 2f       	mov	r24, r18
    1b54:	76 2f       	mov	r23, r22
    1b56:	6a 2f       	mov	r22, r26
    1b58:	11 24       	eor	r1, r1
    1b5a:	9f 57       	subi	r25, 0x7F	; 127
    1b5c:	50 40       	sbci	r21, 0x00	; 0
    1b5e:	8a f0       	brmi	.+34     	; 0x1b82 <__mulsf3_pse+0x84>
    1b60:	e1 f0       	breq	.+56     	; 0x1b9a <__mulsf3_pse+0x9c>
    1b62:	88 23       	and	r24, r24
    1b64:	4a f0       	brmi	.+18     	; 0x1b78 <__mulsf3_pse+0x7a>
    1b66:	ee 0f       	add	r30, r30
    1b68:	ff 1f       	adc	r31, r31
    1b6a:	bb 1f       	adc	r27, r27
    1b6c:	66 1f       	adc	r22, r22
    1b6e:	77 1f       	adc	r23, r23
    1b70:	88 1f       	adc	r24, r24
    1b72:	91 50       	subi	r25, 0x01	; 1
    1b74:	50 40       	sbci	r21, 0x00	; 0
    1b76:	a9 f7       	brne	.-22     	; 0x1b62 <__mulsf3_pse+0x64>
    1b78:	9e 3f       	cpi	r25, 0xFE	; 254
    1b7a:	51 05       	cpc	r21, r1
    1b7c:	70 f0       	brcs	.+28     	; 0x1b9a <__mulsf3_pse+0x9c>
    1b7e:	11 cf       	rjmp	.-478    	; 0x19a2 <__fp_inf>
    1b80:	5b cf       	rjmp	.-330    	; 0x1a38 <__fp_szero>
    1b82:	5f 3f       	cpi	r21, 0xFF	; 255
    1b84:	ec f3       	brlt	.-6      	; 0x1b80 <__mulsf3_pse+0x82>
    1b86:	98 3e       	cpi	r25, 0xE8	; 232
    1b88:	dc f3       	brlt	.-10     	; 0x1b80 <__mulsf3_pse+0x82>
    1b8a:	86 95       	lsr	r24
    1b8c:	77 95       	ror	r23
    1b8e:	67 95       	ror	r22
    1b90:	b7 95       	ror	r27
    1b92:	f7 95       	ror	r31
    1b94:	e7 95       	ror	r30
    1b96:	9f 5f       	subi	r25, 0xFF	; 255
    1b98:	c1 f7       	brne	.-16     	; 0x1b8a <__mulsf3_pse+0x8c>
    1b9a:	fe 2b       	or	r31, r30
    1b9c:	88 0f       	add	r24, r24
    1b9e:	91 1d       	adc	r25, r1
    1ba0:	96 95       	lsr	r25
    1ba2:	87 95       	ror	r24
    1ba4:	97 f9       	bld	r25, 7
    1ba6:	08 95       	ret

00001ba8 <pow>:
    1ba8:	fa 01       	movw	r30, r20
    1baa:	ee 0f       	add	r30, r30
    1bac:	ff 1f       	adc	r31, r31
    1bae:	30 96       	adiw	r30, 0x00	; 0
    1bb0:	21 05       	cpc	r18, r1
    1bb2:	31 05       	cpc	r19, r1
    1bb4:	99 f1       	breq	.+102    	; 0x1c1c <pow+0x74>
    1bb6:	61 15       	cp	r22, r1
    1bb8:	71 05       	cpc	r23, r1
    1bba:	61 f4       	brne	.+24     	; 0x1bd4 <pow+0x2c>
    1bbc:	80 38       	cpi	r24, 0x80	; 128
    1bbe:	bf e3       	ldi	r27, 0x3F	; 63
    1bc0:	9b 07       	cpc	r25, r27
    1bc2:	49 f1       	breq	.+82     	; 0x1c16 <pow+0x6e>
    1bc4:	68 94       	set
    1bc6:	90 38       	cpi	r25, 0x80	; 128
    1bc8:	81 05       	cpc	r24, r1
    1bca:	61 f0       	breq	.+24     	; 0x1be4 <pow+0x3c>
    1bcc:	80 38       	cpi	r24, 0x80	; 128
    1bce:	bf ef       	ldi	r27, 0xFF	; 255
    1bd0:	9b 07       	cpc	r25, r27
    1bd2:	41 f0       	breq	.+16     	; 0x1be4 <pow+0x3c>
    1bd4:	99 23       	and	r25, r25
    1bd6:	42 f5       	brpl	.+80     	; 0x1c28 <pow+0x80>
    1bd8:	ff 3f       	cpi	r31, 0xFF	; 255
    1bda:	e1 05       	cpc	r30, r1
    1bdc:	31 05       	cpc	r19, r1
    1bde:	21 05       	cpc	r18, r1
    1be0:	11 f1       	breq	.+68     	; 0x1c26 <pow+0x7e>
    1be2:	e8 94       	clt
    1be4:	08 94       	sec
    1be6:	e7 95       	ror	r30
    1be8:	d9 01       	movw	r26, r18
    1bea:	aa 23       	and	r26, r26
    1bec:	29 f4       	brne	.+10     	; 0x1bf8 <pow+0x50>
    1bee:	ab 2f       	mov	r26, r27
    1bf0:	be 2f       	mov	r27, r30
    1bf2:	f8 5f       	subi	r31, 0xF8	; 248
    1bf4:	d0 f3       	brcs	.-12     	; 0x1bea <pow+0x42>
    1bf6:	10 c0       	rjmp	.+32     	; 0x1c18 <pow+0x70>
    1bf8:	ff 5f       	subi	r31, 0xFF	; 255
    1bfa:	70 f4       	brcc	.+28     	; 0x1c18 <pow+0x70>
    1bfc:	a6 95       	lsr	r26
    1bfe:	e0 f7       	brcc	.-8      	; 0x1bf8 <pow+0x50>
    1c00:	f7 39       	cpi	r31, 0x97	; 151
    1c02:	50 f0       	brcs	.+20     	; 0x1c18 <pow+0x70>
    1c04:	19 f0       	breq	.+6      	; 0x1c0c <pow+0x64>
    1c06:	ff 3a       	cpi	r31, 0xAF	; 175
    1c08:	38 f4       	brcc	.+14     	; 0x1c18 <pow+0x70>
    1c0a:	9f 77       	andi	r25, 0x7F	; 127
    1c0c:	9f 93       	push	r25
    1c0e:	0c d0       	rcall	.+24     	; 0x1c28 <pow+0x80>
    1c10:	0f 90       	pop	r0
    1c12:	07 fc       	sbrc	r0, 7
    1c14:	90 58       	subi	r25, 0x80	; 128
    1c16:	08 95       	ret
    1c18:	3e f0       	brts	.+14     	; 0x1c28 <pow+0x80>
    1c1a:	c9 ce       	rjmp	.-622    	; 0x19ae <__fp_nan>
    1c1c:	60 e0       	ldi	r22, 0x00	; 0
    1c1e:	70 e0       	ldi	r23, 0x00	; 0
    1c20:	80 e8       	ldi	r24, 0x80	; 128
    1c22:	9f e3       	ldi	r25, 0x3F	; 63
    1c24:	08 95       	ret
    1c26:	4f e7       	ldi	r20, 0x7F	; 127
    1c28:	9f 77       	andi	r25, 0x7F	; 127
    1c2a:	5f 93       	push	r21
    1c2c:	4f 93       	push	r20
    1c2e:	3f 93       	push	r19
    1c30:	2f 93       	push	r18
    1c32:	17 df       	rcall	.-466    	; 0x1a62 <log>
    1c34:	2f 91       	pop	r18
    1c36:	3f 91       	pop	r19
    1c38:	4f 91       	pop	r20
    1c3a:	5f 91       	pop	r21
    1c3c:	52 df       	rcall	.-348    	; 0x1ae2 <__mulsf3>
    1c3e:	05 c0       	rjmp	.+10     	; 0x1c4a <exp>
    1c40:	19 f4       	brne	.+6      	; 0x1c48 <pow+0xa0>
    1c42:	0e f0       	brts	.+2      	; 0x1c46 <pow+0x9e>
    1c44:	ae ce       	rjmp	.-676    	; 0x19a2 <__fp_inf>
    1c46:	f7 ce       	rjmp	.-530    	; 0x1a36 <__fp_zero>
    1c48:	b2 ce       	rjmp	.-668    	; 0x19ae <__fp_nan>

00001c4a <exp>:
    1c4a:	db de       	rcall	.-586    	; 0x1a02 <__fp_splitA>
    1c4c:	c8 f3       	brcs	.-14     	; 0x1c40 <pow+0x98>
    1c4e:	96 38       	cpi	r25, 0x86	; 134
    1c50:	c0 f7       	brcc	.-16     	; 0x1c42 <pow+0x9a>
    1c52:	07 f8       	bld	r0, 7
    1c54:	0f 92       	push	r0
    1c56:	e8 94       	clt
    1c58:	2b e3       	ldi	r18, 0x3B	; 59
    1c5a:	3a ea       	ldi	r19, 0xAA	; 170
    1c5c:	48 eb       	ldi	r20, 0xB8	; 184
    1c5e:	5f e7       	ldi	r21, 0x7F	; 127
    1c60:	4e df       	rcall	.-356    	; 0x1afe <__mulsf3_pse>
    1c62:	0f 92       	push	r0
    1c64:	0f 92       	push	r0
    1c66:	0f 92       	push	r0
    1c68:	4d b7       	in	r20, 0x3d	; 61
    1c6a:	5e b7       	in	r21, 0x3e	; 62
    1c6c:	0f 92       	push	r0
    1c6e:	89 d0       	rcall	.+274    	; 0x1d82 <modf>
    1c70:	e6 ee       	ldi	r30, 0xE6	; 230
    1c72:	f0 e0       	ldi	r31, 0x00	; 0
    1c74:	24 d0       	rcall	.+72     	; 0x1cbe <__fp_powser>
    1c76:	4f 91       	pop	r20
    1c78:	5f 91       	pop	r21
    1c7a:	ef 91       	pop	r30
    1c7c:	ff 91       	pop	r31
    1c7e:	e5 95       	asr	r30
    1c80:	ee 1f       	adc	r30, r30
    1c82:	ff 1f       	adc	r31, r31
    1c84:	49 f0       	breq	.+18     	; 0x1c98 <exp+0x4e>
    1c86:	fe 57       	subi	r31, 0x7E	; 126
    1c88:	e0 68       	ori	r30, 0x80	; 128
    1c8a:	44 27       	eor	r20, r20
    1c8c:	ee 0f       	add	r30, r30
    1c8e:	44 1f       	adc	r20, r20
    1c90:	fa 95       	dec	r31
    1c92:	e1 f7       	brne	.-8      	; 0x1c8c <exp+0x42>
    1c94:	41 95       	neg	r20
    1c96:	55 0b       	sbc	r21, r21
    1c98:	40 d0       	rcall	.+128    	; 0x1d1a <ldexp>
    1c9a:	0f 90       	pop	r0
    1c9c:	07 fe       	sbrs	r0, 7
    1c9e:	34 c0       	rjmp	.+104    	; 0x1d08 <inverse>
    1ca0:	08 95       	ret

00001ca2 <__fp_mpack>:
    1ca2:	9f 3f       	cpi	r25, 0xFF	; 255
    1ca4:	31 f0       	breq	.+12     	; 0x1cb2 <__fp_mpack_finite+0xc>

00001ca6 <__fp_mpack_finite>:
    1ca6:	91 50       	subi	r25, 0x01	; 1
    1ca8:	20 f4       	brcc	.+8      	; 0x1cb2 <__fp_mpack_finite+0xc>
    1caa:	87 95       	ror	r24
    1cac:	77 95       	ror	r23
    1cae:	67 95       	ror	r22
    1cb0:	b7 95       	ror	r27
    1cb2:	88 0f       	add	r24, r24
    1cb4:	91 1d       	adc	r25, r1
    1cb6:	96 95       	lsr	r25
    1cb8:	87 95       	ror	r24
    1cba:	97 f9       	bld	r25, 7
    1cbc:	08 95       	ret

00001cbe <__fp_powser>:
    1cbe:	df 93       	push	r29
    1cc0:	cf 93       	push	r28
    1cc2:	1f 93       	push	r17
    1cc4:	0f 93       	push	r16
    1cc6:	ff 92       	push	r15
    1cc8:	ef 92       	push	r14
    1cca:	df 92       	push	r13
    1ccc:	7b 01       	movw	r14, r22
    1cce:	8c 01       	movw	r16, r24
    1cd0:	68 94       	set
    1cd2:	05 c0       	rjmp	.+10     	; 0x1cde <__fp_powser+0x20>
    1cd4:	da 2e       	mov	r13, r26
    1cd6:	ef 01       	movw	r28, r30
    1cd8:	10 df       	rcall	.-480    	; 0x1afa <__mulsf3x>
    1cda:	fe 01       	movw	r30, r28
    1cdc:	e8 94       	clt
    1cde:	a5 91       	lpm	r26, Z+
    1ce0:	25 91       	lpm	r18, Z+
    1ce2:	35 91       	lpm	r19, Z+
    1ce4:	45 91       	lpm	r20, Z+
    1ce6:	55 91       	lpm	r21, Z+
    1ce8:	ae f3       	brts	.-22     	; 0x1cd4 <__fp_powser+0x16>
    1cea:	ef 01       	movw	r28, r30
    1cec:	09 dd       	rcall	.-1518   	; 0x1700 <__addsf3x>
    1cee:	fe 01       	movw	r30, r28
    1cf0:	97 01       	movw	r18, r14
    1cf2:	a8 01       	movw	r20, r16
    1cf4:	da 94       	dec	r13
    1cf6:	79 f7       	brne	.-34     	; 0x1cd6 <__fp_powser+0x18>
    1cf8:	df 90       	pop	r13
    1cfa:	ef 90       	pop	r14
    1cfc:	ff 90       	pop	r15
    1cfe:	0f 91       	pop	r16
    1d00:	1f 91       	pop	r17
    1d02:	cf 91       	pop	r28
    1d04:	df 91       	pop	r29
    1d06:	08 95       	ret

00001d08 <inverse>:
    1d08:	9b 01       	movw	r18, r22
    1d0a:	ac 01       	movw	r20, r24
    1d0c:	60 e0       	ldi	r22, 0x00	; 0
    1d0e:	70 e0       	ldi	r23, 0x00	; 0
    1d10:	80 e8       	ldi	r24, 0x80	; 128
    1d12:	9f e3       	ldi	r25, 0x3F	; 63
    1d14:	4c cd       	rjmp	.-1384   	; 0x17ae <__divsf3>
    1d16:	45 ce       	rjmp	.-886    	; 0x19a2 <__fp_inf>
    1d18:	c4 cf       	rjmp	.-120    	; 0x1ca2 <__fp_mpack>

00001d1a <ldexp>:
    1d1a:	73 de       	rcall	.-794    	; 0x1a02 <__fp_splitA>
    1d1c:	e8 f3       	brcs	.-6      	; 0x1d18 <inverse+0x10>
    1d1e:	99 23       	and	r25, r25
    1d20:	d9 f3       	breq	.-10     	; 0x1d18 <inverse+0x10>
    1d22:	94 0f       	add	r25, r20
    1d24:	51 1d       	adc	r21, r1
    1d26:	bb f3       	brvs	.-18     	; 0x1d16 <inverse+0xe>
    1d28:	91 50       	subi	r25, 0x01	; 1
    1d2a:	50 40       	sbci	r21, 0x00	; 0
    1d2c:	94 f0       	brlt	.+36     	; 0x1d52 <ldexp+0x38>
    1d2e:	59 f0       	breq	.+22     	; 0x1d46 <ldexp+0x2c>
    1d30:	88 23       	and	r24, r24
    1d32:	32 f0       	brmi	.+12     	; 0x1d40 <ldexp+0x26>
    1d34:	66 0f       	add	r22, r22
    1d36:	77 1f       	adc	r23, r23
    1d38:	88 1f       	adc	r24, r24
    1d3a:	91 50       	subi	r25, 0x01	; 1
    1d3c:	50 40       	sbci	r21, 0x00	; 0
    1d3e:	c1 f7       	brne	.-16     	; 0x1d30 <ldexp+0x16>
    1d40:	9e 3f       	cpi	r25, 0xFE	; 254
    1d42:	51 05       	cpc	r21, r1
    1d44:	44 f7       	brge	.-48     	; 0x1d16 <inverse+0xe>
    1d46:	88 0f       	add	r24, r24
    1d48:	91 1d       	adc	r25, r1
    1d4a:	96 95       	lsr	r25
    1d4c:	87 95       	ror	r24
    1d4e:	97 f9       	bld	r25, 7
    1d50:	08 95       	ret
    1d52:	5f 3f       	cpi	r21, 0xFF	; 255
    1d54:	ac f0       	brlt	.+42     	; 0x1d80 <ldexp+0x66>
    1d56:	98 3e       	cpi	r25, 0xE8	; 232
    1d58:	9c f0       	brlt	.+38     	; 0x1d80 <ldexp+0x66>
    1d5a:	bb 27       	eor	r27, r27
    1d5c:	86 95       	lsr	r24
    1d5e:	77 95       	ror	r23
    1d60:	67 95       	ror	r22
    1d62:	b7 95       	ror	r27
    1d64:	08 f4       	brcc	.+2      	; 0x1d68 <ldexp+0x4e>
    1d66:	b1 60       	ori	r27, 0x01	; 1
    1d68:	93 95       	inc	r25
    1d6a:	c1 f7       	brne	.-16     	; 0x1d5c <ldexp+0x42>
    1d6c:	bb 0f       	add	r27, r27
    1d6e:	58 f7       	brcc	.-42     	; 0x1d46 <ldexp+0x2c>
    1d70:	11 f4       	brne	.+4      	; 0x1d76 <ldexp+0x5c>
    1d72:	60 ff       	sbrs	r22, 0
    1d74:	e8 cf       	rjmp	.-48     	; 0x1d46 <ldexp+0x2c>
    1d76:	6f 5f       	subi	r22, 0xFF	; 255
    1d78:	7f 4f       	sbci	r23, 0xFF	; 255
    1d7a:	8f 4f       	sbci	r24, 0xFF	; 255
    1d7c:	9f 4f       	sbci	r25, 0xFF	; 255
    1d7e:	e3 cf       	rjmp	.-58     	; 0x1d46 <ldexp+0x2c>
    1d80:	5b ce       	rjmp	.-842    	; 0x1a38 <__fp_szero>

00001d82 <modf>:
    1d82:	fa 01       	movw	r30, r20
    1d84:	dc 01       	movw	r26, r24
    1d86:	aa 0f       	add	r26, r26
    1d88:	bb 1f       	adc	r27, r27
    1d8a:	9b 01       	movw	r18, r22
    1d8c:	ac 01       	movw	r20, r24
    1d8e:	bf 57       	subi	r27, 0x7F	; 127
    1d90:	28 f4       	brcc	.+10     	; 0x1d9c <modf+0x1a>
    1d92:	22 27       	eor	r18, r18
    1d94:	33 27       	eor	r19, r19
    1d96:	44 27       	eor	r20, r20
    1d98:	50 78       	andi	r21, 0x80	; 128
    1d9a:	1f c0       	rjmp	.+62     	; 0x1dda <modf+0x58>
    1d9c:	b7 51       	subi	r27, 0x17	; 23
    1d9e:	88 f4       	brcc	.+34     	; 0x1dc2 <modf+0x40>
    1da0:	ab 2f       	mov	r26, r27
    1da2:	00 24       	eor	r0, r0
    1da4:	46 95       	lsr	r20
    1da6:	37 95       	ror	r19
    1da8:	27 95       	ror	r18
    1daa:	01 1c       	adc	r0, r1
    1dac:	a3 95       	inc	r26
    1dae:	d2 f3       	brmi	.-12     	; 0x1da4 <modf+0x22>
    1db0:	00 20       	and	r0, r0
    1db2:	69 f0       	breq	.+26     	; 0x1dce <modf+0x4c>
    1db4:	22 0f       	add	r18, r18
    1db6:	33 1f       	adc	r19, r19
    1db8:	44 1f       	adc	r20, r20
    1dba:	b3 95       	inc	r27
    1dbc:	da f3       	brmi	.-10     	; 0x1db4 <modf+0x32>
    1dbe:	0d d0       	rcall	.+26     	; 0x1dda <modf+0x58>
    1dc0:	8d cc       	rjmp	.-1766   	; 0x16dc <__subsf3>
    1dc2:	61 30       	cpi	r22, 0x01	; 1
    1dc4:	71 05       	cpc	r23, r1
    1dc6:	a0 e8       	ldi	r26, 0x80	; 128
    1dc8:	8a 07       	cpc	r24, r26
    1dca:	b9 46       	sbci	r27, 0x69	; 105
    1dcc:	30 f4       	brcc	.+12     	; 0x1dda <modf+0x58>
    1dce:	9b 01       	movw	r18, r22
    1dd0:	ac 01       	movw	r20, r24
    1dd2:	66 27       	eor	r22, r22
    1dd4:	77 27       	eor	r23, r23
    1dd6:	88 27       	eor	r24, r24
    1dd8:	90 78       	andi	r25, 0x80	; 128
    1dda:	30 96       	adiw	r30, 0x00	; 0
    1ddc:	21 f0       	breq	.+8      	; 0x1de6 <modf+0x64>
    1dde:	20 83       	st	Z, r18
    1de0:	31 83       	std	Z+1, r19	; 0x01
    1de2:	42 83       	std	Z+2, r20	; 0x02
    1de4:	53 83       	std	Z+3, r21	; 0x03
    1de6:	08 95       	ret

00001de8 <__divmodhi4>:
    1de8:	97 fb       	bst	r25, 7
    1dea:	07 2e       	mov	r0, r23
    1dec:	16 f4       	brtc	.+4      	; 0x1df2 <__divmodhi4+0xa>
    1dee:	00 94       	com	r0
    1df0:	06 d0       	rcall	.+12     	; 0x1dfe <__divmodhi4_neg1>
    1df2:	77 fd       	sbrc	r23, 7
    1df4:	08 d0       	rcall	.+16     	; 0x1e06 <__divmodhi4_neg2>
    1df6:	0b d0       	rcall	.+22     	; 0x1e0e <__udivmodhi4>
    1df8:	07 fc       	sbrc	r0, 7
    1dfa:	05 d0       	rcall	.+10     	; 0x1e06 <__divmodhi4_neg2>
    1dfc:	3e f4       	brtc	.+14     	; 0x1e0c <__divmodhi4_exit>

00001dfe <__divmodhi4_neg1>:
    1dfe:	90 95       	com	r25
    1e00:	81 95       	neg	r24
    1e02:	9f 4f       	sbci	r25, 0xFF	; 255
    1e04:	08 95       	ret

00001e06 <__divmodhi4_neg2>:
    1e06:	70 95       	com	r23
    1e08:	61 95       	neg	r22
    1e0a:	7f 4f       	sbci	r23, 0xFF	; 255

00001e0c <__divmodhi4_exit>:
    1e0c:	08 95       	ret

00001e0e <__udivmodhi4>:
    1e0e:	aa 1b       	sub	r26, r26
    1e10:	bb 1b       	sub	r27, r27
    1e12:	51 e1       	ldi	r21, 0x11	; 17
    1e14:	07 c0       	rjmp	.+14     	; 0x1e24 <__udivmodhi4_ep>

00001e16 <__udivmodhi4_loop>:
    1e16:	aa 1f       	adc	r26, r26
    1e18:	bb 1f       	adc	r27, r27
    1e1a:	a6 17       	cp	r26, r22
    1e1c:	b7 07       	cpc	r27, r23
    1e1e:	10 f0       	brcs	.+4      	; 0x1e24 <__udivmodhi4_ep>
    1e20:	a6 1b       	sub	r26, r22
    1e22:	b7 0b       	sbc	r27, r23

00001e24 <__udivmodhi4_ep>:
    1e24:	88 1f       	adc	r24, r24
    1e26:	99 1f       	adc	r25, r25
    1e28:	5a 95       	dec	r21
    1e2a:	a9 f7       	brne	.-22     	; 0x1e16 <__udivmodhi4_loop>
    1e2c:	80 95       	com	r24
    1e2e:	90 95       	com	r25
    1e30:	bc 01       	movw	r22, r24
    1e32:	cd 01       	movw	r24, r26
    1e34:	08 95       	ret

00001e36 <_exit>:
    1e36:	f8 94       	cli

00001e38 <__stop_program>:
    1e38:	ff cf       	rjmp	.-2      	; 0x1e38 <__stop_program>
